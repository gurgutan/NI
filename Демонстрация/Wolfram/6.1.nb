(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    701510,      12965]
NotebookOptionsPosition[    696580,      12864]
NotebookOutlinePosition[    698190,      12903]
CellTagsIndexPosition[    698147,      12900]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"ClearAll", "[", 
  RowBox[{
  "f", ",", "f1", ",", "f2", ",", "g", ",", " ", "s", ",", "x", ",", "x1", 
   ",", "x2", ",", " ", "W1", ",", "W2", ",", "w11", ",", "w12", ",", " ", 
   "w21", ",", " ", "w22"}], "]"}]], "Input",
 CellChangeTimes->{{3.8130636579963865`*^9, 3.8130636876070805`*^9}, {
   3.8130640731481323`*^9, 3.813064073708164*^9}, {3.813064131979497*^9, 
   3.813064133019556*^9}, {3.8130642842512064`*^9, 3.813064285162258*^9}, {
   3.813064593439891*^9, 3.813064624959694*^9}, {3.813065236156652*^9, 
   3.813065238195769*^9}, 3.8130666545617805`*^9, {3.8395763048153315`*^9, 
   3.8395763109736834`*^9}},
 CellLabel->
  "In[103]:=",ExpressionUUID->"fd7b657a-276f-43be-8ce4-100fb7afff3d"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["\[LineSeparator]",
  FontWeight->"Bold"],
 StyleBox["\:0413\:0440\:0430\:0434\:0438\:0435\:043d\:0442",
  IgnoreSpellCheck->True,
  FontWeight->"Bold"],
 StyleBox[" ",
  FontWeight->"Bold"],
 StyleBox["\:043f\:0440\:043e\:0441\:0442\:043e\:0439",
  IgnoreSpellCheck->True,
  FontWeight->"Bold"],
 StyleBox[" \:0444\:0443\:043d\:043a\:0446\:0438\:0438",
  FontWeight->"Bold"]
}], "Subtitle",
 CellChangeTimes->{{3.8130650525641513`*^9, 3.813065068069038*^9}, 
   3.8395762412696967`*^9},
 TextAlignment->Left,ExpressionUUID->"439ff0f9-6835-4e3f-a11f-92435b082b8b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"activation", "[", "x_", "]"}], ":=", 
   RowBox[{"Exp", "[", "x", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"z_", ",", "w_"}], "]"}], ":=", 
    RowBox[{"activation", "[", 
     RowBox[{"z", ".", "w"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "\:044d\:043a\:0441\:043f\:043e\:043d\:0435\:043d\:0442\:0430", " ", 
    "\:043e\:0442", " ", 
    "\:0441\:043a\:0430\:043b\:044f\:0440\:043d\:043e\:0433\:043e", " ", 
    "\:043f\:0440\:043e\:0438\:0437\:0432\:0435\:0434\:0435\:043d\:0438\:044f\
", " ", "x", " ", "\:0438", " ", "w"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"{", 
    RowBox[{"x1", ",", "x2"}], "}"}]}], ";", " ", 
  RowBox[{"W1", "=", 
   RowBox[{"{", 
    RowBox[{"w11", ",", "w12"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\"\<f(x,W1)=\>\"", 
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "W1"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<gradient=\>\"", 
     RowBox[{"MatrixForm", "[", 
      RowBox[{"Grad", "[", 
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"x", ",", "W1"}], "]"}], ",", "W1"}], "]"}], "]"}]}]}], 
   "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8130633589392815`*^9, 3.8130634986812744`*^9}, {
   3.8130636087195683`*^9, 3.8130636509829855`*^9}, 3.8130637036789994`*^9, {
   3.813063741471161*^9, 3.813063750782694*^9}, {3.8130638323423586`*^9, 
   3.81306391418104*^9}, {3.813064041012294*^9, 3.813064158187996*^9}, {
   3.81306428029898*^9, 3.813064305378415*^9}, {3.813064585921461*^9, 
   3.813064612023954*^9}, {3.8130646533843193`*^9, 3.8130646560564723`*^9}, {
   3.8130647857998934`*^9, 3.8130647879190145`*^9}, {3.83957638310981*^9, 
   3.83957643924502*^9}, {3.8395764723979163`*^9, 3.839576524468895*^9}, {
   3.8395766582445464`*^9, 3.839576665955987*^9}, {3.843962233546895*^9, 
   3.843962237502122*^9}, {3.8439626402031546`*^9, 3.843962687283848*^9}, {
   3.8439641015457387`*^9, 3.8439641121693463`*^9}, {3.8439641686175747`*^9, 
   3.843964253744444*^9}, 3.8439642840161753`*^9, 3.8439644038310285`*^9, {
   3.8439682616276817`*^9, 3.843968291979418*^9}, {3.8439683314366746`*^9, 
   3.8439683332757797`*^9}, {3.8439684208267875`*^9, 3.8439684227628984`*^9}, 
   3.8439740083350244`*^9, {3.843975641295493*^9, 3.843975669007078*^9}, {
   3.843975702703006*^9, 3.843975773606061*^9}},
 CellLabel->
  "In[260]:=",ExpressionUUID->"1d08771e-1500-48fd-8e42-61b8d38a86bd"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"\<\"f(x,W1)=\"\>", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"w11", " ", "x1"}], "+", 
         RowBox[{"w12", " ", "x2"}]}]]}]},
     {
      RowBox[{"\<\"gradient=\"\>", " ", 
       TagBox[
        RowBox[{"(", "\[NoBreak]", 
         TagBox[GridBox[{
            {
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"w11", " ", "x1"}], "+", 
                RowBox[{"w12", " ", "x2"}]}]], " ", "x1"}]},
            {
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"w11", " ", "x1"}], "+", 
                RowBox[{"w12", " ", "x2"}]}]], " ", "x2"}]}
           },
           GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.5599999999999999]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}],
          Column], "\[NoBreak]", ")"}],
        Function[BoxForm`e$, 
         MatrixForm[BoxForm`e$]]]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.84397571921195*^9, 3.843975775320159*^9}},
 CellLabel->
  "Out[263]//TableForm=",ExpressionUUID->"9805f191-372c-4c0b-8df5-\
03d23deeec21"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["\:0423\:0441\:043b\:043e\:0436\:043d\:0438\:043c",
  IgnoreSpellCheck->True],
 " ",
 StyleBox["\:0444\:0443\:043d\:043a\:0446\:0438\:044e",
  IgnoreSpellCheck->True],
 " \:0430\:043a\:0442\:0438\:0432\:0430\:0446\:0438\:0438"
}], "Subtitle",
 CellChangeTimes->{{3.8439759000202913`*^9, 
  3.843975916940259*^9}},ExpressionUUID->"0c8a1356-8ca2-4303-b230-\
73b05d3b3e32"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"activation", "[", "x_", "]"}], ":=", 
   RowBox[{"Exp", "[", 
    RowBox[{"-", 
     RowBox[{"x", "^", "2"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"z_", ",", "w_"}], "]"}], ":=", 
    RowBox[{"activation", "[", 
     RowBox[{"z", ".", "w"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "\:044d\:043a\:0441\:043f\:043e\:043d\:0435\:043d\:0442\:0430", " ", 
    "\:043e\:0442", " ", "\:043c\:0438\:043d\:0443\:0441", " ", 
    "\:043a\:0432\:0430\:0434\:0430\:0440\:0430\:0442\:0430", " ", 
    "\:0441\:043a\:0430\:043b\:044f\:0440\:043d\:043e\:0433\:043e", " ", 
    "\:043f\:0440\:043e\:0438\:0437\:0432\:0435\:0434\:0435\:043d\:0438\:044f\
", " ", "x", " ", "\:0438", " ", "w"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"{", 
    RowBox[{"x1", ",", "x2"}], "}"}]}], ";", " ", 
  RowBox[{"W1", "=", 
   RowBox[{"{", 
    RowBox[{"w11", ",", "w12"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x", ",", "W1"}], "]"}], ",", 
   RowBox[{"MatrixForm", "[", 
    RowBox[{"Grad", "[", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"x", ",", "W1"}], "]"}], ",", "W1"}], "]"}], "]"}]}], 
  "}"}]}], "Input",
 CellChangeTimes->{{3.8439627000105753`*^9, 3.843962705762904*^9}, 
   3.843964145114231*^9, {3.843968568522235*^9, 3.843968569921315*^9}, {
   3.8439739941918755`*^9, 3.8439740001105537`*^9}, {3.8439759312290764`*^9, 
   3.843975936453375*^9}},ExpressionUUID->"339e1968-9e54-4beb-8e1b-\
cbbad5f0af71"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"w11", " ", "x1"}], "+", 
        RowBox[{"w12", " ", "x2"}]}], ")"}], "2"]}]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"w11", " ", "x1"}], "+", 
               RowBox[{"w12", " ", "x2"}]}], ")"}], "2"]}]], " ", "x1", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"w11", " ", "x1"}], "+", 
            RowBox[{"w12", " ", "x2"}]}], ")"}]}]},
        {
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"w11", " ", "x1"}], "+", 
               RowBox[{"w12", " ", "x2"}]}], ")"}], "2"]}]], " ", "x2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"w11", " ", "x1"}], "+", 
            RowBox[{"w12", " ", "x2"}]}], ")"}]}]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{{3.839576244021854*^9, 3.8395762537234087`*^9}, 
   3.839576314441882*^9, 3.8395764482155333`*^9, 3.8395765262059937`*^9, 
   3.8439627088370805`*^9, 3.8439641487694397`*^9, 3.8439643024172277`*^9, {
   3.843964334645071*^9, 3.8439643625766687`*^9}, 3.8439644069832087`*^9, 
   3.843968607827483*^9},
 CellLabel->
  "Out[112]=",ExpressionUUID->"29dfd9f4-eb38-4ec5-92c7-da06a0010708"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"activation", "[", "x_", "]"}], ":=", 
   RowBox[{"Exp", "[", 
    RowBox[{"-", 
     RowBox[{"x", "^", "2"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"z_", ",", "w_"}], "]"}], ":=", 
    RowBox[{"activation", "[", 
     RowBox[{"z", ".", "w"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "\:044d\:043a\:0441\:043f\:043e\:043d\:0435\:043d\:0442\:0430", " ", 
    "\:043e\:0442", " ", "\:043c\:0438\:043d\:0443\:0441", " ", 
    "\:043a\:0432\:0430\:0434\:0430\:0440\:0430\:0442\:0430", " ", 
    "\:0441\:043a\:0430\:043b\:044f\:0440\:043d\:043e\:0433\:043e", " ", 
    "\:043f\:0440\:043e\:0438\:0437\:0432\:0435\:0434\:0435\:043d\:0438\:044f\
", " ", "x", " ", "\:0438", " ", "w"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"{", 
    RowBox[{"x1", ",", "x2"}], "}"}]}], ";", " ", 
  RowBox[{"W3", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"w11", ",", "w12"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"w21", ",", " ", "w22"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Grad", "[", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"x", ",", "W3"}], "]"}], ",", 
      RowBox[{"W3", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"Grad", "[", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"x", ",", "W3"}], "]"}], ",", 
      RowBox[{"W3", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.843968670922092*^9, 3.843968726641279*^9}, {
  3.843968852481477*^9, 3.843968872559625*^9}, {3.8439689402714977`*^9, 
  3.843968941255554*^9}, {3.843975833782503*^9, 3.8439758551437244`*^9}, {
  3.843975943981806*^9, 3.8439760121487045`*^9}},
 CellLabel->
  "In[284]:=",ExpressionUUID->"81815908-0fee-456a-b04f-d7cb395ce42f"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           RowBox[{
            RowBox[{"-", "2"}], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"w11", " ", "x1"}], "+", 
                 RowBox[{"w21", " ", "x2"}]}], ")"}], "2"]}]], " ", "x1", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"w11", " ", "x1"}], "+", 
              RowBox[{"w21", " ", "x2"}]}], ")"}]}]},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {
           RowBox[{
            RowBox[{"-", "2"}], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"w12", " ", "x1"}], "+", 
                 RowBox[{"w22", " ", "x2"}]}], ")"}], "2"]}]], " ", "x1", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"w12", " ", "x1"}], "+", 
              RowBox[{"w22", " ", "x2"}]}], ")"}]}]}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           RowBox[{
            RowBox[{"-", "2"}], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"w11", " ", "x1"}], "+", 
                 RowBox[{"w21", " ", "x2"}]}], ")"}], "2"]}]], " ", "x2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"w11", " ", "x1"}], "+", 
              RowBox[{"w21", " ", "x2"}]}], ")"}]}]},
          {"0"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"0"},
          {
           RowBox[{
            RowBox[{"-", "2"}], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"w12", " ", "x1"}], "+", 
                 RowBox[{"w22", " ", "x2"}]}], ")"}], "2"]}]], " ", "x2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"w12", " ", "x1"}], "+", 
              RowBox[{"w22", " ", "x2"}]}], ")"}]}]}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.843968742303175*^9, {3.8439688651221995`*^9, 3.8439688758598137`*^9}, 
   3.8439689423106146`*^9, 3.8439758009556255`*^9, {3.8439758388237915`*^9, 
   3.8439758555757494`*^9}, 3.8439759494301176`*^9, {3.8439760012170796`*^9, 
   3.8439760132857695`*^9}},
 CellLabel->
  "Out[287]//MatrixForm=",ExpressionUUID->"1781bf90-76dd-49a4-b800-\
2fa2c9b72ee7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["\n\:0413\:0440\:0430\:0434\:0438\:0435\:043d\:0442",
  IgnoreSpellCheck->True,
  FontWeight->"Bold"],
 StyleBox[" ",
  FontWeight->"Bold"],
 StyleBox["\:0441\:043b\:043e\:0436\:043d\:043e\:0439",
  IgnoreSpellCheck->True,
  FontWeight->"Bold"],
 StyleBox[" \:0444\:0443\:043d\:043a\:0446\:0438\:0438",
  FontWeight->"Bold"]
}], "Subtitle",
 CellChangeTimes->{{3.8130650250365767`*^9, 3.813065038573351*^9}, 
   3.8439756159830456`*^9},
 TextAlignment->Left,ExpressionUUID->"fbdc7736-7aa8-43ed-8264-f507e64842c5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f2", "[", 
    RowBox[{"x_", ",", " ", "w1_", ",", " ", "w2_"}], "]"}], ":=", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "w1"}], "]"}], ",", " ", "w2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"W2", "=", 
   RowBox[{"{", 
    RowBox[{"w21", ",", "w22"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"Grad", "[", 
   RowBox[{
    RowBox[{"f2", "[", 
     RowBox[{"x", ",", "W1", ",", "W2"}], "]"}], ",", 
    RowBox[{"Join", "[", 
     RowBox[{"W1", ",", " ", "W2"}], "]"}]}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.813063920031374*^9, 3.813063967181071*^9}, {
   3.813064012565667*^9, 3.81306401926905*^9}, {3.813064240443701*^9, 
   3.813064346993795*^9}, 3.8130643795466566`*^9, 3.813064501929657*^9, {
   3.813064533297451*^9, 3.813064538088725*^9}, 3.813064608504752*^9, {
   3.8130646724804115`*^9, 3.8130646998479767`*^9}, {3.8130647709920464`*^9, 
   3.8130647755913095`*^9}, {3.813064826391215*^9, 3.8130648272862663`*^9}, {
   3.839576556581732*^9, 3.8395765577798*^9}, {3.8439693274936457`*^9, 
   3.843969427307355*^9}},
 CellLabel->
  "In[397]:=",ExpressionUUID->"73407c85-b3ff-4b07-9ee5-806323cc9a60"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"-", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"w11", " ", "x1"}], "+", 
                  RowBox[{"w12", " ", "x2"}]}], ")"}], "2"]}]], ".", 
             RowBox[{"{", 
              RowBox[{"w21", ",", "w22"}], "}"}]}], ")"}], "2"]}]], " ", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"w11", " ", "x1"}], "+", 
              RowBox[{"w12", " ", "x2"}]}], ")"}], "2"]}]], ".", 
         RowBox[{"{", 
          RowBox[{"w21", ",", "w22"}], "}"}]}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"w11", " ", "x1"}], "+", 
                RowBox[{"w12", " ", "x2"}]}], ")"}], "2"]}]], ".", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
          "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"-", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"w11", " ", "x1"}], "+", 
                  RowBox[{"w12", " ", "x2"}]}], ")"}], "2"]}]], " ", "x1", 
             " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"w11", " ", "x1"}], "+", 
               RowBox[{"w12", " ", "x2"}]}], ")"}]}], ")"}], ".", 
           RowBox[{"{", 
            RowBox[{"w21", ",", "w22"}], "}"}]}]}], ")"}]}]},
      {
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"-", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"w11", " ", "x1"}], "+", 
                  RowBox[{"w12", " ", "x2"}]}], ")"}], "2"]}]], ".", 
             RowBox[{"{", 
              RowBox[{"w21", ",", "w22"}], "}"}]}], ")"}], "2"]}]], " ", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"w11", " ", "x1"}], "+", 
              RowBox[{"w12", " ", "x2"}]}], ")"}], "2"]}]], ".", 
         RowBox[{"{", 
          RowBox[{"w21", ",", "w22"}], "}"}]}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"w11", " ", "x1"}], "+", 
                RowBox[{"w12", " ", "x2"}]}], ")"}], "2"]}]], ".", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
          "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"-", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"w11", " ", "x1"}], "+", 
                  RowBox[{"w12", " ", "x2"}]}], ")"}], "2"]}]], " ", "x2", 
             " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"w11", " ", "x1"}], "+", 
               RowBox[{"w12", " ", "x2"}]}], ")"}]}], ")"}], ".", 
           RowBox[{"{", 
            RowBox[{"w21", ",", "w22"}], "}"}]}]}], ")"}]}]},
      {
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"-", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"w11", " ", "x1"}], "+", 
                  RowBox[{"w12", " ", "x2"}]}], ")"}], "2"]}]], ".", 
             RowBox[{"{", 
              RowBox[{"w21", ",", "w22"}], "}"}]}], ")"}], "2"]}]], " ", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"w11", " ", "x1"}], "+", 
              RowBox[{"w12", " ", "x2"}]}], ")"}], "2"]}]], ".", 
         RowBox[{"{", 
          RowBox[{"w21", ",", "w22"}], "}"}]}], " ", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"w11", " ", "x1"}], "+", 
              RowBox[{"w12", " ", "x2"}]}], ")"}], "2"]}]], ".", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}]}]},
      {
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"-", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"w11", " ", "x1"}], "+", 
                  RowBox[{"w12", " ", "x2"}]}], ")"}], "2"]}]], ".", 
             RowBox[{"{", 
              RowBox[{"w21", ",", "w22"}], "}"}]}], ")"}], "2"]}]], " ", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"w11", " ", "x1"}], "+", 
              RowBox[{"w12", " ", "x2"}]}], ")"}], "2"]}]], ".", 
         RowBox[{"{", 
          RowBox[{"w21", ",", "w22"}], "}"}]}], " ", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"w11", " ", "x1"}], "+", 
              RowBox[{"w12", " ", "x2"}]}], ")"}], "2"]}]], ".", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.839576536816601*^9, {3.8439642961208677`*^9, 3.843964318757162*^9}, {
   3.843964357105356*^9, 3.843964365482835*^9}, 3.843964410224394*^9, 
   3.843975624300521*^9, 3.843976405666213*^9},
 CellLabel->
  "Out[399]//MatrixForm=",ExpressionUUID->"98008cbc-8cab-442f-863a-\
de0ce6cd5c14"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["\n\:0413\:0440\:0430\:0444\:0438\:043a\:0438",
  IgnoreSpellCheck->True,
  FontWeight->"Bold"],
 StyleBox[" ",
  FontWeight->"Bold"],
 StyleBox["\:043f\:0440\:043e\:0438\:0437\:0432\:043e\:0434\:043d\:044b\:0445",
  IgnoreSpellCheck->True,
  FontWeight->"Bold"]
}], "Subtitle",
 CellChangeTimes->{{3.8130651966673937`*^9, 3.813065219195682*^9}, 
   3.8439756023662663`*^9},
 TextAlignment->Left,ExpressionUUID->"117337d6-233f-4081-abbc-a3e1c8768df0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"g", "[", "s_", "]"}], ":=", 
    RowBox[{"s", "^", "1.5"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"g", "[", "s_", "]"}], ":=", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"s", "^", "2"}]}], "/", "4"}], "]"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"g", "[", "s_", "]"}], ":=", 
     RowBox[{"Tanh", "[", "s", "]"}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"h", "[", "s_", "]"}], ":=", 
   RowBox[{"g", "[", 
    RowBox[{"g", "[", "s", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"h1", "[", "s_", "]"}], ":=", 
   RowBox[{"g", "[", 
    RowBox[{"h", "[", "s", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"g", "[", "s", "]"}], ",", 
     RowBox[{"N", "[", 
      RowBox[{
       RowBox[{"g", "'"}], "[", "s", "]"}], "]"}], ",", 
     RowBox[{"N", "[", 
      RowBox[{
       RowBox[{"h", "'"}], "[", "s", "]"}], "]"}], ",", 
     RowBox[{"N", "[", 
      RowBox[{
       RowBox[{"h1", "'"}], "[", "s", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"s", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8128959436786795`*^9, 3.812896024691622*^9}, {
   3.812896533348318*^9, 3.8128965479695435`*^9}, {3.8128967217622504`*^9, 
   3.812896742713087*^9}, {3.8128967862371635`*^9, 3.8128968129132104`*^9}, {
   3.812896859775693*^9, 3.812896895329155*^9}, {3.812896990967324*^9, 
   3.8128970173011703`*^9}, {3.812897050937829*^9, 3.812897189235072*^9}, {
   3.8128973266345143`*^9, 3.81289738114301*^9}, {3.812897786907124*^9, 
   3.8128977956119394`*^9}, {3.8128978539816422`*^9, 3.812897861610056*^9}, {
   3.8128982753763847`*^9, 3.8128982936762166`*^9}, {3.812898383315974*^9, 
   3.812898389399985*^9}, {3.812898449632691*^9, 3.812898472203331*^9}, {
   3.8128985110181994`*^9, 3.8128985110961995`*^9}, 3.812898586398532*^9, {
   3.8128986557572536`*^9, 3.8128986873629093`*^9}, {3.812898720078167*^9, 
   3.812898720218567*^9}, {3.8128987562234306`*^9, 3.8128988667088246`*^9}, {
   3.812898975038415*^9, 3.812898981309626*^9}, {3.813064918007455*^9, 
   3.813064932838303*^9}, {3.813064972046546*^9, 3.813064995757902*^9}, 
   3.813065221204797*^9, {3.81306527073263*^9, 3.8130652786290817`*^9}, {
   3.813065310308893*^9, 3.813065340123599*^9}, {3.8130660160552597`*^9, 
   3.813066026062832*^9}, {3.8130660745906076`*^9, 3.8130660967338743`*^9}, {
   3.8130662133345437`*^9, 3.813066219316886*^9}, {3.813066278125249*^9, 
   3.8130662886688523`*^9}, {3.813066374004733*^9, 3.8130664218034673`*^9}, {
   3.8130665004689665`*^9, 3.8130665065313134`*^9}, 3.813066590618123*^9, {
   3.813066683769451*^9, 3.8130666928419695`*^9}, 3.8130670319683666`*^9, {
   3.813067065840304*^9, 3.8130670670393724`*^9}, {3.813067163975917*^9, 
   3.8130671700392637`*^9}, {3.813067211806653*^9, 3.8130672124466896`*^9}, {
   3.843969582614238*^9, 3.843969602443372*^9}, {3.843969725345402*^9, 
   3.843969745058529*^9}, {3.843969921097598*^9, 3.843969921744635*^9}, {
   3.843974297237549*^9, 3.84397429882964*^9}, {3.8439746589743075`*^9, 
   3.843974659382331*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"ce17cbda-db79-4215-a0aa-6a41e39920bc"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVzHk41AkAxnGbHFHIE9JGSO7kqCyWV6FUtOjgcWtdGbma0JJcbdG0JqxE
rhy5MpR23BkSkrBTKIQIzTbzM8mZWP3xPt/n+fzxyp8LsPXcwMPD47S+H604
ah8Xv6XJWEPLkevYoGSsITrsy7dXEV0jfRm/8DUZ93FjssUWLbAoWWJ+VmTe
eOY35S8BwWcRSBkt8UkVQnjykRek/W4gJ7bOa4hJYTXyckb2Pk+k8dsIiRjJ
I8q3zI+p5ovSSkvS/WJl8J4dMRJQCkBW7AkFgzpNtMjFX88UCwaT2CP+TVsX
cakKgXp/kXF7VbQiwlIPRzbX2/cKh+JEyt8+tUWGaF/gqPIJRKCroPOAMuUw
Ei7cEM+Oi4SrwozMZ3FzFHKpV3ZGR2HT6tpyYdVReHuref2zGoMLknaUWTMr
WCiEOsQaxeHqN7N9Y9utoTLcctI64hqiq/QDV9JtwLJ11mMtXQfVoVp0ruk0
/IypgrJzFNz7WKg7ddMRNULhb5ovJaPRQztKPMQTOXslmDSFFIyxTLPTU73w
pzWt5153CkRtNOw21nvjdOp4Z4hqKkiRg7XqEr6YkbdsVhtOw3PDTO7zVX8o
6cvQksyysOhxIJjeQ8ZmJ3rZVW4WyOllqlJxlzAbaVPil5UNHfO5YX/9ELh9
aLbdHZGDHQPpjJniUGiqLFh9f5OLsGJ+jcrcP9Dx2NWsMj4fhwpbSVLkKPza
qtGiPJoP69UVZ9JQFCr6lg5lHSzASDGvSZp5NFKXknFzvACnFR04l3bEwAPt
Bp5GD3BxsG1C/FUs1l5oaUtzi3FUzXJnlON1HPjwk2y0PQ1bKd5JwvyJ0Ky1
42oV00DtPj8mH5kIpaSHz0aXaJClh97pnU+EcG7ZgRyrCtS61Eh/J1OxYm0/
tMapQNDIUM9D0m0MV9BUn2o/grZKI2PMKxnZgS7PjOhV4C8VPuWadAe7Z+qW
DJprUMaw1wm1y0FEl2ncV3YNGKHtTMXoHPSVdIqUS9fi3oJq0VxJDhI8B3fL
B9Xi92XWRZ61HMy8W7YSkKuDzzZvf3pRLhpb9e8zr9RjZ91CfNKGPDhk0I/7
6T+FjjbPtqPdBTiW97brpH0zmoSiDPPbSmFuJc4796QNKolJpgs+VUh07Y/S
or+Ev9xdbrVuHdpOymyxFu+FzqGYcIv7DLDlJSL/TWdCw5RdGvm4FZfI6u6J
kn2In26IZM52oH9IzNarfQCWpF2TS/2v4Hb51ykBy0F43923ncHsRYu6XkIL
33tMdzrfEaG+htKm+ul8i1FsvsLo8jLsh0w9yZzvxhgiPBweds++Bc/yhuLg
Dx/wwnvuFp13GAs2DS6teyZADYoh710aweB+15/3xH0EArf4Z+aPIdBObKvC
0CQMqpcbTGzHIZ0yYb9RZhox38nmdzkTKHfMeTAb9glwORWwWDMJO6OrFu0N
LGDbSznR4GlUulxQMFj5Dybt75oZ6iwsCpny1pxhQ8I/s0dH8jNsew0PyqRx
4LTQMaXIYkPIUJhRn8mBgZ7DfY8vbDDy351wyuNgWWpMtmCZDa2wy+4Z5RxM
Jdx0VhHmQGQXnSLdykEu4U7oaXDQ4aczLvGFA8Hg9DPh/hyYCKpSRSwJxNZ6
VCbNcrAYtLij3IYAP7XoBusbB7TBtgIrOwI2RY92mW4kIEvzqqOcI9Dd+5oy
v43Aypn8SaHLBCZcAt29DhKg5+0yEigkoKsq8vH8uvtvIdoKSwlw3GkVXdEE
lEIbbY9Urv9X8RnqJBBIOe7sc62ewOalWze/pxMI5qYn8zIJVJ/avyNz3dUc
fWXzBggMxRW85W8lMPZMv/jwewLxbDO7oC4C1mkDjdGfCPge66RYrLvghqJj
8gSBkhqq2ZNJAk9Joa+bvhK45nioVmHdQ94ccXVbJkANe8mmLhDQhCRrbY1A
p4v8yI/+D7/c1sA=
          "]]}, Annotation[#, "Charting`Private`Tag$9314#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Mvd6cnqaxH+TnAbA
          "]]}, Annotation[#, "Charting`Private`Tag$9314#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVxX081HcAB3BfD8tDDzTaWiPOQ92Js141K/T5NeUhT5fCLYUkiku6HmQZ
EaJVFJOpyFxK5JzoUhKHF1pey66kPCQPTeR+R+REbPvj/XobBR703KuspKS0
5T//X+rITUhZULPhlimr4FRM4oZVi7pC1SxM8PALRD9Zp4q20fhcbYUTKrJ4
ufOLVkPusWLsIN8bnzx0rdQP2uNEusPjsDUBEDXkoafWHbMxUZdz2XtxXuPX
hlexXjgZWsyTskLxe/Qin4hZX9QZppy+qs2HjeHam5/HgpCQyYiwPn8E9l3O
Ljdy9sFhfhW3VSsSStMX3B1DeGialDHV5kXjscKAZhjzERLCCr47G4/UK+kM
SdLPcGJE7jhll4AOpsC2RhyNlV117pzoRHD2vy4+NBqDIc9d1kNTp2Hj9VF8
rzoOvA1p6gYTZzEbmPw+LzIJlZonnkuOpkNsYbu/ZmMarlnoSYWMDHwuk2gu
m0xDEkf49MpfGUjimT2auX0B2zP7/jzGzMRP5SM32IbpkBu5SlhdWTicHVwY
rJcJs3X6woubchBUylfIba+g+Y7/JlGKAN+ugAa7RIC1vcQgjivEst1dtsln
RLC87zNqVShEbUEgS6tOBLOLt+t7poQYiL1uUjYtglZe8dprbqVQucRhhx0o
wwyH2zknK8XkXBgv3vMOukqFzEfflcHjS2n4IuMK5Eb41duJy+F2osKQ0XkP
xvIHU+sllcje8ziE7VkD5/yXLe5cCaaTQpyT9zZjs9tilYmKRugORzrLY1uR
6v/ipJX4CVYUHc/5w6YNje76CziLW5EW3p9Umd2BESO9mL+zpWhxZOn8sq8H
R4+Y705d0oaXIpdtLVp9eNGp7Rnc1I7tHfaCHbMDCIiy/WeeawdMrmuILFoH
UWdufaZOrRvClc9G6z8Mw0yjalDg1AP1kuCK3lEZ9KvCNqslv8HdhvJDbZNy
KH1SLuT39sIlxbt8JGcMk1sf+jWY9kM1xvFrsdU4Otb4LzNNGEAQeUcchycQ
4aOtw+h8i4vWOh4lgkkszejnquoPgtu3y8LbYQolvtdufDj+DveLp1v8dKbh
Yxfr1PRwCL2WbOeYuhmI/A4w1s8M4yP3N2V9/iwUmvYqlV4j6DYftg8wVaI8
W22+18+SYfETauNOVUJp2mjVVl2V4ZjktfVmdULVCl657MyXwazz6E7L+YSy
Oh61+3KJDBLzcDbRJdTC5eKzSxtkmDjXPX3TmFDNvNV9emMy8M6ASewJRakz
0xa60uikjtySxhFKcUjxTclWGgXPO7ZJEgkl7Gi87uZDw+P9YZYohVAGwuAH
ZwNpSNz0/VMvEGrGS/BWM4qGnU7RgFseocT5y+3mFdCI2hoaKK0hVPgCurGg
iEbLHtXO+npCmUVWezqIaLidC4+/20SojC279iVW0chzveyV/ZRQ/NHsdBUp
jfYPQt2gHkKxfEMN8ttpVDNNxr37CfWmfl3hj900Asd/UNoySChOVnt13Dsa
pwpX5VjJCaWufNPZiKbh1zzHNhkn1KOwyGc14zRKB31lXykIdey5g3/AJxp3
zGxeas0QyhJLhubmaIQLLsnn5gj1L4jVNKc=
          "]]}, Annotation[#, "Charting`Private`Tag$9314#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVk/k/lAsDR0UyxpK6UZSKLNkpypL5PqVkzVJZC5UtpaSE7FJabEUoS0RE
rhkiFMkgDJI7YWyJurJkhlJRlve+P5zP+QfOkTp53tqNm4uLi/of/zftoF3U
TaHXFK/H+47smNXWV1496MWrIgMTjRo9vZsKlO6ZyIcic0Y4tarp+FRHBGXa
Qv7beV8baO130lCezqYEJRoyzmi6oC0yXsTSr5yyFBqY9lDNDbJrDdp1DzZQ
wr2KzjIVvfDN96bBfM07Co/NkD6f3Hk4DUmpKR3updRvvRmdIeILvr4voo3c
I5SoZGmf3XGX4Or41G31lTGKoWC1XaeAP650VbG7hacpfJFH9565GYh/nvtr
eITMUpp/sRV4+YKRfeV09se4ecot7xtrH0aFooXOoAsZL1PyZhJCNkWEYyZm
1r6MxY3rRYMXxmsjYOgg/+6u+yp4eCi6P1+KRGVh1L0MSzKMpP0drupHQZ1k
UaB5XxjbB+sPWQZfQ6LmDYZF9hrwp4oYSL68jqMSZhPR8uswYX1898R8NBKI
Vh+rj2JgCBUqVWjfhAhP4O+SNnE8bf65Jcr/Fv469b4xb2oTzlISSJt/xKDJ
Vls0bkwK5vMDCxM742Ab5hlaxdgG1TKFmQrfeKyoe1nD2yKLuaThr9vnErBW
UWeofKMiPL/xecSn3AGNokWf8lEGy0J1+Meuu5D7Y9TO/qSKKnJQF90vEfGk
nce91+5AloookyqdBNXaKpn51J24bkl9l96RhHHuOwI/NLRwJPlT62WFZPCq
/5GWT9eGXlVIy6nuZCxpzrp2eOtCemB9k+XVFBSnnl/VZr0H01JmdMXBVBw4
UhXerkSgZ/9o7fpb9+HHTMmZ1NuLVx7hNSt3P0DdHvUpSZt9uP13WeWHhDSI
Tq8RkynYDzkdSerd/Zm4yvjR5dpmDMFjFUVhM5nIaH1j2aVmiu+hVoVnMx+i
N8r2qkSmGVxG6NbbgrPwTMvjW3CaBVS3/zJf7MqGH0UwmEf4MB7pNLRdVH6E
J/a5mvu+Hoao6R3TichHqBHWjtn77ggWvJWMe9RywL+xt7WwwAYtz5z3l9zM
xUZqiQIlxwF7GpXr5T/mImRIweo+zRG07vm9mbseY35NfwFPwzEkzyfi9qfH
OJcHM6VFJ7iiWddNPx+sGNLpTwMnwLK8V9WfmA/ZGinbQ8EnYXrypLb1RD6o
EQ/E/t18CjuuLWgh5Qm8dOqP53u7YpmhriE+UwBqTem+nxoe8B1YpMYfLEQs
s1l796QHRqcYqqsyC3Haee/zxnxPtIm4KX83eYovNM+g/v8+emBzX749twgS
RADL3t4bWiMrNkfYUVGp4q5xVcUXqi9sZ9QLqHhs66xzOsMXcnf/bvg4T0Xq
+t7VfcIXIZBdpJVlToP48J1VJ39exIKl3cAym4bODSnUnSw/DNKoCrUapaic
uha4cSwQfekOf613KMWNjspJ+wtX0H2Dd/FcZCkOsNyKdBau4K2L47vNzFIY
x9RdHBELxisRPv/QS88Q8n1Kbck5FA99nBr0K8rA5vpeQmRHIP0Yf/G9oTI8
tQr6qP09AqlGZSlTfOWomDMjCRpGImEr+UyGXTn0Mz2rD7AjEf6ufM3ifDly
+Vi9642jcEJdyLl6TwXWrFldXrM9GtumX87r0qsgsjGsa1tSLILbDaJmp6qQ
kpWzmy0Qh+7CVuFi8Rd4mfM4oyMqDrfc+rdJXXgB41GWZl9gPKb7fpvzbX2J
pxty/0moTMCrRp1HzJBqNGU5/4lm3MWGnDrl2IJqfDnv3G6+OhG+4cYVhl3V
GFXvCMg9kghZPfu2KuUa7AuLzuMdTkQMLeDnw/4azOXK2mRx3YNDWoXJWZ1a
qBo96gpxTEFZALpk3WpxxOjtcf+CFAjbNDkPJdQi40t+06q5FNSJ9FyyHquF
QcjzgLHkVKwzCLJIN32NXx0DrbX99xFU+SAw8vdr9M/76K+ITIdxTm/7ITs6
fKIyznhLZWP6WrF7ozcdgo4BsSpW2Uj1vLqsd5WOrIFIV92IbIypqGgoFNNh
IfCxQnckGzcqw5N4VtYDITeTe/Mfobld3rGSWg+nL0sLRXtzcXDOb0yKrxEb
13lLxtDywe4ziUjd1AiS5585qf86T67ZIrF6RyOcZaJjSDJPMBrZYrpwrBFd
yZdsmlOf4LqQJLW7tBHvEkPbRa8X4I10g99tpzeYPPajmdvnKQ6Yr+X5Ud4E
ra+1lB8RVMSd4J+Zb2lCSqGquFEdFSw/rqGlwSaYS09q+HLR4JXJfkFa1Yyi
FDVmMEFDHIfhu8mmGa56HaVmdBpYd66OGPxshlaL8NjHthJ4dc/W3d3FgMrk
DrLi0jM8m5ikppgwcJp+1j9cugwLSyMZ6U4MBNnzrVw0LEOcfGdg3nUGpEl9
eZ4JZXgW8LfGi24G6vs09wnIlmNBwj17+HIr5rXkdaKPPke8c0+4ekUbdr8M
vZDLrMT1r3sw2taGVYpqxRZcVQgNfLSYNtIG5VgHCwWVKpxL9L7CJ9yOlsSo
7x7RVTjUxHPpg2s7Eh6Fqa+jvICwmrpHzNq38OGVeL+z7CXilm6Yj3l3IC34
geF4/Ss0HZIUslzbiWGHzx7fq+hYpzos5rupE7o9DB3X93S4CD3emiTXiaRn
K9Mn2HT8blXWZOl24lhXkoy2TD2Ujfc4upzqxE6dstbu+HokGDgW+JR1IlQp
P1XuTAMctO8fuGPzDzbIfebX2PEGU1Kiof88YOKzmTbrGzcD2kHZF+pymQh7
ajBjIs1A5HsVN1oxE4X1coOVexkQizY0i6Mzsf3non53OAOUr/4SJhNMRPme
TVnP1Yr4533P63Tewz9jhqjkboOGaRaHxnqP1LjM8dgNb+F3SelEvFg3AoWe
7Co36ETPgIi1ezMLn/b5ipiXdMMlcM8XPrN+zPv3buy5PYB6pd236nk/YEAh
Kzzt8zDk+KvHco0+wmDOJ2xr+b+QrD5zgPfGMERETtgJfxgH12/uAt+REYx7
JVxcN8jGL6sap0bZz+Bna//esjyDfk3njbJR/4K/IZ7jzf8DPrYia6QHRrE9
XCWHbjIH8aTPdislx2DW6b7aNvEPih2z8r8HjEPnlypT8/QybPXDjJprJnAx
1iDqSdYKosTJW1p3YRLvXAQX9XN4iDmyAU/V0SmcFO88p/+Tl7Du1NslmcpG
92Gt1qD9JIKsJ1BXncFGnPdBflELElGX22d6LIcNA5fRWZo9iVAPCDyRVszG
gYfRXdPnSITwlooY8UY2xP+E1SXcJxEtZ3d8Ev3GxkrtK95WHBJBkBQShM04
sD0l6NSTzk/MXZiTKLbiQNC0+cmbfH6C2t/02NyWg8vmU3mVpfzEZqr7y5iT
HMQ2K7/KbeYnFo7mjpIDOQgNTTmeMctPVORs0efL4+Cu6IsbIuZk4pwQpynv
KQfMY+1blOzIhJz/K2vDEg40F9W8jU6RiSST457Xqjmwl0lXuh1IJnxnHiTy
MDmQmNy0RyOPTCg6em3OYXEgsFRx60QJmRhu0CnY94EDq7S/7iRVkwnLVNar
iHEOsooaGrmZZILE/cRYisPBkNrlWf0PZKL2jP/717Mc9Dhm9QeNk4nLXYbO
Lr85CFa6EFQ9SyZUITaxvMwBLUns/fIymfgf189Acw==
          "]]}, Annotation[#, "Charting`Private`Tag$9314#4"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-1, 1}, {8.865403686457026*^-14, 3.374999672831642}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"g", "(", 
         TagBox["s", HoldForm], ")"}], 
       RowBox[{"N", "[", 
         RowBox[{
           SuperscriptBox["g", "\[Prime]", MultilineFunction -> None], "(", 
           TagBox["s", HoldForm], ")"}], "]"}], 
       RowBox[{"N", "[", 
         RowBox[{
           SuperscriptBox["h", "\[Prime]", MultilineFunction -> None], "(", 
           TagBox["s", HoldForm], ")"}], "]"}], 
       RowBox[{"N", "[", 
         RowBox[{
           SuperscriptBox["h1", "\[Prime]", MultilineFunction -> None], "(", 
           TagBox["s", HoldForm], ")"}], "]"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8395765927868023`*^9, 3.843964438758026*^9, {3.8439695839863167`*^9, 
   3.8439696036744423`*^9}, 3.843969746788628*^9, 3.8439699228847003`*^9, {
   3.843974660168376*^9, 3.8439746625545125`*^9}},
 CellLabel->"Out[67]=",ExpressionUUID->"8bf31144-d2ff-44d6-b5d0-ddfa8a86dde2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["\n\:041f\:0440\:043e\:0431\:043b\:0435\:043c\:0430",
  IgnoreSpellCheck->True],
 " ",
 StyleBox["\[OpenCurlyDoubleQuote]\:0432\:0437\:0440\:044b\:0432\:0430\
\[CloseCurlyDoubleQuote]",
  IgnoreSpellCheck->True],
 " \:0433\:0440\:0430\:0434\:0438\:0435\:043d\:0442\:0430 ",
 StyleBox["\:0441\:0442\:0435\:043f\:0435\:043d\:043d\:044b\:0445",
  IgnoreSpellCheck->True],
 " \:0444\:0443\:043d\:043a\:0446\:0438\:0439"
}], "Subtitle",
 CellChangeTimes->{{3.843974063382173*^9, 3.843974096622074*^9}, {
   3.8439741291099324`*^9, 3.8439741301019893`*^9}, {3.8439742593893843`*^9, 
   3.8439742720611086`*^9}, 3.8439755980310183`*^9, {3.8439760825237303`*^9, 
   3.8439760949314394`*^9}},ExpressionUUID->"534433d2-288a-4802-92f3-\
7e0c765c7132"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "s_", "]"}], ":=", 
   RowBox[{"s", "^", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"t", "=", 
   RowBox[{"RecurrenceTable", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"a", "[", 
         RowBox[{"n", "+", "1"}], "]"}], "\[Equal]", 
        RowBox[{"g", "[", 
         RowBox[{"a", "[", "n", "]"}], "]"}]}], ",", " ", 
       RowBox[{
        RowBox[{"a", "[", "1", "]"}], "\[Equal]", 
        RowBox[{"g", "[", "s", "]"}]}]}], "}"}], ",", "a", ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "4"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dt", "=", 
    RowBox[{"D", "[", 
     RowBox[{"t", ",", "s"}], "]"}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{"t", ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", " ", 
      RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}], ",", 
    RowBox[{"Plot", "[", 
     RowBox[{"dt", ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", " ", 
      RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8128978836130943`*^9, 3.812897894657914*^9}, {
   3.812897942518798*^9, 3.812897958540026*^9}, 3.8128980127043214`*^9, {
   3.8128981055872855`*^9, 3.8128981518257666`*^9}, {3.8128982636431637`*^9, 
   3.812898267886371*^9}, {3.812898571531706*^9, 3.8128985734193087`*^9}, {
   3.8128986055865655`*^9, 3.812898607770569*^9}, {3.812898742183406*^9, 
   3.81289875035782*^9}, {3.8130650025172887`*^9, 3.8130650037413588`*^9}, {
   3.8130671128649936`*^9, 3.8130671139830575`*^9}, {3.8439645710145907`*^9, 
   3.8439645993172092`*^9}, {3.8439701202309875`*^9, 
   3.8439701390070615`*^9}, {3.8439705809723406`*^9, 3.843970622492716*^9}, {
   3.843974635725978*^9, 3.8439746359509907`*^9}, {3.8439747869496274`*^9, 
   3.843974834797364*^9}, {3.8439754000416946`*^9, 3.8439754017287908`*^9}},
 CellLabel->
  "In[210]:=",ExpressionUUID->"95ad98cb-875e-492e-bf8a-d8f1d75a5c48"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TemplateBox[{
        GraphicsBox[{{{{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
btNA7NjTdy279//bQ+D/95D/ATgbkOg=
               "]]}, Annotation[#, "Charting`Private`Tag$22074#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
D12tDyE=
               "]]}, Annotation[#, "Charting`Private`Tag$22074#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
               "]]}, Annotation[#, "Charting`Private`Tag$22074#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
v/w8/H9+3v8APMsMaQ==
               "]]}, 
             Annotation[#, "Charting`Private`Tag$22074#4"]& ]}}, {}}, {
         DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
          AxesOrigin -> {0, 0}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, DisplayFunction -> Identity, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.05], 
             Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
          DisplayFunction -> Identity, AspectRatio -> 
          NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
          Identity, Frame -> {{False, False}, {False, False}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
            None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}}, 
          PlotRange -> {{-1, 1}, {3.1519383112809856`*^-31, 
            0.9999999183673486}}, PlotRangeClipping -> True, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
        FormBox[
         FormBox[
          TemplateBox[{
            SuperscriptBox[
             TagBox["s", HoldForm], "2"], 
            SuperscriptBox[
             TagBox["s", HoldForm], "4"], 
            SuperscriptBox[
             TagBox["s", HoldForm], "8"], 
            SuperscriptBox[
             TagBox["s", HoldForm], "16"]}, "LineLegend", 
           DisplayFunction -> (FormBox[
             StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False], TraditionalForm]& ), 
           InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{
                    TagBox[#, HoldForm], ",", 
                    TagBox[#2, HoldForm], ",", 
                    TagBox[#3, HoldForm], ",", 
                    TagBox[#4, HoldForm]}], "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ),
            Editable -> True], TraditionalForm], TraditionalForm]},
       "Legended",
       DisplayFunction->(GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}]& ),
       Editable->True,
       InterpretationFunction->(RowBox[{"Legended", "[", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]},
     {
      TemplateBox[{
        GraphicsBox[{{{{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwt1PtP02cYhnGEERUnghENm8UBSjwQIzhLpjMPcWpExUijAeMBivEQ0OHI
FAiJU8ciLhjNxIQ5NSYFFTVFPBEUeAQlRYNRDlK0DG1LuwL2+3Je22HfbfH+
4crnP7jC07M0e3x9fHwS/+t/F9PMPikFf1Jyljuy0O0RUPLtuzFRw6MCSo6d
n5hu7xdQclxwwdtmo4CS462Dz3+vEFCy5uSLm0tTBZSc87Lg4L46BXq5vX1K
X73WCT+y6nHWjLjZH+A438986j/tzz7o4bSimIE3J3qhm12/5RcyOaCLdYHd
oSVmOxzji+tjsttO2eAonzigzV2Q0ANHON/vRk620wKHWHvs5dyO62Y4yOdr
bSUXM97DAX74bv7ntyK6ocKRQfGrtlw2wX6+s7Aww2LthA5+11j5lVrdAe1s
iz4fyw/aoJWDj5arF09ogWaOVovosuFm2MU/r3a+qs41QCOHbNGf3TarAbby
nbHGaU1zH8LnXGayne4t0MM63pk0+55pdzEs5eqA/NcNh8/RJ3W0zDIh7HhK
BWSKHHjkXt5QDZ9Rgu7Ni00pDbCV1iRO9xu9b4BGOpNqPLakqhl2kWGTaurm
6S3QTM7wkKOtF9qglQ7/uEh7ZmYHtJOxK0izt6kTOigt79u/Jm40wX56siju
1yf+3VChqMk1jtJ17+EAqWoy1/gXmuEg+Xh8y7MtFjhEfyfV7mqc1wNHyPR1
6pfzCmxwlA4lBwVHdNnhGIUW96R8pnJAF+m3X7k2nNsL3ZS88qd1TbV90EOV
uw5GLB/vh/+QK+A7v+qtTviRNC0r1KoSBXopYMWU+ppLCvRSfenbDTt0CvTS
ktw87R96BXopcE5VUWijAr307ECsNWRIgV6Kn7TgbOBGASW5fnB9oU8SUFKF
yVCWmCygpLCKvY+K0gWUNL611B6QJ6CkKt2clROvCijp+6nCcPWmgJKicuo0
aysFlFS8fuf+X2oElJQ9eOGcX5uAkhZuzwjTdQooyfz0m/JV3QJK2lzSWXe8
V0BJk3yvJ4QLASVxZk774xEBJR15vTY1zSOgJPwLSvoXZ0eYrQ==
               "]]}, Annotation[#, "Charting`Private`Tag$22138#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
               "]]}, Annotation[#, "Charting`Private`Tag$22138#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
fIi6hCTy/+ejMmfThnzrcO+dxGWQt9/K8R/v2hD2MYfnH8igt6fvN94Lb0Ne
9KvNFUo4ZHuNSwGq21BtuooF12M8upSny910sh3htwsPfTAhoLhXnw4STrej
Xdnqp1lZBMRFII26nWtHoqw0YYwHBMTScuG7uFQ7elKodCQ95gY69nONNda8
HRGaDRR9tmTRu4xzu85P2xHN1SjpM3fl0MFzzX6t1+2owXtsiSFFDm2TlYee
DGhHtrbv9iVNbqKfbO8ZXpW1I+/ew9Izk7dQneqZk2r0HQg7mPlJLXQHMQpM
MNtzdKBo6xeUNuF3kPHJBO4vFzsQPsBP7PYRRbTXxCfaL92BTFRPyr8ZVUR8
d2T0jM06kMMHvJt6gjIKkNNLscvvQA2O9kQLghoa5uHKC8I6UEaEYP66uxq6
TD5Vnl/fgcosvCuNqtVQJelx+85wB+JW8FVZUlJHm7jX224UnSjALPglraUG
0pUMvxWo2YkszhwEdNffR4ksBnfzjDsRVwHLEsb6AG1scev0PO5EEZ+j8gqt
H6CPBclPWF3/w/9QEh+k10RwrTg4JqkT1d+6LnXTVgud5++byNnpRJHr7eb3
9HWR3Ylvi13kXWjYhzLUDXQRcdFwc/NEFyJril1dOqeHNFNnKaXPdiHHw5/f
BKzpIZ9LW4KVd7pQ0unR86bhBmj5LNPbzogu1E2iiOAONUaSb2KeVcR3oSYJ
Q0vVDmPk0c1vkZ3ZhV4TyDuFTpog5vfyyv6VXUiwvS6f7b0Jwi85sSkudKGE
qH95Be9M0efCwcIKqW4UVW3ElxFjjgZpH6Zmy3UjfqP5tcPz5ui81cb3KJVu
9NjtSTm/sAUqZj/h5WLSjThZeT+QV1ugcTfcPakP3aj/lA4sbFgiYaXo1ez+
bpSUtSUc+NYKOcfzTUVNdiOnOfUkxm4rVPu3uNd/qRspm625f7ryGOlmdxCf
kPWgq5oqQY8GHyMPpsMfeXl70KV6p5sU8k9Q15gFb7RTD0o7aCpbU32KXjhc
NfnM3Is4izbtojmeI2bq1XLNs72IWTSK+47hc1QclXuak68XfdZJa8yNfo72
G6Xa02/0ouNinnbtlxyQx9nbqPFJL1p6s+tqhV4g/1bzMxRVvYjF6lVqZYgT
EjLnfdXc0ovq5RUvGk87oY7dxe7g/l5E3ljVNSLyEjFeeP6RZ6UXOb0fZvbo
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
3sh4bxXRvSE+KOrnIvxvHh/9bx6f8H9RLeZc
               "]]}, Annotation[#, "Charting`Private`Tag$22138#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwUl3c41u8Xx5URsiUq2WSvFvJ87pIoklJJskdpoOxsSiklJPnaeyd79Tyf
89h77733TCEqfv3+uq/3dc77dc51j3NdN7+ZrY7lfgoKitPUFBT/X6XR4YW9
vVXoL9Uq3t2TIdtuC/pv76yC6GJ4zPcCGXJOvpzIj41VkOLbmPN/JEOWF9Uy
m1lchXA1IdvYXmnyWdaXA029q1BJNXjxcqkU+fzk94b/vq5C/vSTX0//kyD7
RO9ZfcxYBZMrO95sehLkijuMB94nr4LVil+8KqcEWbVJ9KJ35CoEshyl1f0s
Tr5SaPzt/utVmFG57cAYI0bWed2cedJ4FW53fOfqqTpB/nhh8IqU/io0XPoS
sBNwgtz1e25W5PYqbIt3UcbcPEHWfUoldFRzFSzdimYNp0TI9+6ei6I4uwq2
tqMCyQdFyBYS6e+amVah/FPngMNTIbJz60vrB/gKXO7xdPr0jp/8btGp92fJ
CqRuVauLG/GTEw48vOCbvwLbQ0nVcrL85CakxRGdtgJJV02zQrv5yAI5HKSO
kBVg3vSbfC/MR24JSmHAHqyAqenf1Om84+SprHCnRtMVeOfxyMzZ/Dh5u+7t
mJ7BCjjpuLxuPXScLLTPtsD+xgpc4OGYbHzOTXZ9dtYg/dwKiJyntau8eows
olOXeYjlX32PfJI0xxGysk0ZRwL9CpSESrneaeci33ib5SVDvQK9q3thEoFc
ZPeKoJsaO8tQ7/Ujs5WOi9whf/e319QyOHPocg3RcpI92Bc0FkuWwbJB0blY
iIPc1XVwodx0GQ4cOymVXs9K9rEoxDMNlsGIYZQqJ5KVLP3T6OOnO8vw8VtN
t7ANK9mfPU/5odYyVDul++gfYiUTdPQ+sCguAxtJV63ZkoWc0pp0yphlGfSa
3vKxKTCRbxpfo7tycBmmVBPO8swzkilWt4blaZZh4oTY1kIEI1mfSfM1zZ8l
sIoixwIFI5lZ63v/l9klOB6u/1Wk+yDZpYHg9QdfAtUY+VmvWDqysP7szZnS
JaiSNDRrv0dH7pgPEm0rWIL1DzU99Vx0ZEm6qfbEjCU4NvkoPz2Uljyu/lZI
M2wJZu1eCP35eICsUd1T/5/1EiQd0FT68pWafJxse+gs9xKwv5N5NnVjP7mJ
7bSDEucSTCW/6DTh3092tdzpJLAtgWx00snb3/eRe+j9PqrSLkFAg09cfMg+
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
kHkhUrRNrYhrLO5782CmGUwmjz+Y5zmLyxtQZEl2NEO/9xnNQIUz+NHm3Zbv
pGa4I/qqL0z/NL6Y/fuQ+6dmGHvj9D236CTexbtz9oJPM/hV/ElUXJPHiUG/
9Gmsm6EiTEGSWU4ef2e3ERek2gzCS7d9kmtlcckzq5LJP5qAZHha+ucLSfy+
tJdX6XAThD6+JFiiJoHHijB3NNc2gZzhxTTzw+I4G6eM82ZkE9TaVUr6DJzA
NZmhnv5VE5z09JihbhHBXx7Q5uZ92gRXBWUNPzcJ41tbNuXqqk0QdZ8/VX5e
EJdd22U3kG6CfX/9D9rSCOKP5gLvP+Vqgr0/88zHpQTwob7sg/8tNcLIj6NI
/xMfXlG6cnshtBEQ7Vnpxg/H8D+5nmm7no3w0Vo3UfXaUfx0BtNvtoeN4KHA
EOR49AieFiEdd47QCKE+kZ1d/Yfx8RB8XftEI6zXSt7+3ciBHw24dsmCtRHO
7Jy9Wl9/CH/vZrPwbroBvADt955hw2vsd5XjWxvgGZrY8aNiwymeBH4oLG0A
RT2eD9aSrLidQfapkfcNEK+28TFElhnPuoW9XndugIWmgw0bRYz49NWWfhqz
BnCplfBhvcaA6xFWPGXONABn26m1okw6POS0Z/tFvgZoff751Y+ntHijFJOQ
Hn0DpDyPntRSPYBjPNL13iP1IFaVNUrNTo07H8aPfaqrh2dRmwNqjFR4DtM1
m/S8enhrV7j0mJ0SF9yzZu94VQ+WzVcPWlzYhxts/bWceVoPI86ilqpWFHjY
6vuSHf16OMOaeUJNfo9EO/bFUFCmHjKfXdm8If2HpNJHyDl7pB7k7ks+oqzd
Ibm1Ne+/SlkP7NT5S05Pt0kr5OVUh9464FOPWStf3ySdKPXY8S+vg001/h6l
hg2SSS6jVnRmHZyPKKEp+fqT1BkvtV7t9S//ZGGoVsI6iSGCpDrwsA5iZPe2
lLO/k9RCtD6v3KyDVy2PFEaq10glvtbKnKJ1wBy/X1dDcoW07vo3UIKtDlw2
+ppiI5dIEvbvx9GfWuD97672E55FUoz5l1dWbbUw090Zuaw/R+q9R+h3L6uF
feTE87/ZZkkst5olgpNqYX/P+VXZwWnSC9XltlKXWnidvbUl9N8kqeLykvYp
81ogvKWYRiETJAqtxZZsrVognlvuuRA+TnK/Pd+UKFAL/40OT18JHiWV3Z3T
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
vvNoJSHQMmbKzq4aPa8JCa5XqSKcuWzvMf+6Gr2nPKBh6VZNeMV4/GtPXjVq
VjLwYRGoI0ivfVfXqqtG7rRZ1b+D6wk9HTVjlcP/9O71z5cONxJEwp+y5dLW
oCXfqUApkxZCi+ulzBM8NciXZ3Ef1aE2gpPhUdWYkzVo+IOgsSFVO6FGoMox
wKgG6TdSKw0zdBJsqP9j2u9Qgw4oNf/SF+kiHJ6zTnV5U4P6Mkopfl7rJtz/
wtlvWVCDZJr94r3beglMQUvPhupr0J7V2iCTRD+hyK6c/uZoDXKNkzNd+TxA
oFF4rHyevhZF3kiqOZ81TMg+er67iLcWxXNf+Bx9e5Sg+/eQjdTpWvT9uoxC
0NsxQkoFHnvUpBZp1849c7CeIFxL/qgQ7PjPv/e7tuzZJGHztVX7gYBaNPm5
Ov/eiynCJS02yo3CWnSq85gHoX2GEGhK9327vhbdbFW8+/vXLKHPkWJ0d7gW
uXj9HE6Rnic8ilkpo6WpQ+Pr2VVKNYuE/LzpNMajdWifjNHsE7Flwp+aoTA2
6TokQjGWwRe9QghcbbDj1q1D/sU0sY5Da4ReygoT/kd1CFYWvl7I/U7g4yq9
JuJZh3yS/oi0fVgn5J9PFZdNqUP6pZfjxx7/JPy5FcN1uqwOJVjt17n4aIOg
9vATjVJLHWobaWERd9gk9AW/mLi4+Y9PqR/mlPWLwJ/i2naZvh4FWAyMjA9u
Ex6VPcO1eOrRE/kzQUNcvwl/Jowj7qjVoxRfQeYq0l/CpS1dfwP9egQWEWlj
InuEwIPXnExt6pFudJPOpjYFxn9KWedxWD2yXbzcqDixD3t0+eT5pxn16DDD
KavUkv1YgYG4tCNej47YZ5+yDqfE1Py46L1m6tF39+M/XzlSY496fpaHnGlA
3fpLZQ9z6bD8hcWvnzUa0O16V8KvYXrsz+5EdJRRA5IbadW9xsmABZ5of57y
qgGJrFdw3c1jwnrP1T3IjGhA+m+PEAPpWTC+63A7J7sB/Y0UC7OoZMHyXb7I
lfU0oM143pKwq2zYn3dJvLDQgHYcbz/7cJwdU4uPZKzabUCpz1KnTm2xY331
b+abRRrRhyPF5iPVHNifo/fjx50a0djyObXqgSPYJRnDDzNvGxFrTVGi2O+j
WODFWx6LMY3ot8vTUnSCG+N/onJ3o6YRhSQT/dWSeLBH3orqOwON6MUX6W7B
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
nHCeY+OhQp6A0GtN4n/7mfjffibxf/9HWsg=
               "]]}, 
             Annotation[#, "Charting`Private`Tag$22138#4"]& ]}}, {}}, {
         DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
          AxesOrigin -> {0, 0}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, DisplayFunction -> Identity, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.05], 
             Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
          DisplayFunction -> Identity, AspectRatio -> 
          NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
          Identity, Frame -> {{False, False}, {False, False}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
            None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}}, 
          PlotRange -> {{-1, 1}, {-15.999990204084428`, 15.999990204084428`}},
           PlotRangeClipping -> True, PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
        FormBox[
         FormBox[
          TemplateBox[{
            RowBox[{"2", " ", 
              TagBox["s", HoldForm]}], 
            RowBox[{"4", " ", 
              SuperscriptBox[
               TagBox["s", HoldForm], "3"]}], 
            RowBox[{"8", " ", 
              SuperscriptBox[
               TagBox["s", HoldForm], "7"]}], 
            RowBox[{"16", " ", 
              SuperscriptBox[
               TagBox["s", HoldForm], "15"]}]}, "LineLegend", 
           DisplayFunction -> (FormBox[
             StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False], TraditionalForm]& ), 
           InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{
                    TagBox[#, HoldForm], ",", 
                    TagBox[#2, HoldForm], ",", 
                    TagBox[#3, HoldForm], ",", 
                    TagBox[#4, HoldForm]}], "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ),
            Editable -> True], TraditionalForm], TraditionalForm]},
       "Legended",
       DisplayFunction->(GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}]& ),
       Editable->True,
       InterpretationFunction->(RowBox[{"Legended", "[", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.8439645558297224`*^9, 3.843964599919244*^9}, 
   3.8439698823563824`*^9, 3.8439699380555677`*^9, {3.8439701285784655`*^9, 
   3.8439701400021186`*^9}, 3.8439705833914795`*^9, 3.843970626137924*^9, {
   3.843974647789668*^9, 3.843974665243666*^9}, {3.843974792500945*^9, 
   3.8439748358184223`*^9}, 3.8439754020978117`*^9},
 CellLabel->
  "Out[213]//TableForm=",ExpressionUUID->"53be1572-9438-44ee-a70b-\
8e7e5c106beb"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["\n\:041f\:0440\:043e\:0431\:043b\:0435\:043c\:0430",
  IgnoreSpellCheck->True],
 " \[OpenCurlyDoubleQuote]\:0443\:0433\:0430\:0441\:0430\:043d\:0438\:044f\
\[CloseCurlyDoubleQuote] \:0433\:0440\:0430\:0434\:0438\:0435\:043d\:0442\
\:0430 ",
 StyleBox["\:043d\:0435\:0433\:0430\:0442\:0438\:0432\:043d\:043e",
  IgnoreSpellCheck->True],
 "-",
 StyleBox["\:0441\:0442\:0435\:043f\:0435\:043d\:043d\:044b\:0445",
  IgnoreSpellCheck->True],
 " \:0444\:0443\:043d\:043a\:0446\:0438\:0439"
}], "Subtitle",
 CellChangeTimes->{{3.843974234556964*^9, 3.8439742424854174`*^9}, {
  3.8439755757827463`*^9, 3.843975578174883*^9}, {3.843976110059305*^9, 
  3.8439761288113775`*^9}},ExpressionUUID->"31a7a26d-e133-4d55-a3a9-\
0992e8e9b45c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "s_", "]"}], ":=", 
   RowBox[{"2", 
    RowBox[{"Exp", "[", 
     RowBox[{"-", 
      RowBox[{"s", "^", "2"}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"t", "=", 
   RowBox[{"RecurrenceTable", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"a", "[", 
         RowBox[{"n", "+", "1"}], "]"}], "\[Equal]", 
        RowBox[{"g", "[", 
         RowBox[{"a", "[", "n", "]"}], "]"}]}], ",", " ", 
       RowBox[{
        RowBox[{"a", "[", "1", "]"}], "\[Equal]", 
        RowBox[{"g", "[", "s", "]"}]}]}], "}"}], ",", "a", ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "4"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dt", "=", 
    RowBox[{"D", "[", 
     RowBox[{"t", ",", "s"}], "]"}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{"t", ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", 
        RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", " ", 
      RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}], ",", 
    RowBox[{"Plot", "[", 
     RowBox[{"dt", ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", 
        RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", " ", 
      RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.843974148739055*^9, 3.8439742212852044`*^9}, {
   3.843974329237379*^9, 3.8439744175044966`*^9}, 3.8439745570804796`*^9, 
   3.843974803846594*^9, {3.8439748676852455`*^9, 3.8439748787008753`*^9}, {
   3.84397493246095*^9, 3.8439749381082735`*^9}, {3.8439753878899994`*^9, 
   3.8439753932973084`*^9}, {3.8445742014816694`*^9, 3.8445742043618345`*^9}},
 CellLabel->
  "In[329]:=",ExpressionUUID->"ec9bfb99-6e97-4785-b0fe-a1c8dc4f2e0d"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TemplateBox[{
        GraphicsBox[{{{{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJw1W3k0Vl/UNg8v3lfSoJC5koTM5e5LkoiQWcYfkiRJqEwhJZKZJELmOWTM
vSLznDlzSCWZZ97Pt9b3/XXXs+45+zxn77PPfvYfh9fqno4NFQUFhSU1BcX/
fkXh8G8ymYQPu09pmUmFIPc2+V9sbpFwQRfWonftIUhBkbjQ8ioJ1+GtL22z
f41InNKwmvlDwoOjmruO64ciMgf8h1r7SbjrdQtv66wwxL0lzL2+m4R3Y9cn
QqnDkYpniYfxNhJO08X+08ksHLm4VaFTVEvC73f0HXLgiEDQH4vNb/JJuHTs
izeyqZHI03dku4gsEl4WKF/9mzkK+WLAQv8qdZ9P30ZjpGsUotx66pLPWxLe
Nrj+bvV6NHK1xLzS9jkJ/zUjMLp2PBbRed6Wfd6chK9of34+zxuPRCh+v3rW
mIRTRZ9N78qNR3q2Z38K6ZHwrJM2V/UuvkP0nWgEjqmT8PzCx+uOlgmIidGF
eAoZEu63Y82ebvseiT94VX5LnISzPm4gtZS+R0bb9AeWRUh4nTob3QNCEmKh
5Mz+k4+Eh4Vrz9kXJyHWZzKD24gk/KttcenX4ylI6vQn4QZGEv7i4aXub49S
kJnEukachoRXnnogkzSYgtxmH6cp3iLilrJnqeMSPiCOu4c942aIuMSCtMEc
koa4dfjfvVVNxMNiLvzrGc9Egv+49q+UEXEKpTCZhNtZSDL9bUXfIiKOVA75
865mIa2gcehdBhH/Qam3HMSeg/AVHPrcHU7EjwRb+ri65iGyrfQnLV4R8er2
2ozIw/mIxuxm6N/nRFzgQRvFWHk+4s4zas3guT9+hlHy+LMCpD00jRm5RcQZ
e4PfDf4qRKZyYl1bLIk4g+m+S658RDYbX44b3iTi/j+cwpbSPiIClPeKH2gT
cTbag4mv7xQhj+/L3My8QMT3DnUaeTGXIEI6jdnsrPt8I0wjf5SUIRcdKw4l
E4h4nF6EY6RUOaL9Msf7HC0R/9Vdf7mmtBzx+BJ6Q22LBY+XuZBcXVuBdEsY
bXtPseBx1MCfvF2FzGqq27CMseBpEiLPg0I/I7v2Ch1xgyx4EqcXk/6pauRU
Cm9KSTsLLh7Eav3VAkM8D/5W+1PGgjetuHdpbONI+LnhYvciFtygttqYRacG
yVBv56bLY8GV7pakumXVIN1+H5d4UljwwK/6RxwsviCnVh7H6b9iwU+KJliX
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

               "]]}, Annotation[#, "Charting`Private`Tag$94632#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
T8McCfuTEZ04sozvF6xM9k33kLDLyi1Cnrg/o/tOLrWTsAklzh/2uN8JMsxJ
zSTsZdZMhDluu1J/H+5KElZZc0VfBreGdPeyZBYJK+Kpqf5DZ8LhV4n8cqkk
LBl2Xo/BLdftLKOUSMI6FEWefMC91WvH1ZPhJIyx2XhFH/fE3JXSq14kjN/6
gkr7EhN8cwa++NmQMJsJgTNli/j6bP/tmaIlCfvBuZsaglviwFmLWjMSlvq3
Y/Qx7qzIDBl2fRK2ukdMSgx3p7f7n/tAwk74Xdpgu4DvD7WRWG5lEjZYYPFL
DfddjrmPUfIkzDSJcWcDblYnU5OuPSTs0e4Hg3HzTNhts3/29CYShkXVurTO
4e25a7BlgJuEHaOYrATjzuz6hjpzkLDhyKcXbXB/jmbffGuViXoEX4uam8X3
Q87xR4/VMlHPqw40xgzev/fR/acdmOiJn4ox1VNMoIRctZGwZaIhVKtUV9yf
BCsUTK2YKObOdUwR9y9yYHmJDhPtK3xU93kSP771OD1QjImue/1p7vg//Piz
CYWN/zHRaa6NZuMTeHsUCn7k4mWi37e82+iNWyvx7257OgP1dH9xpGUcP97t
o/7ZKgbqQNmRc3YMP36FLvKygIH6CI0HDP/F28/WYiwrk4H2LPu9c8LddUnx
hXgoA+01jjWPGCXauyNx1Z6BtscILnQM48d3SXDFijJQnQ0xLzr7mfBUlSXu
myADndWhsJjgPvy1ResNNwOl305Xa+nD32d0336woq+i+X+lR0p7mVBU+Jdv
R+0q6rD/Y8XHbvz9QbQgmad4Fc2byrm62oWPPyc/PUbOKoqeWHfPCnflIa1P
bVGr6B+BpUrZTvz9MyZ+y6fnq2j/WQWbsDb8+dhfZbk+WkXTmVeDl1uZcMHS
zPj+rVV0z5n1TG3crcK8P3Qu4te/pL801syEno+2Iuv2r6Lr36v+pDTi/e+R
/G7n7hUUzTD+9aUKXw/ruYpvN66gyeV9qb8qmWC7f+CaSfkKSnO139BWwYTZ
Ud9o5YwV9BuvaSp3OT7+TBb2zX1YQeO88vdoFOPzX1ZVZd/LFbRF2CniTBE+
3wlE3ql1WEFNfNj4tf7g/a3GMCnBegV1tHz5Qq0An0+OZcnbwAq6XsyLtIAy
oTTQq8FQYQUlr8jqtOTi42/V5uHJvStoz9gKX3oOPt+lb83YJbCCTl49lmjx
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
               "]]}, Annotation[#, "Charting`Private`Tag$94632#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJw13Hc8lf//P/CD4xwrtFAkSZIQpaH1vJJKW7KTJNHUskpGKiklKQ3JOMfe
Iiu8LrKy994rIXuPc77X9f78freb283tfnNdl9d5ndd4Xn88XhvM7mhf5aRQ
KIeoFAr5WwlEBthsIfzckQ2putkM0H5RGrXjkhA+Yfg/25U/u22ZJYivDvif
ZbULo1YJC+K1DOn/XFPDP5B9eRn+V1n2P9sXHXBezBLAjaeU//M6/M6q3RIC
uH33uf/8d/XaZczH/LjxcPx//nEzl1uolQ8vtEVppPkW5x9NbuPD9YXEMkmb
vlYZbXTlxbN3DueT3lG6l2lrxIt/WS9bTJomqKG3cjsvfnmtewXpxjOneeN5
efH2b1fqSUe/1cs41cmDb3op0UFaRLl5tXgpD36Zpt1L2rni0p2/qTz4yS3K
g6T77/YUpgTz4Ie/FI/91x/Lr0u7efHgDVb75khnJPxz0HnMgw89+sKhR3iT
9v1a6Ws8+BMfTn7SnuPTSmPneXCFqY+rSc96O7gj4MFH3j7aQLoulHa6TJUH
X1P7XI50Yvq75a1bePCirTRl0l5lEnWDkjz4/lHOPaStusJ851fy4BxjTzHS
J6e3X+Ll5cHTbN4dJy3Hl7VRjEXH1x5VPU+6W6Umemc/Hcc+XrpGGj9y6Z5G
Kx1fvLH4gLS/4cDO81V0/PxRfRfSr7u3fW4qoePJX8vdSDvctpm/XEDHv/c7
vCFt8ISC7mbQ8e4826+kj/Ef3TCbTMfPMAoZpHf5eDx1TqDj5kK6kaRXRoho
eobScRUkk066rEKhMsqLjmtfr2khnWF0f8cODzrebrmtj3RUT4pP+nM6Lh1d
M0LafVbd6PcjOn6aQqfqk+PP1T1Dy4aOb0v5LEjaQqBMsuEOHY/kdFpD+rCU
YXefOR2XsjytTHp7pP8Rq0t03DV5/37SUqo9YVOGdPwszytN0qxjd25Rz9Jx
odnjZqRT7zyf2qBGx+Xcv/uSDpsr0o/YQcefdfdEkP74VDhdWYmOv+PwTCP9
4NNXJ9hIx48ztZtIm23o7MhfR8fX29oMktaKkj18RoyOW0atWyKthBLoF5fR
8bs0QWkDwhLHZ6730Om4nYHJTtL81ftLbnLScZqlxnHS/X0FXo9maHidSfd9
0kzBtjWfO2l4ls5IKWnvC0BXa6HhOzUXekm7hgdONtbR8AA8g0XaTP1KuXgJ
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
ISw53yf6WAUyfnv/DXc3G/D9lJkdneWIts0iWLSHDSHNvW/+PitDopZ5Lcv7
2ND0WCTg244yNHnuiLULYUHJY/HnukpRw6VVOkOEbU3Dq9KgFBW+faWc8YcN
R3tviL6aL0YJ1LfrD/4lvk+3r3IHI4rRjmAv9Jlw7OYStXH9YnSg5Z3MGGHR
G4rGRj+KUPTSGeuvA2zoHx4JlL/7G53wifWpHyTGr5fU9zbJ32gcGRdvGGKD
lsq5X96lhahH64b8DcKpD773zssXogfm/l5ThF/OWssX9+aj5aO1UrP/2JD1
JWSf84d81C8hVaA6zIbxvXWndhzOR4Iyun/uEDZy3H3na2AeQgk/UjsJy3PO
J968kIt00y67J40Q44kpn7eeLxets+3o7yXsrXGhrjr1F3rDH8ElMsqGebeM
2X0iv1DSksyz+4SL+Z0PCFRmo3B7hRvrxthAiYk7gztnI4HuOv0jhFXPdFyy
VspGSslj228R9vM65NrigaNvG8MLkgk3yPN4Gr7JQnPtJkswzgbs9vX47IFM
JLWTZ+AS4fC4oqotmploU/+tISfCD1XfiM5zZiCJE9mH0wl32Q6rmZn+RMrh
tKA6wifSzhoXZaYjodNJMuOE1x5cEeRrn4a6brvFyk6wwdXlwS/OulS00n3+
JxAezKnpvbEjFaU727H0CWcc+yS/bzgZsbRatrkRvnhOIqn5ShJqP7XzayPh
oYkpNZvcRFQT/O3EEOHHH8uR4KZEdO9b1mkWYb9m1+JDfQlIf/sTA6lJNig4
GZ9rPpqA+q5+MFcm/FNqV711WDx6s12jFAgnFVflna2MRRcbLTKMCdcIu1W6
esegtxq+R28QntBVa/1xPhpprh5StSO8vSNgUrwuAvkoPdd4S/jcpvOUs5/C
0VxE3zVfwndv0ARcDcLQQcevM8GE4yZvbexvCkamOw0NUwmXqUltE/djIuuM
NqVswsNO1XvPXGSgt1oJD34TXpbrdvSJZBBKq2+XqyRssMI6+BoKQHNfLM42
EP7k1/Sz7NA3tHB7W38b4TrZQ9Wqub7oTtfyyR7CqxLCBnyPfkZy5tUPBgif
3yfIyfHbB9Eub742Qtg7z3qN5cn3KMkyrnKCcMXZZuXSUi+0S2MhfoawZNJT
L4vA10hvzUvaAuGvhVpoe8gLNGKbV7VEWKx13TArwhVJ3eYXoUyxYWt3rdrH
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
xssD
               "]]}, Annotation[#, "Charting`Private`Tag$94632#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJw13Hk8Fd//B3Cua8meREW2kCRJEsL7VpZSihJColIikkoiS1JKJSSVrXJt
SZYouzOyJCH7ln3fkn1372/G5/v7y+P5MHeWM2fOec/jMa8jfuH6KRsSAwPD
fjIDA/FXHgRG6HQeTNMqopZplg6n/Co/7T3Pg0n9z3d++zpcKeDG6s//Z+lT
ZZ/4ebmxGMv/XF/PMVJozYW5m/1n13INr5UCTqxL/z9vxa7z7xfmxIy2/+fh
jVu4qPc4sPVZ4Wv+al/MzNPOjlm5h62ZfWXJbWY3OxYVGLpmq2d7Jlp81mEV
nE/XnPTCOO94Nxv2NNhhzQvB7o8RsGF7ucTXXFUtV/MpkBWLztWuIUzl7tj8
ppsFu1RFryIs4TLk++4bC7aTzrzm6Papf3FPWbCfBr8qCItrr5olW7Fgn6Lh
F+H3SaylX/exYE9IJ38SFuXn25PPzoLp1HSVEo5yF44o7mTGkrIbiwhbpnww
PFLOjD3v5Pi+dv290qwVGcyYhBMHRrhNICnv5DtmTOHa73zCEXp7nOueMGOJ
Coa5hHOOh9SW3WbGptJzswi3nJhXLLBmxgrjO78SHvot05tlwoztmzLKWLt+
A7OX6frM2KWmr18IC5zOn05QZcaqzZRTCEvVj1Opu5mxc1WnPxNWOiNmFCXF
jG1/ZPpp7X6bPMh4uZ4Zq23iiyds3ZxxKYCVGTvbVBJD2OnsAP+TVTIm2G8W
TfiF+dHbnsNkjE1bKnLteMIXKt37yNjbn9/D19qjzU3qbicZ2+pqEkY4+VxS
w80GMhZz1+Y14YrzPMpXC/H/N3EFETYSkwm4nEfGmt0tXxD+00UZuJhJxmxc
Yp4THrF2DrX8TMZWbHn8CbNdapg7/ZaMCTWc9SEcKDl+wjCEjG0u0vcmLNjP
En/iBRkza1LyXOuvl1VMjj4kY/vU/9wlrG0bnql5g4z1CXo7rZ2PTAaP+jUy
xnmJ7Lh2PsMVV1SvkLEStbv2hC/Z0QSVzpGxno17LxP2uWbtuuMoGdOfaDMj
3BFgGZFzmIyVH3xrQlgtzRw7pknGyBlgRHhq9gyb414y5vTjiP5a+3rpvfmy
lYwdeHhAk3DeB928w5vw/VeqqBHeVKzVVc9HxuRchJQJV7OBzDwrGWvTDNhF
mBK8N+vAFBPmqikgtNZ/MhTaKsaYsJtyOwXW+kPjLgbLQSbsCSa6nnCqkMwR
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
qfpCKu6tryqHLYWWUd2Lo0ZPcZcKnKrI/LeEPFLOeZngVtg/Ta7qW0KjMi97
j+IOMwnR6GtZQmw3TEjquK+/aUzmLV5CuUdirori3rTFPOjqmyV0YmY8vWeS
DnZbLxkLHVxCWzXnc87irtdgfrFHeQlV2eqRdHFrWsb90N25hPypzYN7cW94
N6Rya+MS2mM14suJO0/MQahyeBFxjT0tzZrA672D3Ea9HYtoX3I+isYdaJ3y
bLFuEU1EyGg9w20TPbkqVbCIzjFP9p7DzS3p0uUZvIhYBXcpLP/D31+0BDe/
8ltEIju8lLpx91zKMvx0bxHx/aMmleLOjF363nR5EbHLSo2+wG213StW4cAi
OqO0AYRwf5F9bNfTu4DyvDvb1o/j9VaNVfbOlgV0Tcicbfwvfr/vqLLdrlpA
vcl0h5+4bYpHYlmzF9BtTL3eA/cmS/1uuYAFVKPf5N42RgdfsrSCy4MFdKat
ZigN92QizRO5LiCPME6bR7jL51OET11cQOhhrrMcbo8gPtM7KgvouuOM3LVR
vH7ePxqH7VpANqY851VxG3cUza7btoCOoXN2zLgVdt5+GcG1gMpvBv19O4Jf
b3FTVWHPPPKPLkLpw3Q4aZ+6laN5Hpks2Te64M5b/+SaUeU8WpFD91Vwv7JU
Yx/MnEcfaWOOmUN4/1mI0OZ8Po/iL7l4RA/i73dRt0PO+MyjmQ2eG8/iltA+
0Rt1Zx7vX9kjXLiXg+jeey7Mo2xl1S3OA/j8ufNCnvH+eeRUeJB/Wz8+n9Sq
cbyXm0etSuai5X34eOK6wWxYfB7R2AznHXFblxTPu3POo9mI2Iq0Xjrwn9++
90P3HLq6U0R6Sw8+vzIz+Iw0zqFLkJLxuRsfDz41V++tmENfvk56auL+sfDE
sfTbHPrkw+5s0oXXw8FjH0efziGypYPZpQ68/lIpWVC6P4dubP13qrOdDqc7
I3U9XeaQjYNLuTFuObmT/bzWc2jLtF2ZWhs+vpakiSkrz6FXjzNL61rw8fP0
opaK3BzyKHiZrYZ7UzflqprEHDpQPfkrspkOBiu/0zS551Dks9BWkyZ8PFUc
P6Q7MIvcLYRV39TTwQLbd+Vo2yw6P5vyo60Of771PZ4eq51FG15fdhbGrXCV
s/5kwSxSNXv38FkN/r76TtbGNHQWNc9u0txZRQf1Xc5PzJ7Not/Zzwy0KunQ
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
ZuvJlCvHYS2vPlPOkOfYirdXbdcbwt6nptWGOsmUlaN31vLtb6ybVf6MkCl5
233X8vClXtFKhQzMFF8BKSrh9gA/xQwOZorF7vzYtf1FXlOIF2Cm2KopJqyt
R5CnLPdcjpniuTsnibDqLyFZ7/34/69UJxM2aGWQuXmImaKzuzyVsOdC+baz
psyULwqOa/n/V6yp4scvMlO0RIS+ra2PIPBKFByZKXeY0zLX8vRK54WkfJkp
1bcicgiTdXNGYt4yU76W71pbf0D+7MYcyRRmiuKsGyJsYu/0JKYYP/8y/8K1
6/X4ZSrZykxxdbq4tr5B3Yf789uYWShkuu/a+gfSpftDtymwUASZWNbWR3Ad
+au0zZyF4veVeW39hF/cMXUSj1gopOuRa+sriOw1c5ZIY6EUZ3VXrq0vYMK7
XqKNhTKyq3dtPYbi20tKL++xUu7/Flpbv2FzSJ8peSsb5fYKeW19h747hxhW
ytkoruWX15xs/j5+2nUdZXzqyZp9KngWzgmxU5LQqzWbaHgdKctnp1C4/ltf
gnzCZR/jOQ7KxcD/1p9Is3SQUFvhoFhv/t96FkrNwYsJnJTfev95gf0wU/YZ
Lsrs2f8s5YiER+e4KAb/W//iVM0B5a1vuCnJ/1sfg8K2I5D7OA9F7H/rZ/xv
fQ3K/6+v8X/9TYcI
               "]]}, 
             Annotation[#, "Charting`Private`Tag$94632#4"]& ]}}, {}}, {
         DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
          AxesOrigin -> {0, 0}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, DisplayFunction -> Identity, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.05], 
             Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
          DisplayFunction -> Identity, AspectRatio -> 
          NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
          Identity, Frame -> {{False, False}, {False, False}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
            None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}}, 
          PlotRange -> {{-4, 4}, {2.2507064340814028`*^-7, 
            1.9999999999998987`}}, PlotRangeClipping -> True, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
        FormBox[
         FormBox[
          TemplateBox[{
            RowBox[{"2", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"-", 
                 SuperscriptBox[
                  TagBox["s", HoldForm], "2"]}]]}], 
            RowBox[{"2", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                 RowBox[{"-", "4"}], " ", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                    RowBox[{"-", "2"}], " ", 
                    SuperscriptBox[
                    TagBox["s", HoldForm], "2"]}]]}]]}], 
            RowBox[{"2", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                 RowBox[{"-", "4"}], " ", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                    RowBox[{"-", "8"}], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "2"}], " ", 
                    SuperscriptBox[
                    TagBox["s", HoldForm], "2"]}]]}]]}]]}], 
            RowBox[{"2", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                 RowBox[{"-", "4"}], " ", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{
                    RowBox[{"-", "8"}], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "8"}], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "2"}], " ", 
                    SuperscriptBox[
                    TagBox["s", HoldForm], "2"]}]]}]]}]]}]]}]}, "LineLegend", 
           DisplayFunction -> (FormBox[
             StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False], TraditionalForm]& ), 
           InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{
                    TagBox[#, HoldForm], ",", 
                    TagBox[#2, HoldForm], ",", 
                    TagBox[#3, HoldForm], ",", 
                    TagBox[#4, HoldForm]}], "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ),
            Editable -> True], TraditionalForm], TraditionalForm]},
       "Legended",
       DisplayFunction->(GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}]& ),
       Editable->True,
       InterpretationFunction->(RowBox[{"Legended", "[", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]},
     {
      TemplateBox[{
        GraphicsBox[{{{{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
+Y9I/N99PeR/9/WI/wdzTUT2
               "]]}, Annotation[#, "Charting`Private`Tag$94764#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
Cv+/l4r9Dxai5+Y=
               "]]}, Annotation[#, "Charting`Private`Tag$94764#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
/+f7w//n++P/A4IriTo=
               "]]}, Annotation[#, "Charting`Private`Tag$94764#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
CWD/37+D/r9/B/sfzEyOAQ==
               "]]}, 
             Annotation[#, "Charting`Private`Tag$94764#4"]& ]}}, {}}, {
         DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
          AxesOrigin -> {0, 0}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, DisplayFunction -> Identity, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.05], 
             Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
          DisplayFunction -> Identity, AspectRatio -> 
          NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
          Identity, Frame -> {{False, False}, {False, False}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
            None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}}, 
          PlotRange -> {{-4, 4}, {-6.7257094257299155`, 6.725437743559225}}, 
          PlotRangeClipping -> True, PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
        FormBox[
         FormBox[
          TemplateBox[{
            RowBox[{
              RowBox[{"-", "4"}], " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"-", 
                 SuperscriptBox[
                  TagBox["s", HoldForm], "2"]}]], " ", 
              TagBox["s", HoldForm]}], 
            RowBox[{"32", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                 RowBox[{
                   RowBox[{"-", "4"}], " ", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "2"}], " ", 
                    SuperscriptBox[
                    TagBox["s", HoldForm], "2"]}]]}], "-", 
                 RowBox[{"2", " ", 
                   SuperscriptBox[
                    TagBox["s", HoldForm], "2"]}]}]], " ", 
              TagBox["s", HoldForm]}], 
            RowBox[{
              RowBox[{"-", "256"}], " ", 
              RowBox[{"exp", "(", 
                RowBox[{
                  RowBox[{
                    RowBox[{"-", "4"}], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "8"}], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "2"}], " ", 
                    SuperscriptBox[
                    TagBox["s", HoldForm], "2"]}]]}]]}], "-", 
                  RowBox[{"8", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "2"}], " ", 
                    SuperscriptBox[
                    TagBox["s", HoldForm], "2"]}]]}], "-", 
                  RowBox[{"2", " ", 
                    SuperscriptBox[
                    TagBox["s", HoldForm], "2"]}]}], ")"}], " ", 
              TagBox["s", HoldForm]}], 
            RowBox[{"2048", " ", 
              RowBox[{"exp", "(", 
                RowBox[{
                  RowBox[{
                    RowBox[{"-", "4"}], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "8"}], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "8"}], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "2"}], " ", 
                    SuperscriptBox[
                    TagBox["s", HoldForm], "2"]}]]}]]}]]}], "-", 
                  RowBox[{"8", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "8"}], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "2"}], " ", 
                    SuperscriptBox[
                    TagBox["s", HoldForm], "2"]}]]}]]}], "-", 
                  RowBox[{"8", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "2"}], " ", 
                    SuperscriptBox[
                    TagBox["s", HoldForm], "2"]}]]}], "-", 
                  RowBox[{"2", " ", 
                    SuperscriptBox[
                    TagBox["s", HoldForm], "2"]}]}], ")"}], " ", 
              TagBox["s", HoldForm]}]}, "LineLegend", 
           DisplayFunction -> (FormBox[
             StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False], TraditionalForm]& ), 
           InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{
                    TagBox[#, HoldForm], ",", 
                    TagBox[#2, HoldForm], ",", 
                    TagBox[#3, HoldForm], ",", 
                    TagBox[#4, HoldForm]}], "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ),
            Editable -> True], TraditionalForm], TraditionalForm]},
       "Legended",
       DisplayFunction->(GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}]& ),
       Editable->True,
       InterpretationFunction->(RowBox[{"Legended", "[", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.843975393660329*^9, 3.844574205882921*^9},
 CellLabel->
  "Out[332]//TableForm=",ExpressionUUID->"8a5dadbb-0903-450b-8242-\
3582b4e76f1c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "\n\:0420\:0435\:0448\:0435\:043d\:0438\:0435 \:043f\:0440\:043e\:0431\:043b\
\:0435\:043c \[OpenCurlyDoubleQuote]",
 StyleBox["\:0432\:0437\:0440\:044b\:0432\:0430",
  IgnoreSpellCheck->True],
 "\[CloseCurlyDoubleQuote]/\[CloseCurlyDoubleQuote]\:0443\:0433\:0430\:0441\
\:0430\:043d\:0438\:044f\[CloseCurlyDoubleQuote]- \:0441\:043f\:0435\:0446\
\:0438\:0430\:043b\:044c\:043d\:044b\:0435 \:0444\:0443\:043d\:043a\:0446\
\:0438\:0438"
}], "Subtitle",
 CellChangeTimes->{{3.8439744960629897`*^9, 3.8439745287898617`*^9}, {
   3.8439754811123314`*^9, 3.8439755015515003`*^9}, 
   3.843975572646567*^9},ExpressionUUID->"ca6002ec-bde4-4977-a1ad-\
d9c5d0d5bddc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "s_", "]"}], ":=", 
   RowBox[{"Tanh", "[", "s", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"t", "=", 
   RowBox[{"RecurrenceTable", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"a", "[", 
         RowBox[{"n", "+", "1"}], "]"}], "\[Equal]", 
        RowBox[{"g", "[", 
         RowBox[{"a", "[", "n", "]"}], "]"}]}], ",", " ", 
       RowBox[{
        RowBox[{"a", "[", "1", "]"}], "\[Equal]", 
        RowBox[{"g", "[", "s", "]"}]}]}], "}"}], ",", "a", ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "4"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dt", "=", 
    RowBox[{"D", "[", 
     RowBox[{"t", ",", "s"}], "]"}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{"t", ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", 
        RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", " ", 
      RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}], ",", 
    RowBox[{"Plot", "[", 
     RowBox[{"dt", ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", 
        RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", " ", 
      RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8439743104693055`*^9, 3.8439743208208976`*^9}, {
   3.8439745788967276`*^9, 3.843974603105112*^9}, 3.8439748923586564`*^9, {
   3.8439753821946735`*^9, 3.843975383968775*^9}, {3.844574309553851*^9, 
   3.844574311616969*^9}},ExpressionUUID->"0bb37568-865d-4993-b0f4-\
e93212f350ad"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TemplateBox[{
        GraphicsBox[{{{{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwtlGs01HkchzFFSzcVpZrJRCSyaXdNJfu17abQKKqVdR1WdaitnRKO022i
VenUls6ie3OJ7BJlumC+LmmMk0MuMyOzHE0Ypvm5jlua/9pzevE5n/O8et49
zKgjgTEmRkZG7On9/65g3UdRFI4uoYXsaiV4ZMIubWKSQk3+7ohsJcHHT9wc
hvUUfn99t16tILh+NTuqW0uhvzqiJV5OkGWZ8u6NgkJ1ZFZ4RhNBL/VgbVYB
hXejM0JL6wgG/lGX900EhX5jQpa4gmBCfcrhAxIDGpmyTm7JIdjcbNFXwfmM
coXjlEUsQXr5kUWs5VN4MC9gBdOBYHHcq5nz/p3EnbSxlz1KHUamuw208iZw
Rlxf/aEEHY5fS05DGMfZqaHOhXN0yJ/bbpPZOYrPQ2XBuWkf8ZavG7fpgh6d
eRZ91QNa5B3iJDr5jOAlv6Dey2wtJtMeJXB1Q7itX7fTjteHnDP19vKcQTQp
NBvJyunFG2VdmbdiBzDbh5nySqzBlx2rZ/+9kuAbndnQscs9aDffa8ueO1o0
s1ctfLqnG4vWpMW+V2tQU+6gLFJ+wI7qQlt3924UNZjrtm9QY5fLjfUoVqN9
tH+5f3onWp7KdXc17kQf2HmBMDvQxb3fRTiswoysX2p9bdvw3E+6hheJCqT/
1UhblCRHqz35V4MXN2IzI2R2w923WDRaPa/GvhYfychTT5kMhW1dl3tTJFhZ
8rp4WaQEwwKWP22LFmDtNS+xDUeAL8yTWyrj+aD3vL0w7BgfvntvzDi7D4Hn
aWUqWIdgN1AysalSBnetUzX3Y2Xgw2+t89/XCJkNRdHStrewlb2Api9WQNdF
j5jH+XK4EqE4s+6ZChjLNFl3yDuQ+tPn7FrQCca2oxXzNneAjml1qjFbDR4T
LK4ksRPijztzrlh3wzEjvauxvRoUqvmB+2s0cDXp3KCi5gNEJm3uMduhBYvF
Djlfr+mGKmfWxaqZBDh2ix44n+kBh69KNYLtA2DW0hG19qYG6KVxW2emDQLD
KXiY9mcvGE2a5HLfD0GXHP03JPfBWEBZePWqEahibAtdvUkLbd9GLFuVoofj
Szk9lkQLR4PmW65UjUIZ3Q/jzn8Em4wP+2bQx+G1wtE0xlgH+SH3Hg4nTsAJ
42Dfg8d1EOR5entN2SREBYdJxQ06KAw/vHLT1CdwSg5KVzMIjJv/SHux9zOM
779SIT5AIPCthzs90wCMvEvevfcJmHtYVJTeNsBFYby09QGBCsE7v1C+AaxE
ZSIZn8C6xCTOzXwDhLNNeQ+FBOaueJZuU22AercqcUguAdmh9WqrIQNYc49y
RY8JeM1yujp3BwUq9+IhqWTa//v40vwAClzXNtOESKCgTSpkB1Hwc1nL6bPl
BBgF+0vSoyj4yDR5uaGSwNReQbd5EgUz2k/+cK+awDP+Ck8zEQVjEtbA7jcE
fpvTLxXlUZBazFI51hFwSJAEehdSICow3fhpmjN8ww6mllLAdk31vldPgDuY
fZ3WREF7nW2JupHAmpBYBl9Jwa8qMetJE4HOVxtzt7RT4BL62ZHXTGBXplJy
tpeCS8GzYhhyArNMcnyY/RTcEvCKtNOMcQnN5SMUWE8tiX+uIHCixTsicpKC
27jqnxQlgS/9gi/9gv8A+gWfyQ==
               "]]}, Annotation[#, "Charting`Private`Tag$21196#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
PVUWpfTf/QF/9wf8CXpPgq8=
               "]]}, Annotation[#, "Charting`Private`Tag$21196#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
               "]]}, Annotation[#, "Charting`Private`Tag$21196#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
4H//R/B/GoEMtA==
               "]]}, 
             Annotation[#, "Charting`Private`Tag$21196#4"]& ]}}, {}}, {
         DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
          AxesOrigin -> {0, 0}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, DisplayFunction -> Identity, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.05], 
             Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
          DisplayFunction -> Identity, AspectRatio -> 
          NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
          Identity, Frame -> {{False, False}, {False, False}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
            None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}}, 
          PlotRange -> {{-2, 2}, {-0.9640275743084021, 0.9640275743084021}}, 
          PlotRangeClipping -> True, PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
        FormBox[
         FormBox[
          TemplateBox[{
            RowBox[{"tanh", "(", 
              TagBox["s", HoldForm], ")"}], 
            RowBox[{"tanh", "(", 
              RowBox[{"tanh", "(", 
                TagBox["s", HoldForm], ")"}], ")"}], 
            RowBox[{"tanh", "(", 
              RowBox[{"tanh", "(", 
                RowBox[{"tanh", "(", 
                  TagBox["s", HoldForm], ")"}], ")"}], ")"}], 
            RowBox[{"tanh", "(", 
              RowBox[{"tanh", "(", 
                RowBox[{"tanh", "(", 
                  RowBox[{"tanh", "(", 
                    TagBox["s", HoldForm], ")"}], ")"}], ")"}], ")"}]}, 
           "LineLegend", DisplayFunction -> (FormBox[
             StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False], TraditionalForm]& ), 
           InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{
                    TagBox[#, HoldForm], ",", 
                    TagBox[#2, HoldForm], ",", 
                    TagBox[#3, HoldForm], ",", 
                    TagBox[#4, HoldForm]}], "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ),
            Editable -> True], TraditionalForm], TraditionalForm]},
       "Legended",
       DisplayFunction->(GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}]& ),
       Editable->True,
       InterpretationFunction->(RowBox[{"Legended", "[", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]},
     {
      TemplateBox[{
        GraphicsBox[{{{{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
/51X4f/n1f8AYxHsRg==
               "]]}, Annotation[#, "Charting`Private`Tag$21260#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
gPMXLXOLdQZE0C5V3uUjwP/ut/D/++1/AHZE90I=
               "]]}, Annotation[#, "Charting`Private`Tag$21260#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
               "]]}, Annotation[#, "Charting`Private`Tag$21260#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
x2JDiqUT/m+eg/+f5/wPdkybqQ==
               "]]}, 
             Annotation[#, "Charting`Private`Tag$21260#4"]& ]}}, {}}, {
         DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
          AxesOrigin -> {0, 0}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, DisplayFunction -> Identity, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.05], 
             Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
          DisplayFunction -> Identity, AspectRatio -> 
          NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
          Identity, Frame -> {{False, False}, {False, False}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
            None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}}, 
          PlotRange -> {{-2, 2}, {0.012892250866238141`, 0.9999999052226869}},
           PlotRangeClipping -> True, PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
        FormBox[
         FormBox[
          TemplateBox[{
            RowBox[{
              SuperscriptBox["sech", "2"], "(", 
              TagBox["s", HoldForm], ")"}], 
            RowBox[{
              RowBox[{
                SuperscriptBox["sech", "2"], "(", 
                TagBox["s", HoldForm], ")"}], " ", 
              RowBox[{
                SuperscriptBox["sech", "2"], "(", 
                RowBox[{"tanh", "(", 
                  TagBox["s", HoldForm], ")"}], ")"}]}], 
            RowBox[{
              RowBox[{
                SuperscriptBox["sech", "2"], "(", 
                TagBox["s", HoldForm], ")"}], " ", 
              RowBox[{
                SuperscriptBox["sech", "2"], "(", 
                RowBox[{"tanh", "(", 
                  TagBox["s", HoldForm], ")"}], ")"}], " ", 
              RowBox[{
                SuperscriptBox["sech", "2"], "(", 
                RowBox[{"tanh", "(", 
                  RowBox[{"tanh", "(", 
                    TagBox["s", HoldForm], ")"}], ")"}], ")"}]}], 
            RowBox[{
              RowBox[{
                SuperscriptBox["sech", "2"], "(", 
                TagBox["s", HoldForm], ")"}], " ", 
              RowBox[{
                SuperscriptBox["sech", "2"], "(", 
                RowBox[{"tanh", "(", 
                  TagBox["s", HoldForm], ")"}], ")"}], " ", 
              RowBox[{
                SuperscriptBox["sech", "2"], "(", 
                RowBox[{"tanh", "(", 
                  RowBox[{"tanh", "(", 
                    TagBox["s", HoldForm], ")"}], ")"}], ")"}], " ", 
              RowBox[{
                SuperscriptBox["sech", "2"], "(", 
                RowBox[{"tanh", "(", 
                  RowBox[{"tanh", "(", 
                    RowBox[{"tanh", "(", 
                    TagBox["s", HoldForm], ")"}], ")"}], ")"}], ")"}]}]}, 
           "LineLegend", DisplayFunction -> (FormBox[
             StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False], TraditionalForm]& ), 
           InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{
                    TagBox[#, HoldForm], ",", 
                    TagBox[#2, HoldForm], ",", 
                    TagBox[#3, HoldForm], ",", 
                    TagBox[#4, HoldForm]}], "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ),
            Editable -> True], TraditionalForm], TraditionalForm]},
       "Legended",
       DisplayFunction->(GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}]& ),
       Editable->True,
       InterpretationFunction->(RowBox[{"Legended", "[", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.843974312172403*^9, 3.8439743226860046`*^9}, {
   3.8439746042341766`*^9, 3.843974612990678*^9}, 3.8439748937927384`*^9, 
   3.8439753845928106`*^9},
 CellLabel->
  "Out[202]//TableForm=",ExpressionUUID->"aa6496e6-6a2d-4901-b2d9-\
5fbb7142deb5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["\n\:041f\:0440\:043e\:0431\:043b\:0435\:043c\:0430",
  IgnoreSpellCheck->True],
 " ",
 StyleBox["\:043b\:043e\:043a\:0430\:043b\:044c\:043d\:044b\:0445",
  IgnoreSpellCheck->True],
 " ",
 StyleBox["\:043c\:0438\:043d\:0438\:043c\:0443\:043c\:043e\:0432",
  IgnoreSpellCheck->True]
}], "Subtitle",
 CellChangeTimes->{{3.8439755230877323`*^9, 
  3.843975565583163*^9}},ExpressionUUID->"af091af5-f4ca-4fd9-9c98-\
a4b803e4983f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "s_", "]"}], ":=", 
   RowBox[{
    RowBox[{"2", 
     RowBox[{"Exp", "[", 
      RowBox[{"-", 
       RowBox[{"s", "^", "2"}]}], "]"}]}], "-", 
    RowBox[{"Exp", "[", 
     RowBox[{"-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"s", "-", "1"}], ")"}], "^", "2"}]}], "]"}], "+", 
    RowBox[{"Exp", "[", 
     RowBox[{"-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"s", "-", "2"}], ")"}], "^", "2"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"t", "=", 
   RowBox[{"RecurrenceTable", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"a", "[", 
         RowBox[{"n", "+", "1"}], "]"}], "\[Equal]", 
        RowBox[{"g", "[", 
         RowBox[{"a", "[", "n", "]"}], "]"}]}], ",", " ", 
       RowBox[{
        RowBox[{"a", "[", "1", "]"}], "\[Equal]", 
        RowBox[{"g", "[", "s", "]"}]}]}], "}"}], ",", "a", ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dt", "=", 
    RowBox[{"D", "[", 
     RowBox[{"t", ",", "s"}], "]"}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{"t", ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", 
        RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", " ", 
      RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}], ",", 
    RowBox[{"Plot", "[", 
     RowBox[{"dt", ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", 
        RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", " ", 
      RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.843975055859008*^9, 3.8439750809414425`*^9}, {
   3.8439751227238326`*^9, 3.8439753765533504`*^9}, {3.843975436065755*^9, 
   3.843975459344086*^9}, {3.843976157581023*^9, 3.8439763255156283`*^9}, {
   3.843976355875365*^9, 3.8439763883542223`*^9}, 3.844574652632474*^9},
 CellLabel->
  "In[335]:=",ExpressionUUID->"db7d5355-db36-40b3-a539-a065fe343477"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TemplateBox[{
        GraphicsBox[{{{{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwtW2k0le/XdszzUSQJSQgJIUNx9hORFImiJCQJUepnLCGVSMmckHmqzJTZ
cxMyz4TI7KhkHg/xnv9a76dnXWvfwx6uve+9PzwHre4Z3qKloaExo6Oh+d9X
Bnh/7+wQkUOgl8SEYhDp3sYh/w0KER39y+0r3BpEyi04Jr60QkRzWhfu6Nm/
IclL6FlN/SEi69rvD/ouB5OUdz0baP5ORGX5dgr8H0NI7k0h7nWdRDTGQK48
TRdKKn0ez4taqDi7e0zEPJSkRik1LPhKRLV/E6X494WRsPGFxnc5RPT0idm5
nynhpCfvd2zDPhIRJdtPKYg9glRtwsH0OpWIYiRpKMddI0inmyU0fWKIqDFu
fk/ohUjS2c8WZTYviGj4iIVcwP4okuGLlk8KFkSUWZnsYHcwlhR26sfZo6ZE
9KHa5NzZrFhS9+Y0WfwyEY0HkaMaTr4nGTvRi/KfI6KeC2yWg5ZxpGtXT8bS
KBORFSnawtgmgRTLffYE5RgRRXUJWLsXJZB+thj3LUkT0SnZ1yZCrIkkS40H
PGQRIoJCZu7dhYkk6yMfXrVwEtFy/P2Zm/uTSamTX6S+sRCRsZBwxj2PZNJU
fE09oici5YOsCSf6k0l2PCP0hRROZDWcZy0Tl0K6+4/3cfQUJ8rISZ91IaWR
3NqeOd6u5ESlV1WytEY+kF79cf2+XMyJRhM/qbDZfSQlMdmd8i3gRDKi6bkv
lz+SmkFvz/sMThSe1SbxlzuTJJK7p6IzlBM9m7Lyr3PJJqk0Mx22fM2J2EoT
hEb25JD0pjeC/77gRH+jm+vESnJI7sI/rZkfcyK/lX0lJc9ySa3Baeyk25xo
ujgk2fFXHmkiM8q16QYnUqlfO8d2Jp+0Uf9y5IoZJwpUr5/zScsniRLuFf53
kRP1zKSx8d0pID28r2z24SQn8ihOXNlg+0wSN6z/xMPFidCwqc2pz8Uktbul
e5JYOZHau3C+WcUS0sWXmd6yDJxobV0si7eohORZHWykS+FA0XS1x9i+lpI6
5a9uek9woHSWuNQflHLStP65WxzDHCjvpvoG/qaC9M9evS26nwN1SC6cf364
kiSRfDD5cysHqliTHvllgZMec//W/VPMgeysrVy7KYgUKjtY6F7AgR67ffkd
fLGKlHGuVYgxmwP5VUpwrH+oInU+zV8UTuZAri8PLkxaVJMklh9GG7/mQIfu
x4mIjX4ldXez/a66wYEknCumu7FvpCfWnys/mXGg24/cBm9mfyPJLJuHRZhQ
1yvIeo8L1pP8ufPV7PQ40MzfgLRe2gaSuuGVN1yqHEis4TTbk8lG0u9RgjVF
gQPJysrtC7jZRIq6/0llQoYDKVk8Odww3kRaDN4eLRLlQKYvd33Z+6eZlNaW
omjBxYEW2LXt6HnbSEYW+ixn2ThQt6YRaTStjUQztzYkz8iBUJn8y0OC7SRT
znMvGLfYEbZ1vcChsJ1E1FvozyKzI7rLTmuSSx0k90Z1761KdvS6irbp5Zdu
kpgp2WiqhB3ducy0m4a3h9T5K1iivZAdKf/U/r3frYckzTLRkfyRHT3f6r9y
k9RLGj3zUvRcJDt6O+2Xuzn6nRT0XWFDMYQdNZ48o3XvQh9J7fZQi9ArduS8
HuNUU9lHivSTc1t8wo4Gz5WeVUjuJ+nW9ja8c2RHNd8tTzI/+0Fau+QT99SW
HXl42004EAZJKROS/zneZEeH/DdnV3wGSTt0jwVOXWVHmjp5XO/8hkiFGofu
TZ9mR+4uh4rFs4ZJgugej7IAO2Jpf41RlMdIzbuPO5/Yy44oDucF7/uPkR7e
onSp72ZHHO/a8tUGxki9rM/DTjOzo1ndD9HkJ+Ok4MvRuw2X2VD8+MTM4bEJ
EinD4sHlOTY0ecw5bFh9kvSXItp55TcbojvXor4vZpKkm5ATYjHChsq4X09I
mU6R6P7UcDk2syEptmYv1z9kUr76Syenb2zIdexM5ozRNMky+EL7f9VsaGuQ
s2Nv5TSp/PjAm4fFbOh10Ny5jLe/SK4+c5z+KWyI+6zLV1fLP6Rfe/g5kj3Z
kH2hzwudC3OkKNthhzQ3NiRfYvbSvXeOpF2W0vzhARvyr7sR+Ed2npRkKfsq
15YNidZu8CeWz5PMPp1mq7zEhiYsvUkT4wsk1m2WO1UX2JCxTshCntwiqcSg
rbFGlw1lCmpslXotknhXr75swtgQo/bKzVChJVIbdo+lX5oNxX3+5DbquEzy
ClO0GzzMhvL23rfnqV0mSU9t1A+LsCGRr9GinwRXSP6Bz/yn+NhQt+re1/u6
Vkgave+YlunZ0OBVlR8RF9ZIn+/UMBCHWFHAju/C0XAKSUX47rG076zIsu2n
/BTHJqm0e+919U5WRP/YNic/YJOE1O8U3vnGig5WKax9fLFFaiTuvlmfx4rQ
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
iWa8+gmPLscXrl5bxGuLJbhcekdgl9cHJRnCAu7GteMWdHIC/L5I1HOtzeMJ
WxpXlIwngDKbfnVpZh6ftXujOe80AWMWaZ7FffN47MKvsXdpE5B/KrlaI3ce
1zo2U1+1exIMGd7rm1jM44V24/oXZifh8L6DLTSP5nC7TeO0D3lkkFaak05d
msGLHv8ghln9gaen/7aXuJNxDb8rnt1TC1CtM3NB8SYZvyanf/jB2gLQ6P1p
zdYj43psXJ4czIvgeflXc7IIGS/5tBqkJrkIrjaT9a+bp3AB2nht9zuLYOs/
hG4IT+GrgbcXTs8twvnmllyW+gm841C2u+jSEuy5lB18de8YLh/3MlthfAXy
xQNLtejGcAe/7xrMCytgsHF74tjcKD5ZSMfTub0CL+MOqrB+G8Up165PnOZf
he3p8OFS11FcMcHTJ9lgFaYeP5IR6B3BP2Q/rxIvW4W7F0KiKiSH8Trjox3G
fmuQsaw7E0EYxpNMm+eDQ9dg7B09drf/J15v/IKjPG4NjCfcyEIBP/HHJSbF
E1/WADzMlXymh/BzFE9pz6k14Eo+0q2RPojXOn30T9NYh/zVWmK96AD+3Fnm
Nf3sOgR9TKombfTj5WGJAWvr63DH3Nvlc0s/fqi1fF833QaI1qn8SHLtxy8J
Xjc5u28DIiM+pT2u78MvuMrRCmtuwEPFEHUFh++4O63DfbPQDTCedpz/gH3H
aRja/HtjNkAhVjdZeM93/NhtiQ7l1A2YoaNn4azsxfEz3lY5RRtg3uXaPU3s
xZMnrcLu/tgAjQdmd+IKunGxXZg6pxAFhMRVhfb4d+NJbkM5v8UosNm/pyPQ
rBtn64NDmUcpUHiqTcmDoRuv/qntP6RGAfFdGrSXTLpwer+h8tWrFKCtFfrc
eKQLV8tySV2zpMCw++btUzRd+Ouwk68Hb1MgaqSwReZDJ/7K0e7nRRcKsOYe
fsey2YFv19ApkIMoMHWT/rxPWwdur/y3kj6CAl/3jm6vJnfg9ydOX2WIoYCn
d7T1xPkOPFxfUjsnjQKz+hxyeFw7vjR6/U9SOQUaaX+PHf+vHf+tdqWrp4oC
6V/qIjLPtONsitJ/ftdRAKnRrCmMtuG7kquxsnYKpP6YfP3rWSv+4vf7vIUx
Cgx48sa/V2jFmxnc5/5MUYBT6EzuxbEWXLDCzafpNwVcLTM6S6AFtwEm/ROL
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
               "]]}, Annotation[#, "Charting`Private`Tag$95466#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
               "]]}, 
             Annotation[#, "Charting`Private`Tag$95466#2"]& ]}}, {}}, {
         DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
          AxesOrigin -> {0, 0}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, DisplayFunction -> Identity, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.05], 
             Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
          DisplayFunction -> Identity, AspectRatio -> 
          NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
          Identity, Frame -> {{False, False}, {False, False}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
            None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}}, 
          PlotRange -> {{-4, 4}, {2.2505675567355384`*^-7, 
            1.6988911209760593`}}, PlotRangeClipping -> True, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
        FormBox[
         FormBox[
          TemplateBox[{
            RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"-", 
                 SuperscriptBox[
                  RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    TagBox["s", HoldForm]}], ")"}], "2"]}]], "-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"-", 
                 SuperscriptBox[
                  RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    TagBox["s", HoldForm]}], ")"}], "2"]}]], "+", 
              RowBox[{"2", " ", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"-", 
                   SuperscriptBox[
                    TagBox["s", HoldForm], "2"]}]]}]}], 
            RowBox[{
              RowBox[{"exp", "(", 
                RowBox[{"-", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    TagBox["s", HoldForm]}], ")"}], "2"]}]], "-", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    TagBox["s", HoldForm]}], ")"}], "2"]}]], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", 
                    SuperscriptBox[
                    TagBox["s", HoldForm], "2"]}]]}]}], ")"}], "2"]}], ")"}], 
              "-", 
              RowBox[{"exp", "(", 
                RowBox[{"-", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    TagBox["s", HoldForm]}], ")"}], "2"]}]], "-", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    TagBox["s", HoldForm]}], ")"}], "2"]}]], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", 
                    SuperscriptBox[
                    TagBox["s", HoldForm], "2"]}]]}]}], ")"}], "2"]}], ")"}], 
              "+", 
              RowBox[{"2", " ", 
                RowBox[{"exp", "(", 
                  RowBox[{"-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    TagBox["s", HoldForm]}], ")"}], "2"]}]], "-", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    TagBox["s", HoldForm]}], ")"}], "2"]}]], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", 
                    SuperscriptBox[
                    TagBox["s", HoldForm], "2"]}]]}]}], ")"}], "2"]}], 
                  ")"}]}]}]}, "LineLegend", DisplayFunction -> (FormBox[
             StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False], TraditionalForm]& ), 
           InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{
                    TagBox[#, HoldForm], ",", 
                    TagBox[#2, HoldForm]}], "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ),
            Editable -> True], TraditionalForm], TraditionalForm]},
       "Legended",
       DisplayFunction->(GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}]& ),
       Editable->True,
       InterpretationFunction->(RowBox[{"Legended", "[", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]},
     {
      TemplateBox[{
        GraphicsBox[{{{{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1: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
GGSMIlax37PwK/r//w8xkV2T5ZOhX9H/AWrXrng=
               "]]}, Annotation[#, "Charting`Private`Tag$95524#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              LineBox[CompressedData["
1:eJwUV3k8lN8XHoyxjq3Shuwh2UJI3TdLpEgSsifkWxHKUtlCUklSCUlFSSl7
tjT3WrNv2fc9WWcMg7H95vfX+3k+95xz33vuOfc8j5jTTTMXZhwOJ4rH4f7/
VQCC09vbvMhCRaiezJxPurkmEblG50Xv48wTMZd8UnaesjR1mRfZ25jfdarN
J6nIGDtNzvCiGY1E0vHXP0hH+cN7G7p40V11pWRdo0KSf/1z/+o2XnTVb4f+
ztJCUsmDd4KokRc1czm7byoWkbTpJWZ5FbyoLbzNEYgUk7AxSl1CFi/a5lqv
ebXrJ+n+2223F1950VdHH5vjCT9J5ZZEtqefeNHB8PubxgdKSXoNMrohb3gR
jq7L3Knyi3T6h8NP14e8qBN3zK3UH5LMHjZmHHHgRaar2F0l/XLSi5N9pw9b
86LJm5qniW/LSe3rU3+lL/IiLzffw/dp5SQLT7zkvjO8qJ559rVRZgXJ5tKx
JNxRXvRj9t0ZZZUqUtKO01p0ZV7UMffD9MXrKtJgo0U3VZ4XcTztMa/ZqiI5
6njv/CvOi8C+8fz6tmqS86EvUY08vGhz2L5TLLaG9GmiQO43By/6o/GAjGer
JU2+q6xBeF7E3+hosh1YS/pv5zA+n86D9q80f7f3riN5bAoGJk7yoK6rndfb
fBpIfs3h7ldJPOgSc139Ef8WUtSMb9dSEQ8yUX6ceKqhhZTC9t/J0DwepLVv
VIYm1kpqAMa73qbzoOHlE9TTba0k8exdv9piedBmXm7je4M/JI0GtoOOT3lQ
QNlFXZ8vf0jGU2sxcw95UONu4UlpYjvJX3TQmT2QBxnWcKTo9baTmmLSuE9c
5UFXZeeIV6M6SePf4n3rL/OgbOUHzGJbnaS1msfDVrY8yCBDno/Zu4skyXQz
/9Z5HvQ8YDL8smM36a7XUdsvx3hQ9E7iSqFVL0narCZjJx8P4rs4yulRNkjS
9ijZlcLJg7xW8ccyrIdI5x9/C1Zk5UHdngTtKtoQKaA85oIRnYjaJ812j74Z
JrWpXFoPHiciwbKoWdWFEdKUyRkX4hARhdrzcOINR0mb1443J/YQ0ajYC8Kd
lFGSTKpY6o8mInp/reyNt+0YKXDHtNFMEREJnb90LnBinBSr2J/vn0dEO5ui
Pl44O0FKP9MkQsgkooziHlXeHxOktrDcRdFUIjq3L1bfKmqSJLN0N9HiKRGJ
JPXMy16YIrW3c02XXSYibVbLTHajWdJ95x+kDFsiSqj4pX2xbpaksGT/4pUl
EXEZ79/bfHaOFLkjV/s/YyKyEn094mE1TzpuZvWMT5OIbAobK3L0yaTpESZn
+hEiEtdzV+d9RibFe2VojCsQURpFwfhLD5m0GLM1UihJRPlO1+o/e1NIac0f
VR34iOj2krv05fxF0gUHE47TXET0BOMxVWenknALKwMqBCLqvdmw7G1HJVnz
nHlI2OBG6pK/czS5l0i8xpSe73+50fNxSk7KvWWSf93x4A0SN3K7ExZt93mV
JGX998JkMTe6xO3T9mTnGqntX4xMSz43Oml0VSEybI0kzzHemvqVG5l53DrL
fpVOGjF4LHkmjhuVzDxjX9XbIEV3HVlTfc6Nzotd13Qr2yBpXx1oFIniRkps
hUljYJMUF6Hkt3ifGzHXmeUL6W6RjKo6axPcudH7biquXBkHV8xDksPcuJHw
uwtuSf44+HFc9pb7FW5kqfXuZzLCwW2WQKGTl7iRzLXjDw6bM8F8HYmbU3rc
aGahG7/6iBkKo5s7jwpxo9ev8iqSVVlhg4Daba3d3ChB+qTE7WhWeNeF/ue4
ADe60D1ln/+PFXZyPnihx86NKE9Jck8+EmDMxUQBsyUudGWOkqIgzw5PpDt4
X1zgQpG0gDnac3Y4R5dss5rmQsYOV95YrrFDo/dZzx2GuVBP1Tl3egMHZJmp
5HNv4EKji8pltyO5YO7xx56ev7nQ5MCb65nrXNAx5lzLrXIu9HKNei7PkxuW
qvU+u1vEhYp4Bcc1HYnQN2SBJ/IjF9qN/Ew2L/LCf7v2EVMDuJDfXCqXcys/
jHcbupHmx7Cn1Ety7ReAp35+bPjizYUoLqytf1wEYIqjYlS2Gxe6p2VS3Lsl
AG0z9LhI5lxIe+Dm4FGwE3JucVwvO8eF8DFWOs6xO2GxaXNdpREX8gnYf61j
cicUpF16XI9xoYYJw/L4F7tgM3aTo0eeC6Vctj8rtykIg16o/td/kAtxBK/s
YbHZDeUn12qGxLnQI8O5JoOS3TDySXjk5B4udELMokE2cA/U6UxgW8JzIQWh
L3UTO/fBH9crWXkHONEud/5PMs+FoYaoh3JaFyey0NemPRAQgSXtu+2Ot3Gi
Ao8U2Y1XIhAdv55//TcnejRoz2OeegDW8QpcqcnhRJYOImLnZkWhceXPaIdv
nEhAkXCwS00Mtvi7lNDSOJHBV2Gm6BAx2DFSxC+VxIlSY2F04l5xOJzngO5H
cKKwJ53H8qwloJMbx+ye+5zoByXgnVqmBJwQytudfY8T2eUoGBBZJOH0A8LN
QU+G/c/GiZZsSbhs+V34mA0n+q80dU1bWBpybtDvLilyIsmZ1/SwE7LwafbH
tCdynEjvHOvhf19kIZ+LSZu4FCe68r7j2pagHNzV9EH2/D5O9H5q7LEZTQ6K
vjfs/o7nRMdPB7VY1cnDFPNFFv1tDsR7csexZd3DUIojSbF/jQNpuO5l8YOH
oZz3QgTnAgeSSkjkNyhVgGp6cWpXeziQkJZixqKrEixaBZe3/nCgk0ky+0oz
lKDW939Rr5o4kObXt6OvKEoQEzw+XlHBgWT/2Bk9DlGGRlNjsaKZHKjQJ2Lp
b4YKdIxSJveEciCuoIpeJW01eDc/NqIxkAOFd7ba8UWrwVf9VKEyfw6kH111
fe+IGqyTLzid7sGB+kxUlwofq8MjjVqpvtYcaFQhZuv17FFI4NGz2KHCgfxv
z6rFz2tBUfVPs4TDHOhH6d5X+IvH4DF7Qhj9IAc61aURMVR6DHpm1mSNCHOg
oeGF40sx2rDHxJgjm4MDvXkqIih+5gT89syi9OwIOzKySB/HE07C6sJCM6yf
Hf1gf7pjUP8kHBna8+9IFzv6HNyHxUechIJKfbv2N7IjzqttIj85dWBwi8PN
f0Xs6AuPVARRRBea8f8nHhHDiFfbZP76lj68oVlXdOcJO3K69KlitlwfPrx8
6Jx7BDsacNe9enHHKViaM3fPPIAdlb8pOuhReApKmXl3iLuxo71fSZWiREO4
GnsvEgJ2lFjlWFhNMYJ/hcqmT2mxIyr7gTBj2zOwM41g3KTKju6I7vhiX3MG
5pU85x+QZUdBmlYyap/OQo/Rz4n0HexI0eLiCyNvEzim3P5NbYoNCWab7I9Q
PA/bfu7l/TXKht4nVnBd9z4Pkb6Dl94AG6pOkrTWLTgPky9Nq11oY0MP3i/2
9WJm0Oo+DnqWsqF7ynnSTE4XYFOLfGtGDBtSIfF/lO26CEutvY8cecKGjqst
8vTIWcCM8cJXJQ/YkPeP8pS8YAsYuapjXXuXDR3y7c9ek7eEuqKXxiad2VBr
FmXwaJwVLLr5YFlMkxH/TI3L7s828PNaneWXI2xIcnAhyJHXFsaF8ZUoKbAh
bceM4d13bOGt12+CgAQbkt2KYho3tYMKMIfNjsiGHuOmjHwFHGAqz+De+BEC
Cm0cqZr2vAxjbQCbZj8BpeVHhvpkX4ah6e+XejoJ6HmQbVAX+TJ00rnSvL+B
gFYXLb4fuu0ExX2nwt8VEFA1TqPP4cEVmDKwuJD2hID+ea/tcGt3gbFy5gMG
EQRU1mZUmC3uCkP9ftRNhRDQQG7m+qaXK3Ti9/8k50tA+p+xvtwdV6GY/qZ1
piMBXfZXZh664gbff2Or/qFGQCuLIEZa6zqMWXPLs1AioCLPigMnE6/DkFN1
71fkCMhcp1Uhbv06dByOuqcpSkDKqjlPt8puwAM7BZR/cRLQ8hPBNmV7D5h8
TyipcogV7dASuVQz4wmjawIfufSyopfHH39/Lu0Fg3YN+RI6WNHeOmmpPU5e
0D7rw3nDOlZkL/jrqEufFxQek2ZryGdFXi7PDU90ecMkI2XvP49YUbidyeri
8m0oyWVU1xLOiuxc3rjVaPjAjHon8aZgVqTekMF1JcAHlpx92Vbjw4q4Lzvo
kll9Gf22okK6zIq0042JaeJ+UPDCL2q6JivaWSN80j38Dkze0XkmTZUVSRyb
sXzTfgdKtc+npiqyol/14365Uneh6kVR82QpVjSlcuTZp7q70MwyLP8FPysa
ejH4bPxAAHxmc9on6B8evTnePsZKD4KCQk6N98bx6P2ubcvlS8Ewuf+u1J0h
PKq9Ypy4UhIMM+2+ddzqwCOr+evkA1gIbHDgVf+vDI+6DjxR3sN9H7I7d9Au
JOART16Uyh4UCmMk503Ov8SjmC8s85ZroXD3BOGzyTM84hadc9E8EgalXTUs
Tz/Ao2vSKdJT6WFQ3+1N4QkvPFqQyOSXTAqHoTcu+8uexqMzZs5vk1Ij4GC0
fVKJLh4ZOQQ1PZuLgFo5NujMCTy6cxb74aTxEC4uX2T3OIJH8Rwpd3JaHsLL
wUbxucJ4xLFcf0iT+xHEYo8UHVtkQWfPD+pq5TyBSflK/Q2zLCjGxY7dnjMK
rnYextn/ZUFIvXH7iXMUzN4vYxjSz4KMR6pkBISewgOfhLorq1lQAmHvo33x
0XCrkHXV+A0Lsn16aejqWAy07mUWGnrFgsQT5XWY9z6HBRvbwDOGBTEF1o5q
nXsOPU7SH8Y+YEEBnHT09NdzOFA3v7vrJguaqYxVm/kQC0sHuo466rGg8JRV
pwNPXsI9uA4bygkW5Bjd7u9b/xLeFm8LDtVkQWL6228fcb+C8lcbfn9UYEF2
o9/1ZmNewSQysvy3hwWZnMt/PJASB++xfPXznmNG2YeT2izn4qFHgj3BcYoZ
baVkHz6jlgCdFHe8Mh5jRi/sypSZghKgkU1ArkwPMxqsjD7wiz8R7skzmRus
ZEZ6E9GS33XewHwnqtOZJGYk0aJwWa/hLUxf/UzReM2MyApHuWzEkuGbaNsQ
6Vhm5Dwo9MjCLxmGllS9ZYpkRtWJDlas0u/geYH47sJbzGjx1M6HOgbv4XyZ
tonkGWb08Oq6udDvD3DUktLPf4oZCWzqHrq89gF2zH26vo0xIwM8KVFePgWW
7uV91KvOjOYFeBpsX6TAJ14jFTHizKjXcXn9tFsqlBGL0NxcY0Jjqk9fvz/8
CV4OaZbsTGdCWB9fsrPyF2jR8+7EQCoT8gmXurbT9ws0UvG0Gk9mQl3xnMjv
5xeoOs4XtfiSCV3o0rd1NPwK2Q3NqDz3mZDCrb95c9cyYCZvR5nBJSb0abWk
4Vv7d5jq9qnPxJwJKfq1vLwnlQnjy3yWL55jQhnu6jHCfpnw/i1BWWd9JsSt
XdAwJpQFzbssY0KUmVB3eMh3G81suJ7ca1/MwYQM9w3chB9zIHnlqz/CM6Ef
OKN6w/YcOG56L/b3Ng6l160HmuBzYROzUHXHMg6xZORytrvkwhRXu8OLIzhk
sP/OzVmFPGioMLwuV4JD7NrH08N68+GrXxPxSddw6NaPVlLyhyJo758YdNQF
h9gutKgK/iuCMkfOObc54NAz/TiRS8rFsCS9SJH9Ig5t3Ar1MqoshoMvnlTf
AjhkGNgfKLRUAg9eU14y2olD6gsdfu8Cf0Gy5GTPBA8OMTtfkJ9v+wWLhxJh
CAcOleyvWFSUJcHXX9kF3Te3oW+X+MvX3SQ4HJKpq9e2DZletHmmiCHofZie
vHhvG/LRVPTPfSqD+NQr12S8tuGwm+B+re4yGLenUc3edRv23lJa/sFVDn+y
vG+oNd2GD9lzRa/eLof4Xn36e6lt6KFbJTtwtgLGRTy/eK55C1o8k05/ub8K
ymzQRR9UbsEmAyvOS1ZVsMTLebakeAuuYFFcda+q4JDt0TDpj1vQSaL0erFA
NSMfA9mb/ltQ78+aNMuu37BkSIb7m/gWdGZ7VrqpXQsDtJm+J+7ZgiGB4/Vx
IbXweEKP8SOeLXhNjG11pLIWIrPHz1zpm1Bw4H3mq3N18HfVjIBY2yY8Dm68
+uheD9szMvfG3d+E43xNAhuNjTCO/WFJuN8m9PCTNHou3AQtXRxsbrlvQuK5
NTuaexPsFeF7a3ppE6Z7cbJr8DfDkedeolzKm5D6tLhtSqkFzvupHgwZ3oD3
wtvyX8W1wux27hqPzg3YZJ2Tc6mqFXopT7jZNWzAuFFTELfUCpemX33VKtqA
Zc92eQaat8F1u5XDy8824AWK6lGJfX8gu16J6jWwARNf2XfV/mqHEnyYjnny
Otwq3xNd6NENo5VG7l57sQ5rSQBTzu+Gq6aheSGR6/DuqDCHC70bNjyvlPzu
vQ4JIr4aTI964O0dp9kIBuvwQQJHukZWL6wWNGsoXKDD3IamPZxiA1DpKBXf
NE6HQa+cy8a9B2Ci5cvj4z10WHnNaMeLqgF4M74zk6+SDn1bHHd4uQ/CPfts
nv8XT4f//d6xYv97CF4TdrbYf5IOHVkM+rPNRmD7cdZnyup0KP+66V9C6Ag8
YZ/22+AQHUblNBxfyx2BO95NadzeRYfF+knZwrtGYamo+/7Gf2uwXdVJXmBo
FPJI+g4Hxa7BpOzCz6cej8Ncuchro2OrcG/0yJCuzhQ80OpYfKhnFQ4XqPPy
3p+CUX6a7D5Nq3DmYXyQPZqCLpXTn9iKV2Fh3gXPJ9g/uMfeeEQ+ehUGHR5u
ljKYhoHPBaz8NFahAHbwWpT7LDRcTdLnfroCUdD1dxnPyPBHss/Li6ErsLS9
g9ezkAzF9U3Gkv1W4OhWP9VniAzXn2+HKDutQNc5jRU9JQrMPORUanF0BXZr
vqVNtlPgToeDRz6M0KAnu9XgiCwVDlXliKqr02BezPPmoq1lGHBhTU9Dngb7
7a+RH8vR4J4R7D8tcRrkI6S+DregQdON5pwTPDTY2avEMpNJg0hlXsdgchlm
2tPrrl1ege/fyblYxTHw1YADFg2r0OlO6pe7tCV4WUU+JTqHUSeEmcaA2SXI
S27SURxeh4kvVRaDRpdgvtLJ7GaeDdiWVaYV1rQE3267anLc2IC6k0P1T9KW
4L5NUV8F6U0oeUFoPsliCZI5tmzTXm/BCflXKrCACi8+4qx/kI1DckGf5qcy
qNCctGsW/sYhj+YfXwU+UGGNGnrdNohDq16d4q5PqNBj/NHhe9xMiLNw9w6i
IxU6GCl0Z7gwIaWTiVRrDiokzxey7uRhRj6xX7PCtxah8Z8v4nyMOVIyVnI9
k7oIRS4E/KpVY0a6EX1jTIOLUOA/IwMPW2ZkUS/Unp67CD3TyepGacwoUehw
TNtnBj62e2i7kBkNuR8/u5G0CDUWzjxxrmVGbnz2leceLsJW14vxR2aY0b2L
7/JpNouwrLqali/H4BlpWZ6i5xeh/AG8VhZjruNXobzRqUWYF3as8rQhC4pO
HP74VmkRvk6YMbZyZkFtM2TH31KLUJGV912NFwvafZxJmLJvEfbJTva2BrGg
90Nir/RYF+GXk3/R59csaEJJ5bwHnQLfvc2s8kxlQXKhOsT4BQqc3dd8rT6T
BeVJXnkw00OB28fOOChUsqBVn1sndzVTIM/noT1HmliQ9u+wzROVFJgjlmVQ
3sWCqv/76BObSYEug2s0/38siOtnvnJpKgXqMfhtEoUFmXJXzU3EU6BJN6uX
3hoLemnX8YU3moFFvb+64/CoJ3PCRTOM8T/RQxRBNjwSwdHErvhT4Lf3rfEn
iHjkdJ4wGOVOgT7c2PKoAB59ThFMLHCiQJp++2XmPXg0S5W2GLakwHT3gyfe
COGRkv5RAU5jCvzvHW4hQxSPfOIMmo7oMHDCi0EVSTwq+Wv52O4oBWK5MEDh
IB5tabideihPgSs7z4G3snik+9ifOUeMAts11VMCD+FRZF8kqVeQAhVi/xxs
ksejBvmEu3huCkyzU7z09DAe8Qd9UVdgosA3yceqixk4okCmhm+FDOl3VWPt
GJg+//kSdZbRt25eB4MZ/h4HD850jJJhqazwDWFG/FGHtICibjJkKrA7e5Sx
v0W8FM+bJjK8EHG/pF4aj+paPr4LrCTDvX/ks3ok8OgEh6SyYwkZSudHyDoy
zpd7MrVcJ5sMZURcFe0Z55e+K24ulUaG3AVBjW278Sgx98MEWxIZstx6uvsX
I388M6J+08/JMJTtgYwQI7+hEu/ZGx+SYT9HifgCAY9oNgcSswIZ7047j5Ia
436uvUw+FHuLDMt3HwidW2VBZqxvTSwdyPCmS+hozhTj/o8LDWteZJzvlUJA
6RAL0vJ94yV0hgzNN5K81DsZvPdvwssRdTJMXL085lPGguIO7JWulCfDptU7
iloFLIjTKr4wTZwMYfBBv+tfWRC1Jq73Og8ZLjR93xB4zoKuMgneMMGTYW5s
wYXIMBZUcEtu/fLSAsSfxfW4+bCgiIsHT87WL8DpQHmua5Ys6OBesUbcvQVo
tWX+2GUnC+J7fIBc5boARXUMouSZGfVMF97xxGwBykqf2rZdYEY1/fsu7ZJb
gDgTnDj9N6M/3++ckO2Zh9PhodIHvZmRKf8O9oXKeUj5sqZ8zIYZaYTyH8rP
noeLamKpxbrMiMOZx+tE5Dz0XpXhWBFgRl8Psm+aHZ2HsZ2HCoO/MqHYeILo
Hol5WLwS5L0YzYTucrDqDvDMQzsj/+t/vJmQ0QzTo6uTc9A1WWtiVIMJzWSu
7wx4NQezZGb1TUg4JK++IP+JOgtx3te4nOy3oatCcHDxwCx08tL62cy7Dd9J
87Y1/p6Fr3zKcnjQFhTYrehHezMLbUL8rXiFGbxmxaPMQG8W3shOGX1cuwHL
i+cvTr+cgYji8e4seQ1aHZ8PUlSfhrwpzBH0BCqMVQtq1RWdhmI1YH1LgQrr
D/NIWnFOQ7TalhFasQhPiCjUhgz+gywRMg8lZihQYtt9R1vEPyih1dseo0aG
82ju8+2uKRgey97df/cfDNObayn2/wtF15D0R9UuWG44e071yl94O6dOsSSy
A+KMZ5oyjf/C9wKmg1cH/8CAi/8aUsX/whr8qcHl6Bbo6zpR87RhEmIdxIlw
3kroFjmALotOQkc5X3eJqI8gLaof9HNOQtOAiPILDtlgPKaPZLE8AZVO/4uh
Xi8AlxN6Ss/UTUCyXS/vkkIZsP7aUaR2ewIaXr0wndzYAM42NGZz1IxD9jvy
z32Ne8DjlgbF8Nxx6N9gWZn2uhfUtNdnbiWNw9kkx8G7A31Af6D2G9WLYa82
u9pqMwhOzFelD+wfh+TPe9m7YkZAwGLlQSvCOMzMFjxcIDEKSmgVaW3kMRjz
lJlJOX8UHN0u+/i7agz6R7J5jjWOASU+0vucm2NQRe+lcObYBPDY+euAvPUY
ZK9PSepzmgTf9pQmp+mNwRbXFs7goUkgK1aS9GbvGAwpMmne2/oXiKsUxD+o
GIVnufUunn31Dziq/9iNyxyFTn1ure3b/8A7rfy4u/GjMKjzvjrp6jQQ0s19
edN9FMZtPRbKVJwBu8wzYy7tHoWOS2x8/97NglzpJyX6LKNQNSqXp3BhFpiu
XR1XXhiBtpLurRrH58DjZDENzt8jsC34tfWl1jlw0GvrMo3Bo/QOa3qs7Z4H
lbp9T0aTR6Ck54mhc7bzYGvq5VCJ7wgs1ThuIzk4D9789OL47DQCo5+RBT7t
XwAa0SZHXpiMQA8RnZARiwXgfYT94XVpxn5/sJSX1QuAlzCRbSkwAk9lfTrH
u74AvnWX9epuDcOqeLvWNEEymAy8pyDUOQx9l+64P9MngzBTKyv28mH46vV9
PxsbMhCVUAtd+j4MtdKehfJ4ksGvZf5vwwnD0L3mL9vXMDKwrpnvaHgwDK/c
uBCrGEcGK4n120Vew/DFzl+/3n8mg5fu6bKf7Iahglqd+nYhGTQJOAUGqg1D
D4W3u550kMH1iROf/xMbhuaUr5Klo2TAXrS/9SKR8X+bgn9G5snAaBdlOWxx
CFZO4/dvrZHBg5Kvp23rhuC+sXb8DjwFIAfnt6opQ3Co+keaOJEC6HgRCvfd
IXgoUl1ScRcFqH7t0ps4PwTVuju/awlRgMe55/G/ZIdgrubrEANxCkhfMpp9
xTQET0dHTlgepIDRBDzm0TMItY/YKHscogAhQHpxKmcQfi+fq4hSoACLcb+/
Io8G4f2nfWwFShQQ80j52IrjIPw7yuk9q0wBdQoz0c0ag1BE89h9FRUKwLd/
HP3MNwhrz7z49ZixDu7Yq4dMDcBHuopFK4oUcFdkz2MrNAB56ZmcAYcpIL+i
dUApfgDqeVRa7JOjgHm3J8ocngMQd69cv0OKAmR49B+MGAxAq7FDkVmiFOCU
t9VdfGAARlTrdGTso4AkqyL52JV+mPU0frphBwV0bnqFXGvuh5POyU92cVMA
X+qhdp3P/XDbVP1+JAsFGBlOHNwf3A/lqHoJMnQyCJ9Lvke16IeNnHppqwtk
QIq1aq5X6IdLVR1B6+NksHpUQOIjoR+eJVttHukhA5WBet+AwT64xRu0/bGB
DG6EPqgzL+iDCcEDLuchGYw0rHqxuvbBqV44dzWFDIS8c6sGjvfB4XDTvq5Y
MrDYfWNvwa4+2LZ9rTI6lAzqLg8h16pe2DLOpjDgQAa5tCreGsle6KSmPGUs
QAbRX1PKT6z1wF8bn1mWaQvgun2wz4/GHhisxxzY9nsBSFZr9KX49sA/zEWf
jrosgLhXGWmBNd2waPZDn++zeeB9OvLSUlI3XBx4506ymAfnNp25r3t1Q9Hn
0rKVQvOA3UXE22pfNzyXMKMh/WkO3FV9fvzIjS6YXPJNl5A+Cyym3MlfsC5I
tf7CxOQ6C44kGaWK7uqCvpnUR2TxWTDLgufgIXVC+xvz9N8JM8D+j2/7FG8n
5I8cWOIImAY63rbXk/Paocmp2giRPVNARFpTZFdkO+T0fmakX/MXrPfsan1i
2w7LZdMrSX5/Qf7JZvU7rO3w9LfC9V/tk0CaX4fZ3PIP9JWlhN5+OAE4sw8m
cKy3wnufb3/58GcUfOqbePovvAk2NCz2/MF6QW+A4Lu3R5rgqI7j5ZrnPYBH
xCD7/GgjnFXgtzcZ7Qa+jultxaAR8qwsXN0X2gVOTVzb/ZheD2/wXri2WdoO
puYX3st51sL0i+TDZbpNQI6ZnnfdphKWSqxXer/4DuzOC+X3XcmHTrhzy2D6
D5ylLmv6VObBEnfrze9p7TAgrhnySOVB6U8St45f6YBJfaH1JydzIPeZ0POF
/Z0wv76t6lxrJtSLSbvZ2NIDs5ZuSEz1foT0NWHh3JIhGNIu076/wg62Vd4u
9iuZgPK8A9dYD+uBKYqp9oDgJOykhL7jW3UDoYP7nuFuTcJ7L07VXVcNAf3U
FT8Pub+wQvTRw7d8sUDvjtl5x1dT8OpVOdeCrRTgedXAZsZiBhqK+1mHHf8I
TEKCxcu+zUCZgQoT04BPwOT0c7N1plk4bWZ3dHrtMwgUV7a5/5XBA07EsIss
fwPM533uc1LnYDHnvY5ynzxgu777SsphMnx/eNefLPF8kEmVNVk1J8MI06yW
pOZ8YBb8ZjntHoPXxY3V+8oWADdi9w9aNRmSxc6Wyw0UAbGzD/TzzSmwS28S
7n5cDAT2pvNL+VIg6WrIL/zREnD457eU0jgKfPI9v2gw5if4GLh8Vb+DAqU1
hbNi9UgAJeFttxg6h9u28FswhQQsxFJrJh0XITXo/NcbyRCM8xh8Jt1ZhI6j
5WYSAQhkl+hXHkhfhO3UZ60JbQiMafNfSfy1CA1Y7Uz5ZMuA7ctP6n9bF6GC
zIrxZkcZGKJk5fTQFmGKZmXDLfly0LZw65InGxXuOvP8zHRoOVDPrNX4KUiF
kbb2dY495cBrv1VJriQVbrgfOt2lWAGu+evonFOmwpvBq7+NIyoA2clB8ZE2
FY7GVJ2q7K8AC1x3+q1OUaFFSmyV1pFKgMLjPhSYUGFtnoNezqNKoMVt0pF4
kQq1q+QrDg5XgudAtGnTmgqzO9dOJqtXATn+/rEueyqUmKpGO59WgWonLi+x
y1QYt/YCPBmrAkrCbu1tDMzJdZnEpFUN+JIueY8zdGygkMJx/5hqwH3yboEJ
w598eP3n/GQ1IG1I7uJkxHcGNVoux38D6wROIq85FXabvirue/EbGEY3yVic
pcIzTk4aZtO/wVXRDFy3DhWSbikW1mA14Gu0kPbTo1So8mBDDbyuAVxsL154
yFHhp7ja/B9zNSBg/6G22/upcE963BF5vVrgfP1GVzwnFUYVX8lNSawF60o8
CX9WFuF2nZLyXkot0HYokxQZW4Te/ZtZzwzqwKPV7Q9eDYtwcq5OgZBcBwg6
Ixd+5y3CS9uvvwcs1YGPtxcT9yQswgY+F3mqUT34+XDHin3AIsTEVTL++1AP
eLMsOV7aMXTxkW3Z4ZV6gBP99ypHexEmWiQcbPzYAFb77vx7usTQrW6uabrr
DUDu59U1rJEC7985IlVyvhHIe1nurWLoVLekRvHPW43ASXBjVc6IAvu+J34Q
vtgE4O4tV+Z9DJ0Kr4q+zGgC37X99OP+kqHaKJPIfatm8DJh99gwox8USiwp
Sl+aQXKcQp3PKYYui/1eObzWDI6cEd7DwkuGXB++qb03bgG+Vm/Clo8sQPan
lgdWfVqAkWQKDhbNQ/wdZg7T5BZwViO+z0lzHm6YWvVvz7eAFuP6wIMKc3BV
m6Xacncr4PmgpIqlzMIlmcysLNAKrHsaD0kIzMJZHD7MIaYVMD/J8NaemIYD
2VmyULkNhPD7lT+wmoK9SdY7dlu3Ab7Ip9MFX//CzkjWTY/QNmBktxr6eXUS
NjnatIj8aQPpzGntdQ8nIImPzS/o9h+QfMv24/lbo/Cdp33l8cJ24HiaA5Sz
dsEkW47MV0PtwFay4u8hqQ4Yb5j/eo6tA8g8Kz+drf0HxohyXn9r1QFCHF4m
Z6U3wZCWH/ybax3AMbb/tXRKKbysRHQo1e4ColQqZZC9CkiQf65plfcA7VCm
nw8O/AMBjbrhS3M9YDwtS/tR1DTo/FrPk7m3F0Ql7Prpvz4DHrv0SYh59YKg
+/fmYxl8ktxLN2YT7QM7owbF5qwXAalKM+VPYD9YKIoT0tJbBXtSy+SffukH
eSfqM98xrQHvkNOFpzr6wZ0LX3RbSWtA6tilhmL5AbCjp4BsqLEOorL9ae/6
BsCv+EML1lJbwPpNodENzSFgwtm2+9QME5bvDzqkXIYA3T049psuM8Zj8dth
KGYI4Mj6N63fMGNlfF23zaaGADtB67CrIQu2U/feuaQzw2DLwmaHRjweK1OG
O+9cHgZcCnI+f/4xuJooS+9Fv2Hgtjs7+YYWK1az+diZN3UY7BTbU+vTzYrd
K0q8E0pn+HcqX6QT2DCZz4MnHPhGwAUluYmEc2xY+ytxvLb0CGh4Cc/S4tgw
hVtfo5fPjwCPlhTPGjF2bPRwSarbF8Z6+vc3fAc5sGdCW276cAT03rqs1u7M
gWlz6SiId4yAZxki9w584MDipmqL+nCjwDtN+b76Lk7sdGpPo4kVQ7d0Vj7r
mObEyA8yXavcR0GtWE6N434uLN4tbPtY2CgI635SbmPEhU0dPqwsmzkKxgK6
mmNTubAYPua6dxWjQHA20KmmkQvToHY6CfaMAt0RzR+ONC4ssijkJQt+DOTS
eQ5l6XBjSm8uHr67dwzgvOe+ObpyY92BctVkhTHQYVb47XokNyaj274ycGkM
ONw8G/jwNzfWIvUlxvzmGMB4xJ+/GufG/NmDZOvDx4CT/Z/0lW1urKbxoE1R
1hgYCKYx/VAmYp7ZG1SFqjGQs++2G68hEdvzojXqU+8YuC9hLlRqS8SQT5qU
EHkMUHLy9X7eJGJuVvdIsazjgH36li7xPhHjO2ZqybF/nEGDS/JzY4hYkbAU
OVhpHFSz3vH4lkzEHHH0SJr+OBjY7g1e/0rE2MeaxNxtxoGwe4bShx9ELLsq
tWTMcxzIv8nCvSMRMat0/wvWEePArHk5jVZFxHBPjGdb3oyDpdU9/F/riVi6
u/gDg5xx0Jhwx+lnMxEzNV0RJlWPg0jVG1T5NiK2qtJQoNo/Dvxf2pky/SFi
73d9OJdBGQfWenMaxxjrBqs+U2JsE6D0yVbyAMN/vtfofrzQBDhkjD7NMOLH
/Tqwj1dlApwT+/berZqInXi/lPvAYAIUcgcKWEEiNhlae2bDdgL0K4p8+1VA
xKJdkse9vScAbHt+5u03IqZueCvwH4PHSSu00unvidignKGg49sJYGPxab73
BRGLIApndeZOgO2MOw9OPiBiCmSKgXHNBDDRkDl1xIeIdbZVD1cMTAAVGzSY
f4WIBf14c0eLOgEeKxtK1JsSMel4T4Ec9knAtv8O9z1tItZ0Vz/joMgkiKn2
K6iVJmK+dvv0ko9MglT5SIdSXiJWLV7p88R+Ekju+GKUOsCNebAm8DDfngRu
bbj0lHJuTHDK/bP/o0lgnWmkYZvGjbl+393jkj8JnvblOey6xo0RNK5rY5x/
wb2WJNXTY1xY5j6so+DAX8BX51lXTuLCLDZ3ehxW+wtOdeyoPZjAhaWVk97t
c/wLCMc/EpsY9a9vLMCy/OMveHjNdYd+CicWfZmDslb7F4ztfv1flz8n1u2D
G9oa+AuqPviIfzbhxK4lz5ewE6aA68uUiZ2rHFj0Qp23kMUUeMiMd6/S4cC6
n4eN6tKmQGaog7lVKRt2rXOpLFZ9GlSs16SquuKxvOmZrNdG00Bg2VmDSRGP
bWyNvk2ynwYyrWb8+SssWPTB1jtpEdOATi/5OhjJguX5f1cu6ZwG31JmrMq/
MmMb+1w/jPjOAP1j163syDjsmUNXiFLhLHBNfouXP7oOIma1wWTDLDDPuBjs
WUMHQXdSNt+MzoJcty0bH2s68HjhfpeNZw4Mm/MGtYesAZPfLLcHnedAWCX3
0H9dK4BHUelqlMA8IAqEXzLMWgKE0ldSOjLzYDva/liIyRLYMlwfWzk+D7Kr
xhuy56lg3qna8cp/80DLYIuVRYUKmuJsrbXQPPD6p/gztpICorcijafcF8C0
5kMuDtV5EPFknis5bAEI/xKtvBM7B4L2mNddSFgAhDdy2rOLs8BD5YABrFwA
HxccvzUXz4CDedai9UQyyDM/H2rm8A+w/SXvTXEmA+s8v7LHhAkQ9l1iLeAm
GZD9TOVrw8bB9i2Lbsu7ZHBfIfJRG/M4WMGVxhFjGDrQ5LOGMmEM/N33cMed
n2SQrKonESY2An6bCBNNBRi6XnTojrERYy4pjAh6M3S71WCqQWhEL3AkfhJ9
KU0Bguqv52SregC9Xl61W4sCcOVv8amnu4H8aW0bxysUQNn3dWLevQPE6Np8
8cyngO//Vf1R29sCrDUS9J9bLIKYmP3a3pElIG233bk8x0VQN3g3vcOsCFBp
opc6ri2CU7UXVCtFC0DUj/Qbe4MXwdHZioqA6hwAVYpefPi8CHa+2exlcUsB
koe7RnJWF0Gvjp2p9+lkOCe2K6gtkQryxXbwET0qoca9D15lH6mgoMIkUN6v
Coa2H3bJzqQCBeaYAwr3q6Hgw1Nno8upYCdHi/Hu+Bp4YtZvn9E0FYze9JqU
/dMAnxX0FpRpLgHDcvVhzao2qHzm/UJ29xKoTwf936X6YcBH+bF3o0vArZ94
z7KyH1ZvFnVGzy6BU81XWAWdB6B1duuvG7hl4OpjMtmdNghDd7FEycgsgyNv
LR83Jg3DP0MuMu/9lkG3gO5THaMx6HP70OVngjSgkOJ/UID7HxTkXCi1EKMB
HZaUt69u/4NF73L3iMjTAMcb+/HkgX9wo06z5dtJGhiNlm1Vy5mGoWKGoO4G
DYxjinR++1kY3eQszFpBAxfGPsit1y3ANJnknrs3VwC6j10PuUqFhqTLajp3
V4D+qHRR1Tsq/HdB6jnHgxUgcAxGbHRRoXzwN8P4xBXQvGZvo2y4BHM7Sgp/
VK2Ar5YjMpcOLkNSaNcr8v5V4Kj8CYsfoMGufj4z15pVgG+abyPz0aHRE5fu
222rINwpfPP2cTos1SyxD+tfBT67hnc8+Y8O38dduf6ezOA5Tx/zOyE6dDMt
CO/dswa6OX23b7qtw94tTq5/4mug13hih8bzdXj2u8PzFfk1wL/1qz2geB0q
c3Ik7zy5Bkh0Ln1v9g1Ir7ApNPlvDXTRl4Rq3m3AG97Zx+1urYHyXO0kpcoN
OCjKWnk9cA2QR1aDmac2YHlgZkvk8zVgB8sjeg5vwidHmabLi9eA051bLnty
N+HWxEXP1oo18Gjrddyz1k3o+fIrbahxDaR47HN3IG9Cc8oFls2RNUBt+hvB
JL8FhTLShI5y0gG9LfG58JstGH1pPUV/Jx0o8ALSwR9bEMduKmsuQgfTsQN/
Apq24LjzmpqXCh1sRhzrZNreghY7TEqDtekgKcqLqiC4DWvKUnSiTzHeqeF2
6w/y2/C7yNlzGYx3q1NSjOW85TYUbXzfUexMBznl0hNPrm/D2HvLNjUedKCq
UXOBLXgb+nYnu02E0kGB8HLhz9RtOBVBnadG0YFv86vyxfxtaK1m6MP8mg52
sIiFu1ZtwxOxlPsHMujgW8LFVdz4NszGTrEr/KADL/5z6tKL21B8ITFaGzLi
KU6efLC9DV++Xdh5ppYOHl1ireAh4BDhrN6bS3/oIO7HuRMrXDjkT48Xcxug
gz3CJ7ru8ePQdPrcZ9+/dHBtveBSkiAO2VrqKDyg0EH+nn0JVvtxqJn1df6L
dTp4ePOEZ/YBHNLJn9FKYV0HIiseZakSOJTvhJVl864DXWdXX5WDOCTN/8oA
7l0HdaOnQ2zlcCge/mtslFgHEnUpXWKHcYjT44R5/+F1cOScZUCoIg4FCL3o
nWbMBUf1FJ8gZRyar/vruHZyHdyM5GjbdQSHHO9o/2U7uw7Cjc0/G6rikJxz
Tce8xTooNdHqlVDDIaqJeWXH5XUg/sJO6xEDl2oO55beWAf9dZvb/gwcIXnj
Q6rfOsCv7nKnMvxNeVefPQ5dB5QK/cZVRvy99LAgr6frYPFKsc8jFRwaHed1
t4pfB0U7+ao+KeHQt+Y3NiB1HSionpQwUcAh35KDRtKZ66CdKYQp7BAOgU95
GsTiddBEFOnVk8Eh9hhwcKliHexzuKH0UhKH2u7W7+prWgdll97EeIniUJKL
Jb68Zx1Muyc8G2Dk19V0bDF9fB0Mx5Pruhn5X5Nab/alrwMNOv51MOO+yvke
kuxYN0BZVkKUPCsORa0LfNfj2wC4tD+8XRuMemuVeywgvQE8o8Wc9Ie24fTP
Av81pQ2gmmfHqtm8DfPSdK4OH9sAXeoPdCxJ2/BUgLVe5vkN0PuysGRf4jbk
uzqp8sp2A8i/zsiuiNiGPee9xQKuboBjCuk/kr234Y2Dj7dOB26ArWb5pUUD
Rj23FRdNpG8AQe4P0uf+bUHbX/qfG/I2AN3ZcF9F8xaUSm99lUfaALGmkQ53
Gf1VFPjP+377BuCedTIuDdqCgzJ7DwvjNsE6IYnUyr4F03d82o/n2gTVmg+2
Uv9tQq8tJc6ZXZvgRP7CucbaTYhvN/xbdGgTRIcnxCtGbkK5YP8P5pabYESA
Jhu4uQGX/sPHHHPaBNlhlvJmPRvwl3lMkLj7JhD2K859kb8BTeXSbcihm0Cu
tPjS1f82oG9H166ozE2QsontfNewDisOHX1cwbrF4M/CNVX36NBe0TyVwrsF
BpSFFT+Y0eGqilfpgX1boIfIsSwuS4fyWhnz9xS2AP7ddJ54xxp8aXjggqrl
FlBaviZjJrsGXV3YhD6lbwEJfOt/lytXIPu7ru8RZ7bBorao7PqfJSjNUTr1
0RCHFVK9916/MweFS6/rs0YyYeqF8em1yo0QR2f+4j3KjGX7KBy2vc+Y72M9
1OC/zJj1JCtXIH8fQA3ZJ57OMmMyWxVOTh/6QMg7+/bPNGbMU8Lm6R3UD7b1
Srb7OVmw3qnhvy3rg2DrmZeFwREWbHp5mt8ubwRsSA2zCIWzYKS0udvM+Elg
y1toIvuIBXPuFzr5y2ASlK4+TVCPZsEKCo8lnX0yCQLqjymej2fBVE/prU/w
/wXrnq+tI76xYJm2N/XmhKYA/adJDrmdBeP4t+PwM9lpsHL+l32VFB7b8n1Y
6Sg4D0J7sgZOHMJjP+tDH69azgOeyym2RUp4bNGRcF4jYR5Iez60zjiGx/g1
Vae/7FsA5tHnLZ6fx2O1OfeiXnGTQXbdhLFdIB7rTYjc8ZmJArTNuhs6Q/FY
Na9mjuUBCvjdU3fGNBKPleufY2vRpoDBqazTui/wWNyVStJOPwrgZrurL/sF
j8X/aX/dPUUB/+nyHF9ux2NPjhckv0WLYKkOV+rRi8cklEa13HsXQYgZVWtq
CI+t746wXaUugvjL3Rp903jswqKH4QlpKqgOTlEtw7FiPJk9v28/pAIztld5
WgRWbHpD5An3OyoYiH6oks/FitUlaSlbF1DB0tsbSp8FWbHbY1F3do5TgXip
uvxTeVbsawHjvT+2BDJ1ZTMIKqzY2/OaFgfPLwHN+v1yIUdZsXHT1Wxu1yVg
2ouTuaXDis1JH7P/G70EglbrJC5ZsWKxrlafG/qXQJ+qw36pcFZs4z9exxE3
Bq9ZU+N98IgVu2LKV/zafxmQf3GzTESzYnT27fm1h8sAb1Ay/TGBFTsr4e6H
Pi0DhUu7SiSzWDGOj2NOZweWQZHw7PfwfIZ/sueS5fQy0Bkt/zBezIqRpFJr
uFeWgeV1z0cfKxm4w13Ri5cGQgLrrSR7WbE9//25L6JNA5w6KWfDh1ixoO3w
RPdTNPCKcAcbH2fFUv+K6Dqb0sDXZ9IyHxdYsS/fpXMNrtCAqvnmfvwyKzZQ
r6SpyuBJpD3tvM50VqxF1Kn1920a+PPh/ooEKwGT31E2PBZOA/auVjNhnASs
n2599EYUDUzJKQ6N8RKw3voVuzcvaGAjr786dR8BOz2bjZ9/TwMR/nklLKIE
jCnwWBj/ZxrgP/4484oUAcu1+dTU940GpKuPxkkoETBpr0SqcyENZD/meRym
RsBCd7+cliilAa1zE4FjWgSsIuXUv0eIBip3lHrpYgTs3SKR/XUlDZzrjnVJ
1SdgGI/wlTM1NNCb9N8lljMEzPLgvX2f62nA+TJmfMWUgFG1cWZfm2hgXmr3
yYqLBKzK/rzyxVYa8J+eU5WwIWDMsf1jn//QAHNWpUyYIwGjWLXHp3TQwNNb
b4TGXAiY4aBcmH4XDezR8ObTvU7AgqqiemK6aSBlwxCf6knAzD/YdIb30IB8
2YFVZl8CBvnTC8V6aaDgAW3G6R4BS3t8CF5lYMyocag8hIAlVJ5UsWTgep6P
f8QjCBi+Z+QSmeFv8efu79AnBEyP63XoEQYefn3+52gMAePE7myIMva7ZiuT
pRNHwNwlpfYXd9LAkuh2SsobAuZGyFfbaKeBoImOOOYPBEzUMS9tuo3Bi79+
e+yURsBidws1hLfQwEuPsKDyDAKme/s0W30jDYgcsfYWzyFgOQ0Lpb/qaCB9
Rck1tICALc4KXLT7TQMqpWzWoz8Z8TU2tL4yeHNpyKCxThkBk4xUGvgIacBA
/8fJlGoCVvrb5bvxTxpo44hSY24gYOfM/EU/FdCAbZOTrFMrAQvgd8zMyKEB
T0s+fvF+AlaZ28FRk0YDTumKiVIjBCzQ34Z66gMNXFwzkZCdJGD8f9Xl779h
3P+bp2pKZALmOrisI/uMBg7PfiMdWSZg+8n5TPGRNCB6vMHgKJ2AtcjfbK24
TwOsQ5zWJ/BsWO1Z0wDzWzSwqig3dpKDDYs3yDMsuU4D0yGnb+jzsGFzEn7s
Q4z6bxGPDDq7hw1Ljaq7dPUCDSS6sqZay7NhN86l3byvSANRhZLy9spsmAUu
aHlWigaC2fV+XFZnwxRWb0btF2LU19fQ324YG+bo4i1UyUYDivPbM77mDPtr
3y+b9S+DSh+66osANmxFau/K+N1lUFC9lxR3nw0L3lDcqHJfBl92axokRrBh
C49Wrt9yXAbRxX6XPsSwYVpvlTnV9ZfBpc2lwKyPbNht0ZNT17mXwXz4QnV9
AxvWm0hukY1dAntfjlvhhdmxlxPvHj8IpgKNsAOCt8XZsY9BVVLp16nAwtv6
z9hBdqz2kWV1miWVwQtajCtU2LGNdEnfY4pUwE0s1Qk1ZMdu8QZx9fYvgq0H
L+RxtxnrVcL/PqksgnE/HdxGHTu2LzyyYG8TGWTavP9M9efAyExc3sG9M0C1
S4JOCOLATqT6rzdmzYCfZp/P7gvjwKzEFcoPPZgBNaczKdhTDsw3gklpj9IM
GDtaeiz6AwcmuhqFr4uYBnt2djfL1HFgzhlSX45o/AOhDbyrdvs5MQWNVtXX
WZOA3fCFkZcoJ5b298S2cOQkeFYh+DZcihPj0jn7+7fjJEgqEdbJUOTEPoae
IkYITILC9ENRq7qcmEMFP0ex3wSYDTcQfXGDEzv5fUvI+PQ4sDwebFjzixN7
ZhXZbco1CvqXJ3nLyzkxscO+RVH/RoBTpknXz9+cGDtJRZT6ewTcOCDimtXK
iSXmZe3AHoyAUKZfYXETnNjDZZ/tAaYRkFlFJzkTubCjWOgKYBkGeBNfNSY7
LuxySfavJeN+8JgwuEG/zIWpmFr1W+3qB7xQv3LJlQtbOvGpdedAH9intOvC
lCcXpth6b/yFex9QFMj3bA7nwiqTPmZmxPYC605KxttvXJjrgQZ5iblukGPv
Lq61wYXRnKU/9490AKcfZOH3TNyYCct+YbbsDrCT+/ZeAhs3ZioyevN5UAfw
Lb7L18bPjXmzF8tWCnUArZ2RW/8d5MZevikjvrZrB+W1Kb0JZtwYXA3AXpPb
wC1R6c5tS25sTxnB71llG5D0+9LqYseN/ZezPTMc3wYiJLNrlN24sSfxGpVP
ddrAmeBfBbWB3Biu8q4Lc2IraFftjl1L58awzL6ReasW8OCJTbRDJjfWX65y
V1elBaiPDj6qyuPGjDJeNv3jagHxzyZCnpO4sfmxt94XQpqB3fSih2w7NyZx
+2Fjq1UTmHxHPHNpmxvb8SBscFa6Aaxy6rIUXyRisnihM7lKNUBgnudluTUR
E9ztebpx7Tc41Nor2eBAxN7vlT1rU/Eb2L/2PjX0HxFD/x3UbrT8DSokUh6x
BhGxFPwn8uKDahCtzcRnlkbEhKTvD8TTKkH6gcb3NhlEjN1qS/NhdSUoY05Q
dskmYrwnYy/0x1WCpRqlC/4lRGx6h1tFoUYlsL7oGJfcRMTuBItOityvAFIe
UGiGRsRY9QrNuSTLwYnzT74vrROxJJbcSiK9DFipWp7YwvFgd+wJztdbysBj
+rwDPxcPZvsHd10tqAyQI0RSjx7gwexYUpwpAwiUvguUDTdg2Dt++TVuDYFZ
6zF14XgejHs5v1mW7yfgPMZVVvqWB/PuQlPE2hJQ9rH3jG0qw/+MxZmU0BKg
5H/n8ptMHkxgwPhpx0ox4DlQGLW3igfbbdrFqzVdBGpvqIztWuTBnp+8b/Fp
rgCEdDJ5/FjhwZbSivk7sguABtb6vwA9AcL++FT9DkBJUV71nHS2P6YTcA6U
CA9A7QENlu/9tT+Euq05Eh8PQGCBkIF5F7U/QAgpkA5MD0CXZBme82SzP/hx
+BquUQ9ANkYBIgMxsz+v28elTVcPQOKzn5yV/bI/Hq9mu4xiD0D5WOKLPpiy
P/xVpOYKeQ9AkEOXg37TsT+3ox89B6YPQLKZix2xYLA/bg3vx6arD0Ba0wEn
YjSwPyZ3vlJGsQ9AatBrsoMIsD+USl1ohbwPQCnudxcoZK8/cvGakwPTD0A7
6Ab0mBSuPypbah6j2A9AyHqPZsjCrT/hxDmpQt4PQFLp+03Ica0/UJjYvoHp
D0AvHKaOMdKsPwgCqEkh7w9AkSUV/ZaDrD+/a3fUwPQPQDSruArFNaw/dtVG
X2D6D0BaYZ/NueirPy4/Fur//w9An3ZdYHOcqz8CEaSJ
               "]]}, 
             Annotation[#, "Charting`Private`Tag$95524#2"]& ]}}, {}}, {
         DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
          AxesOrigin -> {0, 0}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, DisplayFunction -> Identity, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.05], 
             Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
          DisplayFunction -> Identity, AspectRatio -> 
          NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
          Identity, Frame -> {{False, False}, {False, False}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
            None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}}, 
          PlotRange -> {{-4, 4}, {-2.522326992697186, 3.7280298498686157`}}, 
          PlotRangeClipping -> True, PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
        FormBox[
         FormBox[
          TemplateBox[{
            RowBox[{
              RowBox[{
                RowBox[{"-", "2"}], " ", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"-", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    TagBox["s", HoldForm]}], ")"}], "2"]}]], " ", 
                RowBox[{"(", 
                  RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    TagBox["s", HoldForm]}], ")"}]}], "+", 
              RowBox[{"2", " ", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"-", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    TagBox["s", HoldForm]}], ")"}], "2"]}]], " ", 
                RowBox[{"(", 
                  RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    TagBox["s", HoldForm]}], ")"}]}], "-", 
              RowBox[{"4", " ", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"-", 
                   SuperscriptBox[
                    TagBox["s", HoldForm], "2"]}]], " ", 
                TagBox["s", HoldForm]}]}], 
            RowBox[{
              RowBox[{
                RowBox[{"-", "2"}], " ", 
                RowBox[{"exp", "(", 
                  RowBox[{"-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    TagBox["s", HoldForm]}], ")"}], "2"]}]], "-", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    TagBox["s", HoldForm]}], ")"}], "2"]}]], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", 
                    SuperscriptBox[
                    TagBox["s", HoldForm], "2"]}]]}]}], ")"}], "2"]}], ")"}], 
                " ", 
                RowBox[{"(", 
                  RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    TagBox["s", HoldForm]}], ")"}], "2"]}]], "-", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    TagBox["s", HoldForm]}], ")"}], "2"]}]], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", 
                    SuperscriptBox[
                    TagBox["s", HoldForm], "2"]}]]}]}], ")"}], " ", 
                RowBox[{"(", 
                  RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    TagBox["s", HoldForm]}], ")"}], "2"]}]], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    TagBox["s", HoldForm]}], ")"}]}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    TagBox["s", HoldForm]}], ")"}], "2"]}]], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    TagBox["s", HoldForm]}], ")"}]}], "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", 
                    SuperscriptBox[
                    TagBox["s", HoldForm], "2"]}]], " ", 
                    TagBox["s", HoldForm]}]}], ")"}]}], "+", 
              RowBox[{"2", " ", 
                RowBox[{"exp", "(", 
                  RowBox[{"-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    TagBox["s", HoldForm]}], ")"}], "2"]}]], "-", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    TagBox["s", HoldForm]}], ")"}], "2"]}]], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", 
                    SuperscriptBox[
                    TagBox["s", HoldForm], "2"]}]]}]}], ")"}], "2"]}], ")"}], 
                " ", 
                RowBox[{"(", 
                  RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    TagBox["s", HoldForm]}], ")"}], "2"]}]], "-", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    TagBox["s", HoldForm]}], ")"}], "2"]}]], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", 
                    SuperscriptBox[
                    TagBox["s", HoldForm], "2"]}]]}]}], ")"}], " ", 
                RowBox[{"(", 
                  RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    TagBox["s", HoldForm]}], ")"}], "2"]}]], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    TagBox["s", HoldForm]}], ")"}]}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    TagBox["s", HoldForm]}], ")"}], "2"]}]], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    TagBox["s", HoldForm]}], ")"}]}], "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", 
                    SuperscriptBox[
                    TagBox["s", HoldForm], "2"]}]], " ", 
                    TagBox["s", HoldForm]}]}], ")"}]}], "-", 
              RowBox[{"4", " ", 
                RowBox[{"exp", "(", 
                  RowBox[{"-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    TagBox["s", HoldForm]}], ")"}], "2"]}]], "-", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    TagBox["s", HoldForm]}], ")"}], "2"]}]], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", 
                    SuperscriptBox[
                    TagBox["s", HoldForm], "2"]}]]}]}], ")"}], "2"]}], ")"}], 
                " ", 
                RowBox[{"(", 
                  RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    TagBox["s", HoldForm]}], ")"}], "2"]}]], "-", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    TagBox["s", HoldForm]}], ")"}], "2"]}]], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", 
                    SuperscriptBox[
                    TagBox["s", HoldForm], "2"]}]]}]}], ")"}], " ", 
                RowBox[{"(", 
                  RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    TagBox["s", HoldForm]}], ")"}], "2"]}]], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    TagBox["s", HoldForm]}], ")"}]}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    TagBox["s", HoldForm]}], ")"}], "2"]}]], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    TagBox["s", HoldForm]}], ")"}]}], "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", 
                    SuperscriptBox[
                    TagBox["s", HoldForm], "2"]}]], " ", 
                    TagBox["s", HoldForm]}]}], ")"}]}]}]}, "LineLegend", 
           DisplayFunction -> (FormBox[
             StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False], TraditionalForm]& ), 
           InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{
                    TagBox[#, HoldForm], ",", 
                    TagBox[#2, HoldForm]}], "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ),
            Editable -> True], TraditionalForm], TraditionalForm]},
       "Legended",
       DisplayFunction->(GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}]& ),
       Editable->True,
       InterpretationFunction->(RowBox[{"Legended", "[", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.8439752988499064`*^9, 3.843975376953374*^9}, {
   3.8439754366767893`*^9, 3.8439754600641274`*^9}, {3.8439761594111276`*^9, 
   3.843976312455881*^9}, {3.8439763498000174`*^9, 3.843976389742302*^9}, 
   3.844574654170562*^9},
 CellLabel->
  "Out[338]//TableForm=",ExpressionUUID->"cf1ef995-d96c-43c4-83d0-\
273195083743"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"13470", "/", "50"}], "]"}]], "Input",
 CellChangeTimes->{{3.8445745819064283`*^9, 3.8445745904469175`*^9}},
 CellLabel->
  "In[334]:=",ExpressionUUID->"09b9a194-1463-4706-82bc-29c0071437ec"],

Cell[BoxData["269.4`"], "Output",
 CellChangeTimes->{{3.8445745861096687`*^9, 3.844574590796937*^9}},
 CellLabel->
  "Out[334]=",ExpressionUUID->"e369cdd2-f255-4a39-9067-caf96aaf363d"]
}, Open  ]]
}, Open  ]]
},
WindowToolbars->{"RulerBar", "EditBar"},
WindowSize->{1536., 616.8},
WindowMargins->{{1530.6, Automatic}, {Automatic, -5.3999999999999995`}},
TaggingRules->{
 ScrollPosition -> {0., 1964.824120603015}, 
  "WelcomeScreenSettings" -> {"FEStarting" -> False}, "TryRealOnly" -> False},
SpellingDictionaries->{"CorrectWords"->{
 "\:043a\:043e\:043d\:043e\:0440\:043c\:0430", 
  "\:041f\:0440\:043e\:0441\:0442\:043e\:0439", 
  "\:043d\:0435\:043b\:0438\:043d\:0435\:0439\:043d\:043e\:0439", 
  "\:0444\:0443\:043d\:043a\:0446\:0438\:0435\:0439", 
  "\:0444\:0443\:043d\:043a\:0446\:0438\:0438", 
  "\:0440\:043e\:0441\:0442\:0430", 
  "\:043f\:0440\:043e\:0438\:0437\:0432\:043e\:0434\:043d\:043e\:0439", 
  "\:0441\:043b\:043e\:0436\:043d\:043e\:0439", 
  "\:0432\:0437\:0440\:044b\:0432\:043d\:043e\:0439", 
  "\:0433\:0440\:0430\:0434\:0438\:0435\:043d\:0442", 
  "\:0443\:0433\:0430\:0441\:0430\:043d\:0438\:044f", 
  "\:0433\:0440\:0430\:0434\:0438\:0435\:043d\:0442\:0430", 
  "\:0441\:043f\:0435\:0446\:0438\:0430\:043b\:044c\:043d\:044b\:0435", 
  "\:043f\:0440\:043e\:0431\:043b\:0435\:043c", 
  "\:0420\:0435\:0448\:0435\:043d\:0438\:0435", 
  "\:0430\:043a\:0442\:0438\:0432\:0430\:0446\:0438\:0438", 
  "\:0444\:0443\:043d\:043a\:0446\:0438\:0439"}},
Magnification:>1.5 Inherited,
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (June 9, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"564d902d-49d1-4c14-962c-0c770dd2216f"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 730, 13, 72, "Input",ExpressionUUID->"fd7b657a-276f-43be-8ce4-100fb7afff3d"],
Cell[CellGroupData[{
Cell[1313, 37, 590, 16, 124, "Subtitle",ExpressionUUID->"439ff0f9-6835-4e3f-a11f-92435b082b8b"],
Cell[CellGroupData[{
Cell[1928, 57, 2622, 56, 217, "Input",ExpressionUUID->"1d08771e-1500-48fd-8e42-61b8d38a86bd"],
Cell[4553, 115, 1837, 53, 126, "Output",ExpressionUUID->"9805f191-372c-4c0b-8df5-03d23deeec21"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[6439, 174, 396, 10, 78, "Subtitle",ExpressionUUID->"0c8a1356-8ca2-4303-b230-73b05d3b3e32"],
Cell[CellGroupData[{
Cell[6860, 188, 1648, 43, 188, "Input",ExpressionUUID->"339e1968-9e54-4beb-8e1b-cbbad5f0af71"],
Cell[8511, 233, 2141, 59, 89, "Output",ExpressionUUID->"29dfd9f4-eb38-4ec5-92c7-da06a0010708"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10689, 297, 1994, 54, 217, "Input",ExpressionUUID->"81815908-0fee-456a-b04f-d7cb395ce42f"],
Cell[12686, 353, 4778, 131, 161, "Output",ExpressionUUID->"1781bf90-76dd-49a4-b800-2fa2c9b72ee7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[17513, 490, 539, 14, 124, "Subtitle",ExpressionUUID->"fbdc7736-7aa8-43ed-8264-f507e64842c5"],
Cell[CellGroupData[{
Cell[18077, 508, 1270, 30, 101, "Input",ExpressionUUID->"73407c85-b3ff-4b07-9ee5-806323cc9a60"],
Cell[19350, 540, 8092, 228, 236, "Output",ExpressionUUID->"98008cbc-8cab-442f-863a-de0ce6cd5c14"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[27491, 774, 477, 12, 124, "Subtitle",ExpressionUUID->"117337d6-233f-4081-abbc-a3e1c8768df0"],
Cell[CellGroupData[{
Cell[27993, 790, 3570, 77, 218, "Input",ExpressionUUID->"ce17cbda-db79-4215-a0aa-6a41e39920bc"],
Cell[31566, 869, 30102, 593, 366, "Output",ExpressionUUID->"8bf31144-d2ff-44d6-b5d0-ddfa8a86dde2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[61717, 1468, 766, 16, 127, "Subtitle",ExpressionUUID->"534433d2-288a-4802-92f3-7e0c765c7132"],
Cell[CellGroupData[{
Cell[62508, 1488, 2373, 57, 160, "Input",ExpressionUUID->"95ad98cb-875e-492e-bf8a-d8f1d75a5c48"],
Cell[64884, 1547, 171415, 2998, 386, "Output",ExpressionUUID->"53be1572-9438-44ee-a70b-8e7e5c106beb"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[236348, 4551, 753, 16, 127, "Subtitle",ExpressionUUID->"31a7a26d-e133-4d55-a3a9-0992e8e9b45c"],
Cell[CellGroupData[{
Cell[237126, 4571, 2012, 54, 160, "Input",ExpressionUUID->"ec9bfb99-6e97-4785-b0fe-a1c8dc4f2e0d"],
Cell[239141, 4627, 241767, 4180, 521, "Output",ExpressionUUID->"8a5dadbb-0903-450b-8242-3582b4e76f1c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[480957, 8813, 675, 13, 126, "Subtitle",ExpressionUUID->"ca6002ec-bde4-4977-a1ad-d9c5d0d5bddc"],
Cell[CellGroupData[{
Cell[481657, 8830, 1792, 49, 157, "Input",ExpressionUUID->"0bb37568-865d-4993-b0f4-e93212f350ad"],
Cell[483452, 8881, 86374, 1615, 405, "Output",ExpressionUUID->"aa6496e6-6a2d-4901-b2d9-5fbb7142deb5"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[569875, 10502, 451, 12, 126, "Subtitle",ExpressionUUID->"af091af5-f4ca-4fd9-9c98-a4b803e4983f"],
Cell[CellGroupData[{
Cell[570351, 10518, 2246, 65, 157, "Input",ExpressionUUID->"db7d5355-db36-40b3-a539-a065fe343477"],
Cell[572600, 10585, 123493, 2260, 694, "Output",ExpressionUUID->"cf1ef995-d96c-43c4-83d0-273195083743"]
}, Open  ]],
Cell[CellGroupData[{
Cell[696130, 12850, 235, 5, 42, "Input",ExpressionUUID->"09b9a194-1463-4706-82bc-29c0071437ec"],
Cell[696368, 12857, 184, 3, 48, "Output",ExpressionUUID->"e369cdd2-f255-4a39-9067-caf96aaf363d"]
}, Open  ]]
}, Open  ]]
}
]
*)

