(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    104422,       2106]
NotebookOptionsPosition[    102736,       2047]
NotebookOutlinePosition[    103382,       2072]
CellTagsIndexPosition[    103339,       2069]
WindowTitle->Global Minimum of a Surface - Source
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Global Minimum of a Surface", "Section",
 CellFrame->{{0, 0}, {0, 0}},
 ShowCellBracket->False,
 FontColor->RGBColor[0.597406, 0, 0.0527047]],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1: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
AAAAAAAAgI3xP5e3Sto=
   "], {{0, 0}, {1800, 25}}, {0, 255},
   ColorFunction->RGBColor],
  ImageSize->{1800, 25},
  PlotRange->{{0, 1800}, {0, 25}}]], "Section",
 CellFrame->{{0, 0}, {0, 0}},
 ShowCellBracket->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"To", " ", "avoid", " ", "going", " ", "bananas"}], ",", " ", 
    RowBox[{"fixed", " ", "seed"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"RandomSeed", "[", "314159", "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Rastrigin", " ", "function"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Rastrigin", "[", 
      RowBox[{"x_", ",", " ", "y_"}], "]"}], " ", ":=", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"20", " ", "+", " ", 
        RowBox[{"x", "^", "2"}], " ", "+", " ", 
        RowBox[{"y", "^", "2"}]}], ")"}], " ", "-", " ", 
      RowBox[{"30", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"Pi", "*", "x"}], "]"}], " ", "+", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"Pi", "*", "y"}], "]"}]}], ")"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "surface", " ", "is", " ", "a", " ", "static", " ", "global", " ", 
     "var"}], " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"surfaceIndex", " ", "=", " ", "1"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"surface", "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Rastrigin", "[", 
          RowBox[{"x", ",", " ", "y"}], "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"x", ",", " ", 
           RowBox[{"-", "20"}], ",", " ", "20", ",", " ", ".5"}], "}"}], ",", 
         " ", 
         RowBox[{"{", 
          RowBox[{"y", ",", " ", 
           RowBox[{"-", "20"}], ",", " ", "20", ",", " ", ".5"}], "}"}]}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"100", "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Sinc", "[", "x", " ", "]"}], "*", 
              RowBox[{"Sinc", "[", " ", "y", "]"}]}], ")"}]}], ")"}]}], ",", 
         " ", 
         RowBox[{"{", 
          RowBox[{"x", ",", " ", 
           RowBox[{"-", "8"}], ",", " ", "8", ",", " ", ".2"}], "}"}], ",", 
         " ", 
         RowBox[{"{", 
          RowBox[{"y", ",", " ", 
           RowBox[{"-", "8"}], ",", " ", "8", ",", " ", ".2"}], "}"}]}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"100", "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", "y", ")"}], "^", "2"}], ")"}]}], "/", "2"}], 
             "]"}], "*", 
            RowBox[{"-", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", "x", ")"}], "^", "2"}], ")"}]}], "/", "2"}], 
              "]"}]}]}], ")"}]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"x", ",", " ", 
           RowBox[{"-", "5"}], ",", " ", "5", ",", " ", ".2"}], "}"}], ",", 
         " ", 
         RowBox[{"{", 
          RowBox[{"y", ",", " ", 
           RowBox[{"-", "5"}], ",", " ", "5", ",", " ", ".2"}], "}"}]}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "x"}], ")"}], "^", "2"}], "+", " ", 
          RowBox[{"100", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"y", "-", 
              RowBox[{"x", "^", "2"}]}], ")"}], "^", "2"}]}]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"x", ",", " ", 
           RowBox[{"-", "2"}], ",", " ", "2", ",", " ", ".1"}], "}"}], ",", 
         " ", 
         RowBox[{"{", 
          RowBox[{"y", ",", " ", 
           RowBox[{"-", "2"}], ",", " ", "2", ",", " ", ".1"}], "}"}]}], 
        "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"check", " ", "surface", " ", "data", " ", "boundaries"}], " ", 
     "-", " ", 
     RowBox[{"it", " ", "is", " ", "a", " ", "squared", " ", "list"}]}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"VerifyLimits", "[", "value_", "]"}], ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"maxSize", "=", " ", 
         RowBox[{"Length", "[", 
          RowBox[{
          "surface", "\[LeftDoubleBracket]", "surfaceIndex", 
           "\[RightDoubleBracket]"}], "]"}]}], "}"}], ",", " ", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{"value", "\[LessEqual]", " ", "0"}], ",", "1", ",", 
         RowBox[{"value", " ", ">", " ", "maxSize"}], ",", " ", "maxSize", 
         ",", "True", ",", "value"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Return", " ", "the", " ", "Y", " ", "axis", " ", "value", " ", "of", " ",
      "the", " ", "surface", " ", "data", " ", 
     RowBox[{"(", 
      RowBox[{"its", " ", "higth"}], ")"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"GetY", "[", 
      RowBox[{"{", 
       RowBox[{"x_", ",", "z_"}], "}"}], "]"}], ":=", " ", 
     RowBox[{
      RowBox[{
      "surface", "\[LeftDoubleBracket]", "surfaceIndex", 
       "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", 
      RowBox[{
       RowBox[{"VerifyLimits", "[", "x", "]"}], ",", 
       RowBox[{"VerifyLimits", "[", "z", "]"}]}], "\[RightDoubleBracket]"}]}],
     " ", ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"test", " ", "-", " ", 
     RowBox[{"delete", " ", "me"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"GetY2", "[", 
      RowBox[{"{", 
       RowBox[{"x_", ",", "z_"}], "}"}], "]"}], ":=", " ", 
     RowBox[{
      RowBox[{
      "surface", "\[LeftDoubleBracket]", "surfaceIndex", 
       "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", 
      RowBox[{"x", ",", "z"}], "\[RightDoubleBracket]"}]}], " ", ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"GetPop3D", "[", "pop2D_", "]"}], ":=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
         ",", 
         RowBox[{"#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
         ",", 
         RowBox[{"GetY", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
            
            RowBox[{
            "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
           "}"}], "]"}]}], "}"}], "&"}], "/@", " ", "pop2D"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"GetBall", "[", 
      RowBox[{"x_", ",", " ", "y_", ",", " ", "z_"}], "]"}], ":=", " ", 
     RowBox[{"Sphere", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "y", ",", " ", "z"}], "}"}], ",", "1"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"FirstPopulation", "[", "maxPopulation_", "]"}], ":=", " ", 
     RowBox[{"Partition", "[", 
      RowBox[{
       RowBox[{"RandomInteger", "[", 
        RowBox[{
         RowBox[{"Length", "[", 
          RowBox[{
          "surface", "\[LeftDoubleBracket]", "surfaceIndex", 
           "\[RightDoubleBracket]"}], "]"}], ",", 
         RowBox[{"maxPopulation", "*", "2"}]}], "]"}], ",", "2"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"2", "D", " ", "Midpoint"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Reproduction", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x1_", ",", " ", "z1_"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"x2_", ",", " ", "z2_"}], "}"}]}], "}"}], "]"}], " ", ":=", 
     " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"1", "/", "2"}], " ", 
         RowBox[{"(", 
          RowBox[{"x1", "+", "x2"}], ")"}]}], "]"}], ",", 
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"1", "/", "2"}], " ", 
         RowBox[{"(", 
          RowBox[{"z1", "+", "z2"}], ")"}]}], "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Fitness", " ", "look", " ", "for", " ", "the", " ", "lowest", " ", 
     "couple"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"GetBestFitness", "[", "twoCouples_", "]"}], ":=", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"GetY", "[", 
         RowBox[{
         "twoCouples", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
          "]"}], "<", "\[IndentingNewLine]", 
        RowBox[{"GetY", "[", 
         RowBox[{
         "twoCouples", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
          "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
       "twoCouples", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
       "twoCouples", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}],
       "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"GetNextGen", "[", "lastPop_", "]"}], ":=", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"GetBestFitness", "[", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Reproduction", "[", 
           RowBox[{"RandomChoice", "[", 
            RowBox[{"lastPop", ",", "2"}], "]"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Reproduction", "[", 
           RowBox[{"RandomChoice", "[", 
            RowBox[{"lastPop", ",", "2"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"Length", "[", "lastPop", "]"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Create", " ", "a", " ", "list", " ", "of", " ", "populations", " ", 
     "for", " ", "10", " ", "generation"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Evolution", "[", "populationSize_", "]"}], ":=", " ", 
     RowBox[{"NestList", "[", 
      RowBox[{"GetNextGen", ",", 
       RowBox[{"FirstPopulation", "[", "populationSize", "]"}], ",", "19"}], 
      "]"}]}], ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.650595164047262*^9, 3.650595166181016*^9}, {
   3.65059521561032*^9, 3.650595238046445*^9}, 3.650595336011731*^9, {
   3.6505968260633965`*^9, 3.650596889034774*^9}, {3.6505969554095926`*^9, 
   3.650596960926524*^9}, {3.6505981666505156`*^9, 3.6505982201245384`*^9}, {
   3.6505988178988733`*^9, 3.6505989265433865`*^9}, {3.6505989698948107`*^9, 
   3.6505989715198565`*^9}, {3.6505990499987907`*^9, 3.650599094574669*^9}, {
   3.650599373166696*^9, 3.650599402570258*^9}, {3.6505994335994935`*^9, 
   3.650599433708906*^9}, {3.6505995992858458`*^9, 3.650599599395219*^9}, {
   3.6506015450842505`*^9, 3.65060154545924*^9}, {3.6506024012733555`*^9, 
   3.650602457421116*^9}, {3.650602508550081*^9, 3.650602529204382*^9}, {
   3.650602963435562*^9, 3.6506030589843163`*^9}, {3.650603109813588*^9, 
   3.650603115098425*^9}, {3.650603200787104*^9, 3.650603206193609*^9}, {
   3.650604205186844*^9, 3.6506042082963853`*^9}, {3.650604255643546*^9, 
   3.650604298858529*^9}, 3.650604345452747*^9, {3.65060444277827*^9, 
   3.650604541127186*^9}, {3.6506046724011555`*^9, 3.650604676682646*^9}, {
   3.650604762644374*^9, 3.6506048415474987`*^9}, {3.6506048756798077`*^9, 
   3.6506048834063993`*^9}, {3.6506049527744665`*^9, 3.650604968882041*^9}, 
   3.650605070969942*^9, {3.6506051092223644`*^9, 3.6506051235860553`*^9}, {
   3.6506051619228106`*^9, 3.650605175456348*^9}, {3.650605221379304*^9, 
   3.6506052346302595`*^9}, {3.6506053151153355`*^9, 
   3.6506053500833964`*^9}, {3.6506055019085693`*^9, 
   3.6506055296685715`*^9}, {3.6506055775988965`*^9, 
   3.6506055904418287`*^9}, {3.650605752457997*^9, 3.6506057528117685`*^9}, {
   3.6506058057776456`*^9, 3.6506058262121763`*^9}, {3.6506059003654394`*^9, 
   3.6506059016467524`*^9}, 3.6506068263628087`*^9, {3.6506070036788716`*^9, 
   3.6506070123668017`*^9}, 3.6506071126196423`*^9, {3.6506071744133615`*^9, 
   3.650607218468855*^9}, {3.650635470577147*^9, 3.650635476577264*^9}, {
   3.6506409810488806`*^9, 3.6506410880040627`*^9}, {3.650641286151202*^9, 
   3.650641292667135*^9}, {3.650641840279978*^9, 3.650641864015527*^9}, {
   3.650641904095654*^9, 3.650641929721921*^9}, {3.65064199192715*^9, 
   3.650641998052043*^9}, {3.6506421249163*^9, 3.650642153980223*^9}, {
   3.650642253577297*^9, 3.650642255546139*^9}, 3.650643079657335*^9, {
   3.650643359812132*^9, 3.6506433598746233`*^9}, {3.650644296565564*^9, 
   3.6506443023939915`*^9}, {3.6506444959809732`*^9, 3.65064449610598*^9}, {
   3.6506458616278315`*^9, 3.6506458761280355`*^9}, {3.650646273372017*^9, 
   3.6506462916698055`*^9}, {3.6506464593805876`*^9, 
   3.6506464634745455`*^9}, {3.650646919479738*^9, 3.650647173522693*^9}, {
   3.6506474110738087`*^9, 3.65064743927829*^9}, {3.650647612554387*^9, 
   3.6506476152107677`*^9}, {3.650647652243881*^9, 3.6506477471079216`*^9}, {
   3.650647845995658*^9, 3.650647870354729*^9}, {3.650648815116426*^9, 
   3.6506488181344333`*^9}, {3.6506489121587415`*^9, 3.650648915894224*^9}, {
   3.650649068281377*^9, 3.6506490689087925`*^9}, {3.6506492013333187`*^9, 
   3.6506492247829094`*^9}, {3.6506492675328455`*^9, 
   3.6506493427018385`*^9}, {3.650649691794257*^9, 3.650649706838258*^9}, {
   3.6506499547586594`*^9, 3.6506500161110053`*^9}, {3.650650446303754*^9, 
   3.6506504478728004`*^9}, {3.6510076869453526`*^9, 
   3.6510077475094957`*^9}, {3.6510079537903595`*^9, 3.651007960254704*^9}, 
   3.6510083551494904`*^9, {3.651008598454198*^9, 3.6510086111867557`*^9}, {
   3.65100877277542*^9, 3.6510087772764435`*^9}, 3.651009039141389*^9, 
   3.6510091074306064`*^9, {3.6510095216347027`*^9, 3.6510095347300205`*^9}, {
   3.6510096937674217`*^9, 3.651009751101454*^9}, {3.6510108850331573`*^9, 
   3.6510109096667137`*^9}, {3.6510109609842463`*^9, 3.6510110264042983`*^9}, 
   3.651011987176365*^9, {3.651060718469116*^9, 3.65106075268635*^9}, 
   3.651060816457861*^9, {3.651061284028863*^9, 3.651061284209484*^9}, {
   3.6510614434516497`*^9, 3.6510614483743615`*^9}, {3.65106148774921*^9, 
   3.651061492737156*^9}, {3.651061532602393*^9, 3.651061539508989*^9}, {
   3.651061636444275*^9, 3.6510616417569857`*^9}},
 CellID->348205836],

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "surfaceIndex", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"surfaceIndex", "=", "sIndex"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"view", "==", "\"\<2D\>\""}], ",", "\[IndentingNewLine]", 
        RowBox[{"Show", "[", 
         RowBox[{
          RowBox[{"ArrayPlot", "[", 
           RowBox[{
            RowBox[{
            "surface", "\[LeftDoubleBracket]", "sIndex", 
             "\[RightDoubleBracket]"}], ",", " ", 
            RowBox[{"Frame", "\[Rule]", " ", "None"}], ",", 
            RowBox[{"ColorFunction", "\[Rule]", "color"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", " ", "400"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Graphics", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"PointSize", "[", "Large", "]"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"color", "===", " ", "Hue"}], ",", "Gray", ",", 
               "Red"}], "]"}], ",", 
             RowBox[{"Point", "[", 
              RowBox[{
               RowBox[{"Evolution", "[", "population", "]"}], 
               "\[LeftDoubleBracket]", "generation", 
               "\[RightDoubleBracket]"}], "]"}]}], "}"}], "]"}]}], "]"}], ",",
         "\[IndentingNewLine]", 
        RowBox[{"Show", "[", 
         RowBox[{
          RowBox[{"ListPlot3D", "[", 
           RowBox[{
            RowBox[{
            "surface", "\[LeftDoubleBracket]", "sIndex", 
             "\[RightDoubleBracket]"}], ",", 
            RowBox[{"ColorFunction", "\[Rule]", "color"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", " ", "400"}], ",", 
            RowBox[{"Mesh", "\[Rule]", "None"}], ",", 
            RowBox[{"PlotRange", "\[Rule]", " ", "All"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Graphics3D", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"PointSize", "[", "Large", "]"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"color", "===", "Hue"}], ",", "Gray", ",", "Red"}], 
              "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"GetBall", "@@@", 
              RowBox[{"(", 
               RowBox[{"GetPop3D", "[", 
                RowBox[{
                 RowBox[{"Evolution", "[", "population", "]"}], 
                 "\[LeftDoubleBracket]", "generation", 
                 "\[RightDoubleBracket]"}], "]"}], ")"}]}]}], 
            "\[IndentingNewLine]", "}"}], "]"}]}], "]"}]}], "]"}]}]}], " ", 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"generation", ",", "1", ",", "20", ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", " ", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"population", ",", "10", ",", "100", ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", " ", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sIndex", ",", "1", ",", "\"\<surface\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "\[Rule]", " ", "\"\<Rastrigin\>\""}], ",", 
       RowBox[{"2", "\[Rule]", " ", "\"\<sinc\>\""}], ",", 
       RowBox[{"3", "\[Rule]", " ", "\"\<exp\>\""}], ",", 
       RowBox[{"4", "\[Rule]", " ", "\"\<Rosenbrock\>\""}]}], "}"}]}], "}"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"view", ",", "\"\<2D\>\""}], "}"}], ",", 
     RowBox[{"{", " ", 
      RowBox[{"\"\<2D\>\"", ",", "\"\<3D\>\""}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"color", ",", "GrayLevel"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"GrayLevel", " ", "\[Rule]", " ", "\"\<gray\>\""}], ",", 
       RowBox[{"Hue", "\[Rule]", " ", "\"\<hue\>\""}]}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"SaveDefinitions", "\[Rule]", " ", "True"}]}], "]"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQvcVAYf0+49eOG602bwDRuZ1LtoBoxrVnwHTUpZNv
QfS/OR7vQHSI5rIvINqNZSOY3hGRLbofSGsd0hEH0UV3JYNA9C99RzD9wWJd
J4huqlLrAdFyzIITQLTftIZJIHpJjazuAZB8tZg+iP4m+80dRHNMTfIB0Qwb
dsaBaB2ZuYkgmudMTR2I9lJgaADRb8WfrQbRH6d/BtNM6yV2guhThjfANFMP
7yEQncGjBaZD5IvybgDpI1VzwXTQQ6/FIFqF6ySYztmd9RdEiz18CKalfkzt
0zF57fjCauIEEB20tvrrLiCdmGf7DURPyHl/ZQ+QviMQcg1EAwDpjaxX
  "],
 CellID->318102084]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`color$$ = 
    GrayLevel, $CellContext`generation$$ = 1, $CellContext`population$$ = 
    10, $CellContext`sIndex$$ = 1, $CellContext`view$$ = "2D", 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`generation$$], 1, 20, 1}, {
      Hold[$CellContext`population$$], 10, 100, 1}, {{
       Hold[$CellContext`sIndex$$], 1, "surface"}, {
      1 -> "Rastrigin", 2 -> "sinc", 3 -> "exp", 4 -> "Rosenbrock"}}, {{
       Hold[$CellContext`view$$], "2D"}, {"2D", "3D"}}, {{
       Hold[$CellContext`color$$], GrayLevel}, {
      GrayLevel -> "gray", Hue -> "hue"}}}, Typeset`size$$ = {
    500., {246., 253.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False, $CellContext`generation$3009$$ = 
    0, $CellContext`population$3010$$ = 0, $CellContext`sIndex$3011$$ = 
    False, $CellContext`view$3012$$ = False, $CellContext`color$3013$$ = 
    False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`color$$ = 
        GrayLevel, $CellContext`generation$$ = 1, $CellContext`population$$ = 
        10, $CellContext`sIndex$$ = 1, $CellContext`view$$ = "2D"}, 
      "ControllerVariables" :> {
        Hold[$CellContext`generation$$, $CellContext`generation$3009$$, 0], 
        Hold[$CellContext`population$$, $CellContext`population$3010$$, 0], 
        Hold[$CellContext`sIndex$$, $CellContext`sIndex$3011$$, False], 
        Hold[$CellContext`view$$, $CellContext`view$3012$$, False], 
        Hold[$CellContext`color$$, $CellContext`color$3013$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`surfaceIndex$}, $CellContext`surfaceIndex$ = \
$CellContext`sIndex$$; If[$CellContext`view$$ == "2D", 
          Show[
           ArrayPlot[
            Part[$CellContext`surface, $CellContext`sIndex$$], Frame -> None, 
            ColorFunction -> $CellContext`color$$, ImageSize -> 400], 
           Graphics[{
             PointSize[Large], 
             If[$CellContext`color$$ === Hue, Gray, Red], 
             Point[
              Part[
               $CellContext`Evolution[$CellContext`population$$], \
$CellContext`generation$$]]}]], 
          Show[
           ListPlot3D[
            Part[$CellContext`surface, $CellContext`sIndex$$], 
            ColorFunction -> $CellContext`color$$, ImageSize -> 400, Mesh -> 
            None, PlotRange -> All], 
           Graphics3D[{
             PointSize[Large], 
             If[$CellContext`color$$ === Hue, Gray, Red], 
             Apply[$CellContext`GetBall, 
              $CellContext`GetPop3D[
               Part[
                $CellContext`Evolution[$CellContext`population$$], \
$CellContext`generation$$]], {1}]}]]]], 
      "Specifications" :> {{$CellContext`generation$$, 1, 20, 1, Appearance -> 
         "Labeled"}, {$CellContext`population$$, 10, 100, 1, Appearance -> 
         "Labeled"}, {{$CellContext`sIndex$$, 1, "surface"}, {
         1 -> "Rastrigin", 2 -> "sinc", 3 -> "exp", 4 -> 
          "Rosenbrock"}}, {{$CellContext`view$$, "2D"}, {
         "2D", "3D"}}, {{$CellContext`color$$, GrayLevel}, {
         GrayLevel -> "gray", Hue -> "hue"}}}, "Options" :> {}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{547., {342., 349.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>(({$CellContext`surfaceIndex = 
        4, $CellContext`surface = {CompressedData["
1:eJztnc9vm0ea57k92l1O7w8QhhaD8WGbi9WBMPbU0CwyQRr9jkebZnsyCeMw
iaOke2SZjmnZsS1ZtmTJiimZTrNzWSLQfXngQWdDJ5+EQAfemgf9AY1AQOs4
Bx8Wuzsz+/p9vp8qPtXXGftCA0bhqeetqucXq5566qnSf1m+e/n6j0ql0of6
X/w7+k32r16V53pZAbdV/vCNlUvPDP/9M4Nrqn/etTJ7avjnT4VX/fd7ar9r
+B921b/qzwnuPDH85Y7BZyoXnlh59Dh7RXNp5muDG6o/faz2W9b+dFv4HStn
BB9tGn5hy+Cx6oeP1H7DyjnBY313vKn2D63sCm4I3xLceehh8N2kPf3R/1wy
PvTk9Dl6jzY9Pzl/jt/OlpdHLh8nryPVI89cvk7eHdWfi/px+lpSiT5z/Tp9
Zyqxh9w+nL0sqcSecvty9jZhfwXdLeFfqJwX/vkzw8+q/y2VM7LP756Kb9G3
pXIW+9w1/Lz4e6GyJfs81zH8UPJ5W9+fSZ6tnWzmVXnwtcEvn2R/8qrs7Rg8
t234nuz15Y7hD7bV/pHBZ1sGr+u7uuC5TStHj4RXu7bg1oaVNcEv1a4seG7D
w+BrSft20j/jMX490ufohX74ebnj+c35d/LI5ePk1doJ8nTyRd7nOl4fuX6c
vp7ven3m+nX6/u6pt4fcPpy9PH/m7elFYm8T8x/4Aq781spvf2NlWf2tyJ7H
Khdl52eiY1G/h7HKFf1OyuLn2z31r/oX/P4kh/+j32df9ZcEVyTPpn63DdXP
6/fO/DGveXCg+qbmgYrmy33NH1V995L5UfPNuuCq2s0Krgh/ovlqoH4Omb82
PAye72k/m/S/nowPPdUdT29ly/OT8+f4ZX5HHo2Ol1dF9ZeifJ282yrRR+Wp
11dZJfocd72+z1SPPYwTeymrxJ5y+3L2NrH+Yq/u+xm139O4pxr3ksY70fjL
srMT0XtJ9afia092NiP4W5Xz4v9Ycj+TvH6s+l5cXwt8XXrYV31N8j/WuluT
vtBfXXYws2H4XrSHf3r17w+yn+MHkofgWbUrC54RfqT1dV/9HLDernsYPN/T
vpz0347jO3pmtzy9Mxuen/1tzy/rPfLY3/HyYj1Hnj/ueHkfqx59fLvr9bWn
evR56anX97JK7OHSM28veypnoj06e0v9v+eyr/I3vn1J4y5rnJHKyxr/9/gb
onOkcln0lzSfzej3WVZ9S/wfaf3B36movis5l7RuLUgPffwr/K8HNv6c9NVX
/YLsoLRu+K7soaLvTmU/R2uiR3AF+xFcEv74vvpXP0PBR6seBs/3tJ9J+m8l
40NPZcPTW1r3/PQ3Pb9H+g559Le8vEqqR56VHS/vI/xdyb3c8foqyV7R52jX
6/v3qsceRom9lFRiT+VvvL1N7D/cer7yTbBn+ivwx+r/guoPNQ9elL9xKPou
qP5Y/Bx/bf7KSP7Jiuprss+u/LsD+TsnklNd/lD+ey/wZcm3qfoz2Wf3ofwp
+WFN+VNlwfl8VcD1h+pf9QcP1P6+6BF8ou9G62q/ZmVPcFP4tuDumofB95L2
9Ef/tWR86Mnpc/RCfznhD367D708mtteXsf4n9tBvk7e3e2gD/SDvtAf+kS/
Tt8Xd709XOh6e1l+6u1pJfEfJ/a/+JcFjP/H+juK9lfAfZXnZecHouP8nvAq
L+j30pf94Z+MVb7En5E81hP/blbrSl/+/EniX+GPNTR/HOp3X9V3J8yPmi9n
BQ/wBzW/NDTfvNS8MtB3+4L7mteagqvCzwtu3Pcw+GbSfj/pn/EYH3oGm55e
5lf4qW55fhuJf1p97OXVV/1s9C+dvBuqRx/jjtdXX/Ni0Oee1/eB6rGHftfb
C+vnpcR/xN4m4i/sdwp4MfH/Lu8Fe3fjDTX+T0X3UHSfZ/8h+oeSy4H4PhS/
ZfHfkp31JLdDrRc1yW/4UP4M+lf9KK5vBX4kfc3ruzPpd7gmf0rwob7ryT5a
WlfLgg/x97ReDu+JH8HzwtdZz+95GHw7aU9/9F9Oxoeewwee3uGa52d+w/PL
+o48cvk4eQ1VjzwPt728W/jD/L6/9voaqh59nt/1+v6pymG0R2cvrNfY0+Iz
b29p/O87fcf+B/8T/++ixjmI9leUHa2jrSS+1xX9R7Kz4yR+F+JnWleGkts4
8e+OtG7h7zdUfyq9dVY170tfzC8zgjt3Db8gfY8T+yh9JXoEj7GLu2p/y8qy
4Ibwoztqf8vD4MtJe/qj/7lkfOgZr3l6O3c9P411z29H3yGPxkMvryPVI8/x
ppc38c+5GL90+jpSfTeJT6LvjuwVezjY9faC/4g9nSX2NhF/dvGgxW7YD+GP
On/g/F74PUBP4U/Utf6eV31b9jnckj8i/g41P+K/tDYUD5N8DmW3Nfk/Q/lH
Z/Kf5je8v9VaM/xI9jqv787kl+X6LfA1wYf6rrcqP+iO6FkVXt8d3BNfX4mf
e+pf+Lrwo9sBdvh20v7gnu+/nIzfWw30OXqH9zw/OX+O31bif85veHkN1708
c/k6eRPfRB+5fpy+hltBn+gXfaN/7AH7cPZyedfb02ISf5w4/7D1Oon/EX8Z
xf1HAeP/sf42ov0ZXmVTv5e++NnHP0nidw3JY534m+pn2f/F/UMBV1V/GP0z
Wwc0D1b13Qn7V82Xs4IH+GPML5qHXmpeGeDPCa5qPmoC4w/y/R0Pg28m7feT
/hmP8aFnsO7p7a96fqoPPb+NuJ4bftPLC/8SeQ62vLwbSfxysOP11df6FfTZ
8fpuxPXa8HveXkYx3lOU48TeJs7fjG99R7zyNMZf2C8V8IXE/+s+Dr8XR28v
xvfs9yq+8Z9rxBNkZ8Tf8MfrxD+YPyR3/P8z6a17T/6Q9NWUXZZZX79SPE36
Plm1eN0Hso+y1s2G7OlE3/W1XvZuWlkR3GT9vK32Nz0MvpK0pz/6Z7x8fEfP
yaqnF/rLCX/w273n5dF84OV1rPp63O84eRMfQh8nW15fxCd70R6dvruJ/3hh
19sL8R7saeWpt7f0/Pe5viN+TvyS+N8xv4e4/yhK/L8h+7Nof9Yef0X2xflC
C/9FdoZ/U1F9V/IraV3CX+qrHv8q978sziG99mWXPdlFqa24h+ytqu9Gso/O
dcFt4bEvwaWWlb0bwqufuuDONQ+D53val5P+GS+MfzPQ5+jN6Xf89O95fvE/
kUd/zcurpHrkWXng5R3ip8RXN72+Ssn5eH/b6xv/EXvoP/H2QvwReyrveXub
yD8wvyKevxFPN3qe+PjfpU7YT+HPOn9i/3H4PcGPxbPE36zq28TH5A+dyY+Z
Jf7G/mRVcpd894n3yb/K5wvzp2Sv+fr3rwt53NG4K9m/KeQrP21WehzfUvsb
Vo5XrKzJDiqCy19a2b8p/FdWNgT3rnsYPN/n7V1/tTt+vHx86IE+6IV++IE/
+IV/5IF8nLxmVr08Zx96eR/f9/qYfeT1NbPh9bmf+I/HW8EesA8Xf5x5EuwJ
+3L2NpH/UsAv9gzm/Jfzt3InxDcLmPjfYTzfxb8tYPy/k3g+C38FTHxvnf2x
5PEyib/tc74geTYT/24ef0r74eCvsT5pHsjnH9Ob1r2q1uU/aJ0caB4603xT
VbsasOatA807mfppCx7c8DB4vqd9Lemf8fLxHT3V1YTeZL0frCX83k3kse7l
VVE98qxueHmP8ZdjfNLpqxLXa+t/x+ub+MdhEn/EXjg/w544v8beJvKvivqW
vuO8m/NG8jVqGudlEv+bexT2W4ZP/L/Wg/B7c/yOxP8c+0/JbV31ZzE+wn7T
+pf/VJH86yuab6THM9llg3iK5qNxYm992Ue9Zd/3ZU9nK1aOv1T7ZSsbgs/w
FwXXlz0MvpG0p7+8fzdeveXpObvt6c3pd/zk/Dl+6yteHi9XvbyIJyHP9XUv
7znZ6Sjao9NXK/EfQ75Rkr9WjvFwZy+t5Pz6RWJvaf7fOX1H/sVxcv7bJf8t
xp+t/cOw/zd83H9Y+7Uw/xfwONpfUZbuhviE4dlf4P/clL/E/HFHcVzpqXRd
cQzpdSC9lKX3zlXlRUnfzF91+XWlXwteFl7+Wu+q8J9bWRY8UD+jJeEXPQy+
nLSnP/pnvDD+tUCfozen3/EzWPH85vw7eQzueHl1VI88x6te3iXZL/oYr3t9
4T+iz8am13fIv2T//djbC+fX2FO74+1tIv/U6Ir5V7Yfk12fJue/65ofe7LP
YRL/W38U9mP4w84fefkg/B6Rh8lV8nkZ429Wf8v8pYbmxXX5RRXNG/n+wPwp
6SefT8xf0/5kdM3wY82LZ7Lrvuy3flX+XEt4/LVr2b8t6v9O/V0THn8P/K8D
DJ7vaU9/9O/Gq1/19OT0OXpz+h0/OX+O3/qNIA/kg7yQH/JEvk7exCfRx8sH
Xl+n970+15P443DD28N6cn59uh3sCfty9jaR/1zAbxP/UUn+FfkZJ8n5L+dv
4xh/Nnxyvsv+bJb4n+pZf8fR/gyv+hC/k/0F/0jrclu/74Hsqq3ff6Z1+UDr
a1X6rGleyG7LH2P+1Dx0pvkmU7ua4OqylQeaxzL10xY8uOph8HxP+1rSP+Pl
4zt6stue3uqXnp/sruc359/LY9XLi/hAkOe6l/c4rteG3/D6qiTn28QfQ/4l
8VzZA+fX2Esl5psVJfmP2NtE/n3R7kzxGM63ezH/yn4vGofzcs4rF8gfIX9O
dNVj/IX9mskj8f96d8Lv1fD4f8TXtO/syz+qaV1usN5oXmlIj7UV668vOyhr
vqlonavpu/GyxvmVlWPZU03tKloPK4vy57Tu1tRPY0n4zwIMnu9pT3/0z3iM
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
m5w/Y28T7+8W9W3yx1Qf3v/TfMh5Iu8F8V5LT3Gbg5g/WJTc1y0rj7iCfYkv
7mv0tA8ey08hX5R8vcqVkK9ieM2TgyvhvIzzCtP3YojXGT4L+1XDN4O/xnrJ
fIW9mL+XZRZw+d3Pi+LJO+av/a/3DP/kbc13//EIGDzf057+6J/xGN/5jzl9
jt6fZJ6fDxY9vz95P8gD+Th5sT6H/Mcvvby5r4A+are9vrjvij73k/svvJeC
Pewn58+8t1eO+xVnbxPvP1s8J7lfzPsoJe6XEB+K+5Oi5Py4zn0z0cX98ZLy
FLhfwf017g+VPg/584YnP1XrTKkR8qcKkPhgOJ99J5yfGZ748EXhSyXiJ0Zv
PewfDDt/xPpp+Gh/hs+O/r6A/8ORwX+pdn8m+OKRh/8y899nR66/vH83Xj6+
oyenz9Gb/3P85Pw5fnP+nTyIL4bz6YaXZ3XZy5v7M+ij2vb6Cve3yV+86/XN
+XOIH9/39hLef0zuR2NvE++P23rOewtJPg33W3vJewq8Z1XWfEh+L+9phPcM
OA8mXx5/N8aruc9heK275D9XPg35fIbX+cBA61H1vXCea/1+lrnzj+ydEM8z
/EdhP8t+An+O9ZT5DHsq8J23hJcf1/nvZs//9J+PgMHzPe3pj/4Zj/GhB/qg
F/rhB/7gF/6RB/Jx8qp86uXJeQvyJr6NPsjvRF/sV8J7Fkk+N+9JYQ+8J4G9
HCf5OCePvL1NvH9v533cT+V92+R9mWZyv4T31Rqii/uz4X0X/EPxVRMfnB+H
+BX3k7i/Qb4c8ULyUzlfVb7NWPuW7OOQX2Cw7LRBfJD4MfG7xRBfMfhi2F8Y
/ElYXws4n9+wL8OrnwHz0V94OMe77/P2rr/OJ8l4FxN6FhN63/P8ZEsJvx8n
8mgl8vp1Is+bXt7cLwzx27teX9V43mfwfa9v3jfDHrjfgr1w/oY9Dba9vU38
/QXb//A+nkrePxly35/zbPXLe3/cL+Y9Fu53894L98m4P8F9c+77jrQPqej3
yXk99z36n4R8Z8PrHLUqvVT/JuS72LhXwnlvAWdvh/MOw18O8b4CztdH9rsm
p78N/p/h/yzMd4b/pebLeYM7//XIwTnefZ+3d/3l/bvx8vEdPTl9jt6cfsfP
+IrnN+ffyaO95OXFfQXk2b7u5c19V/TRvuX1RX4Y+pxf9fomfhPef3zg7YX3
mg+S/ETsbeLvf1g8h/cVeD+c+wcal/sy5Bfy/mRJdI/i/eKi5D5ER/cee+TH
xHiNtV8M9y8Nz/0h7m+8H/LvCzD7LCP/1PBvhfwrw5MXgJ4rR5y/GT3vhviz
2h9Vi/JHgn8W9h8GXzxi/TVY819ufwYvHHn4LzL//cUj39/PQryH8R09OX2O
3px+x0/On+M359/JI/vMy6v0vpfn4KqXN/evw/3tG15fvN+DPgd3vL55/7GV
5CdiL7wfjj2NN7y9Tfz9mel8WJrOh296Ppz6h1P/sIDfsH843S9P98uT+nhT
++Vp/HAaP3z1703HD6fnKdPzlEl9vKnzlOn5cjY9Xy69+fPlab5NNs23mdDH
m8q3meYfHk3zD0tvPv9wmo89zceWPtDPG8nHnt5PCeuhwdP7KV5f//L3Uwr6
p/f1pvf1JvXxpu7rTe8vh/2A4af3l1/3/WXDT99zcPvr6XsOQV/oD32iX6fv
f673HKbv24R4iMHT922cvl7D+zYF/dP3vqbvfUkfTj+v+72v6fuHGfFgw0/f
P3T6eg3vHxbl9D3YzJ3PTN+D9fp6Xe/BTt/HtnL6Prbg1/8+dgFP/17A9O8F
SB/ox+nrdf29gOnfT8nIBzC82k3/fora/8v//ZSinP49qczlo0z/npTX1+v6
e1LTv68nOXA/Zvr39Zy+XsPf1yvg6d8bDfl4hp/+vVGnr9f190anf39Z8LLw
07+/7PT1Gv7+clFO/x69/Lnp36M3/Bv6e/TtPat/sWdw5amV3wpflv2uqJ+x
ykONQ3z8UHQMNO4J+Yv6/cwm59PY4ziu14ZXPfuZSoz3WP+cZ3IfRnY3n5xf
N+P9GPO3pKfqqs/HHST2yf0Z7nNxvzDEL7knKZj5tZ3gQ/yunfRHXDj6d46e
6mpC723Pz2At4TfGn5GPkxfxif3E/0Pe42h/ht/y+uL+Jvoc7Hh9c/4W7CGx
l7JK7Cm3L2dv2N8Pu4pLCv5W5YzqZxTvGWn9Zr9zIHqOFS86kD3ua14eaZ6c
kf9YjvbI74353/kjsw/Dfo34gYtn7au+thrOnzgPNfxqyBchf4l8OutffueY
88Yb4T4G94NsvhFMPlBf+/aa7kE0yJ+/7mHwfF/+0vfHfpbxejcCPdAHvdAP
P/AHv/CPPJCPk9fMqpfn7EMvb+6no4/ZR15fMxten7l+nb6Pt4I9YB/YC/aD
PWFfzt5+kH0uCf+c+W/Pyj3ZcUnz7LHsva/1fKjfw5HoG+r30k/Op0sPAz8F
WInrtbVfC/6w4WO8x9rLvhbI/4jnhUXZuRXO4w2vfIoe76/Ivy8n8Un8Ke5f
cB+I+Yf7kuH+Lvkr6ofzWd5/qSd4vg/xu6R/xgvjJ/E96C21PT/9e55fzn+R
R3/Ny4v4H/IkfnGa+H/oo7Lp9VWK94ut/22v7yPiybKH/hNvLyWV2FN5z9vb
ksrvVT+r9XhF5anwy5pnj9XPBdZz2WNX819b63FT4/aiPfJ7KuCTxH/sPgj7
McOL/3qMh5s/krwnwXlnV3aH/9OM+Y9Gh/JIeI/lZNXftwj3f8h/R5+8R4E/
yHsG7Kew15seBl9J2tMf/TNe+Zan52TV0wv95YQ/+O0m57+8p4C8jpP438mG
l3c38f9Okvt02B/6bH7t9d2V/WEPF3a9vSyrxJ5Wnnp7y+3Pxu9a/VbX4LHK
S/pupH4v6Pu+yvPqt6F59zzxoU6g1+C4Xhcw/mN43yTGewyveuLh/XheWMCc
X5NP0Yj5ZobHnjkflV5nE/9ynfyguP8xPPF24m2yD95L4f2e+Xg+7uDwvk/S
fj/pP9yvvefpGax7eslvP4n5f45f8psOk/Nf5NWP8Wfrf8vLuxH3H4bf8frq
R/szuOP1zd9Pxh76e95eRqrHnsaJvWF/z59qHha8qPJE/V2Wn3goezyv+qH8
xJbOp+vRHvm9MH87f+Lwcdhvsf938SjyNWr63Q7X/XnmPP6K/JtWzH80vL47
W/PxyVq8z2X+0mq4/2j0xPcA2G8aX1/5+Bv5KHXuT94OsMO3k/ac39J/ORm/
txroc/QS34Of+Qee39aal8f8hpfXcN3L8zCJ/7U2vD4OE/9vyPsLO0G/6Bv9
Yw/Yh7OXy7vennL7cvb2XPaZaZ78TvCZyuU9K3+v/i/Krg9U/lS/h85OoKeA
G3G9Lkr8x+P496uKci6JPw7ZP+v3uZCcX/M+SiPmm1l7zXenzG/xvoLhtZ/G
X+J+WYifab2cS+OXmsfwv3hPqBHjSdb+lofBl5P29Ef/c8n4IX665unl/sdM
5M/xS/4f8iD/CXlx/os8x5te3sT/5pL7m8eJ/9dN8rPQd0frG/ZwsOvt5fes
z3tWniX2lql8LruceWbwosoT4S/Ljg/Vz3nVD6M98nswfOI/Dh+H/VQBHybx
x5bstCe+OR+qxXwK8jkKeD7Jf2xJLyPJfT65PzOUXmtJfiTnp9z/5j0C1ruD
xF55z4r31Xjvj/cn6wm+nbSnP/ovJ+P34vrq6OX+EfzMb3h+yT8dxfwrJ69h
cv57uO3l3Urif4dfe30NE//v/K7XN/aHPZx/6u3lskrsKbcvZ2/PWZ+/0Xr9
jcFjlZf03Uj9XtD3/W4YrygP4npteJXsZ/ox3mP9qyQe3ojnhQXM+TX5FORv
sL8h/5HzzUa8r2D45Hy7L73OJveveQ+A+ZN4Gu/38J4U75s1k/jmfPRPHQy+
mbTfT/pnPMaHnsGmp7efnO9Wtzy/5McfJvl/yKsf8w+s/6+9vBsx/lyUxP/Q
Vz/uPwze8/o+iPZn+K63l5HqsadxYm/Y3/fPFDcSvKLyVP0ty388jvaIvTP/
On/gwl7YL7F/d/HHFdXXJI9ucn59onW+zvqw6fPZmqo/0/rSJR7G+4+PFPcQ
fCz/ss57UewXue9APDLJn8TfYr/eIz4sfJv3M9Y8DL6XtB+t+/5ryfjQc7Lh
6YX+csLfWcy/d/Jobnt5Ea9AnifJ+W93O+gD/bj43/HXQZ/o1+n74q63hwtd
by/LT7095fbl7O172eeS5snngsuy0z3Zcyn2V4DYN/Mt/uNl/S5GMd5j7cl3
1O+K+HorOb/mvkwl5ptZe8lxgftfnCfF+zPF+Ly33E/8y5LWbeITvC9wSv4c
6yvnN2rHe2m838d5a7i/Tfxt1cMh//K+bz+T9N9Kxoeeyoanl/u/8NPf9Pxy
/wN59Le8vMj/Q57kT50m57/oo9zx+iL+hz5Hu17f+H/Ywyixl5JK7Kn8jbe3
JZU/qH7+NwZ/q3Im2iP2XMCXEv9xeS/shwyfxB/3OiGebv0n59fH2oediV/y
g8hXm1G+Rl3rB/nltRifNH+K/HPVc192RnrtSR+zyfs9vP/De1ScZ4X3H4XH
/+J9XeJv3Bc/SPB8T/ty0n87ju/omd3y9BJPhh/e24Bf4nvIY3/Hy4v8017M
v3LyPk7Of7/d9foi/nwa4y9O3+w/sIdLz7y9YH/YU25fzt5+UH27Z/UvegZX
fhu+L8pyXK8LGP+R/Qz7n8Uk/kg8vBzPC61/1ZNP0Y75ZgVM/iP+SSXeVyhg
7s/Mx/Nt4yvxL3kPoBLfSyngahK/ZH++nvifs/F8vCh5r5n3w0P+XeKfgT9J
zmdnk/7Xk/Ghp7rj6eV9jWb07xy/43j/qCi5/4G8yK+/FOXr5E1+Ffrg/Bd9
cb6GPsddr2/iK4uJ/4e9lKP9Wf+/9faG/Z3raR8e7RF7Zf506/nWN2G/w/7b
xYO2VM6Kn+fJ+fULlS3J41ySj/a2vj8jPoA/w/3rJ+G+VwHPxfvXht/RPQ35
PS38KeK35AtzXzae9xhe7dqPfHytJjjkmwie2/Aw+FrSvp30z3iMX4/0OXqh
H35e7nh+57a9PF4m9z/Ilzp74uU7jPlXTh8vkvPf57ten1tJ/O+7p94ethL/
7/kzb08vEns7J3s8+o2H2yqZL/Ef8Sdrqme/TfyReGRN9ZzXcH7NeXZb9eT7
kP9IPuSZSvLFuT8zk8QnuW/Y0XyHv9OI67m117q9kMQvJ/7+dFFO/P3Vopz4
+4NFOfH3t4py4u/POHji/XvXfuL9XTfexPt/0OfonXj/Bf4cvxP3fw3/xMtr
4v5HUZ79cf5pUab5VxP5B0WZnr9NxJ+LMo2/fP/H/p/1/8f29/8BWvpA6Q==

          "], CompressedData["
1:eJztnXVwFdna9UNwCRLcA4SE4BAgQbtxSCC4uwwyuDO4u7sP7oPbDNKNBA3u
HhKcBEIghCDho96zftyqU3Xr+/N9/5hbdWvqcPrs3nutld29936e9eTp2Kfh
b64uLi4N9P+pW/tvGDf0s+WTNV+i843jrPjTo8Y09o2zunh8CH6d9LP1uElb
K+RyjPV7uPHNmBdt3cvtWXHh8QirZOs8HQrvCLOSua0ODL4eYnWzy0+5UybY
CMi4acP7XmHGmkzXmjfb+85Y/9C9lE/QJ8N3d3zir/W/GScy1X6Z9LKLGXI4
/6V+ca7mtjdT3zadksjMGJxnQ+V2iU23A/ft7b8lNlt2WzEzcnIi03tW10Tx
B13NmIVvnxkPfhj3zw/OubHhZ6PivFZJfjsWaYSVzNq8fWiIMdGtzY21K8Os
q+MiTtTbHmst9Hj/Y9fKhHZW68yAandS2tn+aLLhTRF3e+yZ8s/mjcxkx09r
3bvfyWz2t8MrDo18kctuX3986rhueezby7a+jSudzx6yJ/+6bFc87cxF08ef
LuJlL3y+ptOJGt52A6tCw04ZCtjp/RceODm3gJ0lLPfMp4cL2O76XF/fc31G
/Z72rqv9trrfe90/Tv2hf2nU39Tq/ziN55jGx3hv+DrG30x4vBc+8cIL/NoK
T/DNILw3C3/4OCJ+4GuB+JsnPuHXR3zDfx3p4bn0gV7CpR/09EP6Qm/O+qvR
pGCNK/5frLMJfOYVyfTFap+75IoKoZ+tK8uKzfRc8Ml6XSm0e8+yH6wOy+p5
9T0VaT0+vbRg46bh1pQu9SOr3r5oHZhgj7gcE2xUfVSpyu304YbZaNCuFt2i
jEkb1/8RnSnW+PJobYPQet+Nv+aPWtS0SwLTf+xSH2N9QvNx0MWkhSonNiMX
DG6zPncS03vHd6O2VxKzffLa0UfNxGbjvlHFR7VPaG5YOSbTpJEu5m+X9mxd
UiTOiO8WtT3f+bfG0u+n+9d/etGIyL3MLl093Lo//tD3bmM/W6fHD3tQLSiR
vXVRrtxvrqWyW9Y89G7OVXe7dbdXn5LUymxHfFlSqvW+7PaeRHXtHd9z2y8n
PRi2O3Fee9DoN0VehuWzp3drc3Tg9Pz2hO/Dj/eM8bLP5Wj1R+0sBeysDV/+
nj+ygO2T9kf3t7197LAya4dNW+Zje+tzZn3P9eP0e9rrp/af6X6bdP8X6g/9
q6/+rlL/92g8ZzU+xjs/3jH+7N0deAwTPluFF/h1Fp7g+0Z43xf+8LFJ/MDX
IPHnLz7hd6D4hv+v0kNv6QO93JB+0NM56Qu9Oc9/6K/6wrsrD32Is+xRW1J2
sD5b383SZxoM/mQtz/YyPKnHBytfxf5Lc62MtLwHzh98rkK4lTe42Li7Oy9a
dVO0v3vxTrCRY8zo9uu/hBn13xxa9lfDKOO7a9vI/p8/GbOzZTxcwOe7Ef4m
S+JW9RKYDbo0nVZ3WkJz9sDv8ZnzJzab38rzRw/XJOayLkkWJk2exHT9MOuP
bZ6JTd++P9I8r5HQPNW1YPJjXV3M46kOv2maKs44esZ34NA1b40zj2teuHHk
orF8r+eW44XCrWXLov5K0eGnDk8c39LfN5Ht++LpwjvbU9nlW3st2X/I3e45
d/uiGj6Z7cCa3Qqfmp3dLum7IajX9dy20TBJr/DIPHaNwTvOrzubzy436/SC
H73z2wGrho3IetvL7jXxW8LBn73tIpOKXPQPKWBvzLGqbdO6Pva8dWluHhrq
8+tzIX3P9bX1e9qrovYr6n7eun9N9Yf+FVd/vdT/PRrPFI2P8R4PdYz/jvC4
LXzOCi/wSyo8wbep8J4p/OHjgfiBrwjxV0t8wm8q8Q3/VaSH4tIHeklQ2aEf
9FRD+kJvzs9f9Mr1mye7xTRfGmutSXH1dd8eMVajU95JL1aIttosHrKwesUI
a2V4wHv/5mHWrIkXPuapF2I9a3Z5cIWbp4yv6TIdzZ81zPg6PXb68DzvjPTz
b8ROfhFjVCi4d8juS1+NBDXyue8e62K275MsuedaV/PB9JHnH/okMi9n6bn+
zbdEZkrzq1/ZhInNjwt7Bg3++e97A+K6POzgaj4N6P14U+0fRnTttf2PhMUa
K7a7eU0rHWkM61U4wfhWIcbfG7cN/1ozzDLjW/bpZMRaTbO9HNunakK7R7PB
9b2ap7Tv9f69QY176eykbhfHZs6UyT65PPpHnVrZ7AXB8Q8CW+Sy00YNePUw
Sx474unRDQsf5rV7t29Vp1lfT3tBlfIn/jmT3+74fnqDLfe97Oqu33Mv2eBt
L2vSc/1BjwI//9tvfaaAAvZSfa6q77l+vn5Pey/VvpvuN1X3P6b+0L/L6m8H
9b+qxlNE42O8XXs7xn9QeCQLcOATKbzAL1Z4gu9F4X1X+MPH1+oOfuArkfiL
EJ/wu0l8w/9B6eF36QO9bJB+0NMJ6Qu9Ob//8fxl/kN/pz7N7Zy63wdr2s6m
IzbMjLLS+l06uGXNK6tyZAqPqRtDrWTFq91+vPucdWvW0OhDL08Y2zY0zVi7
V6gx3m9IwITKEUZg5OOrO598MNquORkSWDHO+DwnvuzrT9+Ntt0r7V/9ysWs
227n+iJ1Xc3L05JHH02V0JxW6um4we4JzZpHsh+8XMfVXPfbhtW1d7qY9weZ
T7789s2oEbS+h9uOGOPujjcxLuNfGy2KhJfPcfScMalO4NILi0OtpM88PM5n
jbH2HdkXn2REArtNrXr5915NZjdY/DGFf6m0dvpNH1ZEp8xgT/Resfbjvcz2
yh+Ly12dnt2edHREoubJc9vpRydMsDB3Htssvckt/8y8do/opn2uncpn53mf
dWt1y9M+YH6eNWtwfvtz7c316j3Pbz/4EG4+SOllx+rzfn3P9d31e9pLq/bH
6n7zdf+x6g/9q6n+NlL/12k8sU8d42O8JYs6xv9eeLQUPk+FF/gFCE/wvSi8
A4U/fLyFH/FVUfwNEp/wu1J8w39z6SG79IFezkg/6Cle+kJvzusPnufMp+iZ
9sp3z+VeuHiE1fLToLm3rj2zeiUJ8JnV8oEV0LZE3vWhwdbRoPkec7PaxpIp
L8+ljbtvlDw1IT409Usj4EjS+tMjo4zg7rVudhgZY4z9NmRb4Pg4Y8z74O8X
Q37qKklxt6oFfxgdFjb3r+DvYm7a06lU9oou5rvka7Ot8/lhZLs/d8Cg7t+M
QX92vhhR5LPRamFirwmDoo3TwW8W7J333Bi6+1PJ0q+DjYz1FjYaWPmBlX/Q
yTU1Y99b3qlXHs12+ruVOqBf/eA8ie03h5MPDF+c0h4xeeT1SenS2X0bz3Pb
WS+D3XrzjA6FB2a2P1eaVudjz2z2tBXD5u0okNP+UiVZQPHFue26b64cir3h
Yb9PefZ46a157OGdE7+qWiOvPfJJXN/fN+S1K7V6YnQK/s/nYfqe6+vo97Q3
Se3H6H6NdP9e6g/9e6D+JlH/U2o8mTU+xlt8j2P894VHD+EzQniBX4zwBN/2
wruy8IePoeIHviqKPy/xCb8zxDf8L5AeOksf6GWm9IOeVkpf6M15/cv6g/c/
nr/Mf+jPv/+J552ehVozY/yub/xw04rZVHx1+ijbKvHgSrWIyEPG1MHxswpv
vmm8DfErVX11mLGn8LWS3mVeG4UnLt5Tbl2UYdy40nup/cFI/7rJ5Wx1Phmn
M13yve/x2UhdLiJd95xxxuCeoyM/eMYZgdumtW3389+TbYzcUvxHjFHXmDo8
6FC0UXnO6LqZF0YYYzv0uvb2jydGrYOxB4fH2oZX5+eP/UJvWv0n9jnw59U3
lo9f54k53WKtst9rj63b2sVumvZz5ajWie2rh3KOfdQrhd27WJ4udQekscfu
vhc2qoC7PXhonxxjBmWwY6I77KkwP5PtfeOFWXxQFvvw4x8+WdNms/9ZsmNG
7ZbZ7dHTs5aLDMxh929VdkyVxznsDGePJDuVNuevzyP0Pdf/rd/TXpTaH6j7
Ddf9u6s/9K+2+uur/qfXeFprfIz3lsY/W3i0FD6NhBf41ROe4JtKeJ8U/vDh
L37ga7X4eyo+4ff5fQff8L9NejCkD/SSXvpBT/mlL/TmvP/C+pf1B+9/PH+Z
/9Bfmq19vhSbGGJF7Y32nJrggBVUoE350yV2Ge5LNyX2yBdibJ2Qv7Wb7x1j
7pRWnj+S/NTLpT+X7l75zOi4u0v8pi2vjGY72yzO/jnCWHiwbILcLd4Z7Vyf
9PmzfpRR4OODYxObRBmvGhTJNar5O2NDk3p/FVkQYSSpWOxuzYYvjQabrzSt
PjfMqPcyScP1+24ZpedkXFIg5QFj5/K4LlE9QqzjM7MkCnQPs041u1D0cXSk
Ff8jVdPplWOsJrf+ntf++Ferc4G0J4oXSmCP71+lRNneiey6nYbn7bs4qX07
dHr0zgUp7FelPBtMauxmpw23Eu86ncZem6/C0hpv09qTq26vEnwqnb1yj3fq
Yx3c7ck3sm0acNzdTtFt4pQVT9ztSfq8gu91/Wr9nvbC1f4N3a+a7j9G/aF/
1dXfGPV/o8azV+NjvG81/s7Co4PwSS28wO+d8ATftsJ7nvCHj+biB74miL9V
4hN+c4pv+C8jPSySPtBLNekHPflIX+jNef+P9TfrH94/ef4z/6J/7u+y+FX2
819WW65Ltu/f9X2J8TZBcL7H+/cbtafPSeG2/YTxYW+aiodrnDdCwufNt/+6
YqzrHL0m88XrP9d3Ue6lW94yhoXXeZ+z+B1jSppD0wOL3DWOJZlU+H6pu8az
FAcvril2x8ie9UXNbG63jAEv90/Mf+qaka6xu3+hTSHG2oB8o79NOG7sHfo2
rIzrGqNwUfcXbm/3W3nnfPjhF37BKv20zoPd2W9bJdOVmrSxS6hVbt5Xc8Dv
z6z+31aeXTjqtVW039hdJSa/s8oWCo/94httpc/m80/fcR+t59k6fhi/5pPl
5uvWZPOEz9baYkvyLvT4YlV5frXVoh5frQmbqj261uablfPo9UYT33+zir7J
Wtgr33crhz6P1fdcv1q/p70naj+t7uer+xdUf+hfEfW3kPqfW+NJpfEx3ip/
OMa/W3gUFD5DhRf4vRae4DtJeA8R/vCxQvzAV6j4M8Un/B5c7OAb/tPsc+jh
m/SBXlJKP+gpn/SF3pz3n9n/Y/+F9S/rD97/eP4y/6G/Is3XTM3deZ4VPbBV
vWIfd1p1+mQd2W74YWtgrbqzqjU9afma0wsFzThrXc2StNh5z4vW5E3NmyQd
cMWqOqfn11shV61zsyp98J58zRp7MvS3QzOuWc2Pj189/Oe/d2o1oXXtcles
+1c7dLi16oL1JeO4+4kzBVtFK7g2yHzubytw+Y56q5IttTJfaO7eN9/Pv8+z
1c1rE08Zy/dO+fF7gqtGxQsZk23Od8fIPbHvwiITHxuzPkbFtx0dbnzNOfrS
Nt8XRuuiSxZtPP/aWL4j48y9xd4aaXvdqjF2U5QxMLbVDbeU0caih4sWlij3
wUj6rv20s0U+Gu4JfninCv1oLPc7XOlonRgjzdAJD6v0izGW6XM6fc/1C/R7
2nNT+4t0v0a6/2f1h/65qb++6v80jSdU42O8uVY4xl9deLhlcuATLrzAr5Xw
BN+zwruK8IePs+IHvrqIv0riE34/NXPwDf+dpYfy0gd6uSf9oKcg6Qu9OZ9/
sD/J/hDrc9ZHvJ/yfsD8zN8H/Ys7d6ZChxMXrHdLn2278/i2NW5N5T4DQkKt
VbuuhrVt9MzqetI7oEeDV9afy7+NHrMgwrpXqsmbJpFvra9lIs9PyhJlZaxb
uHLrnFFWnVtDShyMeGt1reVf5HWJCGveqcLnNsW/sBrvP/a1V4Mwq1SRzyPm
dblleWQ6PKaNtd9q2atAFb8UIYZ3qzNmgRtPjEbt/Z88mx5p1ImaM3jQ54/G
29XRoe87fDWe9Vu7rECUi7k3bOKrOO9E5romOcY0rJHUrFZxpEdg2RTmY7dU
Q/56l8p8uuBG6d4t0pi5B18OT7MvrZl57bmUf01OZ85o0DjXtLzuZmW/EWs/
jXE3H8UPidq12t009Xm6vuf6XPo97d1T+5V1v+W6/071h/49Un+rqf9+Gk8W
jY/x3tb4awmPzsJnqfACv0bCE3y/CO9bwh8+2okf+Bok/p6KT/idL77hv6z0
ME/6QC87pB/0lFP6Qm/O52+cf7D/zP4f+y+sf1l/8P7H85f5D/1tj8tQZ/SU
p9bH061cyjyLsJrP6XiuSbNoq1qlc34tTsdYxqS6T2Yv+GylLBFaqt7SL9Zf
XU8l+3vnV2vJ8zRLkh/6an38unv36SVfrFPH4tcHG5+teps6roxf+9FKWPhg
scBx76yLd90OJ64WbgWlvlTDb98Ja1nyconX5Lzz833zpcuVrW+NlBlfnG/S
Pc6Y0TfxkPzJXc0cyzMHvpyR1By888eRNXndzBQex8vdbpLOLJPqSt9BiTKY
Z2JO7Aiemcl0f7Q24EtYFvN7S7czNT5lM1s3ihpa5XAOM/1dt3OVvXOZ27dd
bbiuRG4zzHP96NQ3fv53zubb9RN7/Pq8Td9zfUv9nvbc1P4p3a+Y7p9U/aF/
qdXfiep/dAbHeEZofIz3jcb/SHh4CJ8mwgv84oQn+G4T3smEP3xUFD/wFSr+
1opP+I3r7eAb/i9IDzHSB3qZIv2gpwbSF3pzPv/l/I3zD/af2f9j/4X1L+sP
3v94/jL/ob9PI74de9j4o2V5xV8ffznOmnkl1Yux6+Ot+SFNui0PTGA3vTvH
s9RBV7tvqSVlsw1PaDfb6f7uw5iEdpIDtzLdOOBq1+lwoXl0mgT2lP1vb4xO
8d1yydml7cZCn6zg21ufL87xxhr0tMvf/g3PW12/zvSPiA012iZbnz/ZghjD
v8zy6w2eJDCNMVG3hndIblq9Tp3PPC+teSCh0TbjmAxmpjprH3v/lsUccaVU
UJdCOcxplbZPyX80t/nH+IE1zo7LY5bdsttj1ee8ZutCx/O18PM0J4wOChzi
l988s3lGgufR+c10KfsXLvqblzntVIrNC6Z7mWn1OVjfc30r/Z72Bqv9ibpf
P93fXf2hf/vV3zLqv5fGU1fjY7yNnjnG/1B4ZBA+c4QX+CUXnuDbR3g3Fv7w
MUH8wNcL8fdcfMJvOfEN/5ulh6PSB3qpJ/2gp3jpC705xx9wnsh5Dvvp7Gey
n8R6nvUU77O8TzCf8/fEeNYdHTMnQ0cX+/rc09/MAQnt9X2qlL3wMbFd/ciK
LO1P/FwvZhudON3hZHa98gHNR51IZv/x0Sjw/HhSOy7zxcqptyS2i796896l
j6vd8MP6oEL5v1m7K9yJGV36vVWxw96tKfdfscbMSGbNmvbMCIw6mWt3569G
uxLbve7tSWI2DBiSrWKOtGa3fPOK106e0Zzbc/an9kmymbPtsK5en3OZbTv9
NqzzkzxmnxZWnU75Pc0y1t55t8p5mQM/ZY34PWMB83nwtksptvqYkzP4mUXf
FTQ3djj3d+6Hhcwfh3+kL9W7sDncO+b4h1WFzXh93qDvuf6pfk97JdR+L92v
ue4/Tf2hf63V3zrqf22Np4zGx3jPafy28OghfMoIL/AbJTzBd5Twrir84eOi
+IGv7eIvSHzC72vDwTf8d5UefKUP9NJB+kFPc6Qv9OYc/0L8Aee/nL9x/sH+
M/t/7L+w/mX9wfsfz1/mP/Q31ndPnx6Zk9prUpsf06RLYXsszT4kdelU9pqm
0VmCWrvZBZZkaJv7Nze7bNfDe0aWSmW7HfUomv9gcnvunB/7+4cltrtuvOmb
ZL+LXfB+wWtm74/Wu5Onqtg3r1sjSi5OEjXvlZFo8+2QU1VczMQFA+bujU5h
3vzTrN/UI72ZzP98kiFxWUzPQoV7rX+Wyzz0MOeA4h3zmi+au/RsVC6/mbhP
/4/PX3ubrnGfyvl3Lmj69t7mvWFxYfNA1bRxiYYWNR9393+T5Esxc/8+P5cq
04qbv62/s6d9aHGz3Pvze+p//8/nffqe6/fq97T37bOjfVfdL1T336/+0L84
P0d/L6r/b3wc44nd5Bgf4114yjH+CsJjsPBZIrzAr5LwBN8/hXcO8Bcff4gf
+Boi/sqJT/gdLr7hf5L0UFP6QC/x0g96Ql/ozTn+ingLzrs5b+S8h/129jvZ
b2K9z3qL913eN5jv+XtjvHNKT6p2q6ebXXRrwc19bqexp1/KeLv1vLR281p+
T5suTmvv/3GzQsitNPaXD593N0nqZvefNtu31r5k9rNZkXUzPXC1F+xKHZ0n
bayVNGu7Ol873bI6ZOpUc/CjCKNtj7pNcrRyNRP2HxM4o0dq80nBrhtLLM5o
xp+8X9SvRA7z7u4iD9v2zWO+vJwgwQzb03ywp+Oq0Z+8zSPrHkaf/1HQPBHc
r8P+80XM7kmyZWyTr7g5bHyIObpkCXNs3eul2qYqaZ4onm7c5W0lzS+uA08k
cfM17Xbby+4u4vvr83F9z/X8nvaOqP2/db8buv8z9Yf+Rai/d9T/Z/0c46mn
8THekxr/FuHxSfj8IbzA74jwBF/wLij84WOx+IGvieKvlPiE3ybiG/7HSA85
pQ/00lH6QU+NpC/05hz/R/wV8S/EH3D+y/kb5x/sP7P/x/4L61/WH7z/8fxl
/kN/mdcOf/R7uXR28YUn/ay36exSH5M+y/MxnV2mnNsA95///mJdhP/S7mns
6OjM7dYeTmHXbNax8rxuieykkXGdv378bKXYPn7j7nJ3rFvhUdPbVnxnnExX
45bLw4Tmh7PDy0wZlNbMMaXo+UxtMpvr/rra8NnYXObIHZuGfnuU1wzq+3zz
lYFe5ute0xJUe+tjNrs+o1JnvyLmvWq1s4/LVdz0bG5FrxlcwpwzslD2ZCtK
moNLtWpwYbKvWb7C6xmNS5UyfXKVnTl5ZSlzb92YY6H2fz6X1fdcP1u/p73b
ar+h7hem+weoP/RvnvqbXv0P03j2anyM95bGn0N4tBA+X4QX+JUVnuBbTHhn
FP7wkUn8wFct8Rdf3MEn/KYW3/BvSw9XpA/00kD6QU9zpC/05hx/Svwf8VfE
vxB/wPkv52+cf7D/zP4f+y+sf1l/8P7H85e/R/Q3PuPKLAO2utvn+m/0TL3L
3c419mbRTj///fawhGdLtkhr/1O68vAB11PaDafU71+8UmJ70pZmy0t/ibMO
vrz2qa7/XSso04bYIlWijL/WV/Z+vT2RWXRRs6OX86QzrxxLPG1dgyzmvZaz
u/ofz22Wv1D207j1+cy+e04UetTO2zyzzhq983tBM2WDgOe+3YuaY/uvPVbu
THFzUK5+83sW+TmvFZ19+mpbX/Ns/IGj/o1LmTmrHo68nLS0GVU3Kk39QaXN
jIvXmtmXlTbf6XMOfc/1o/V72hul9pPpfkd1/57qD/07q/6eVv9zaDwrND7G
O/2VY/wrhMdvwueE8AK/PMITfMcK76LCHz4Wix/46ij+/hSf8DtPfMP/YOkh
q/SBXq5JP+iphfSF3pzjn4mPJD6N+CDiMzgf53yS8yH259kfZX+K/QHWZ7wf
837C84G/T/DZ99emx1v3u9uunoPt4A/p7MADgVuzt01rR19pH3zpfkr724CL
f86tltj261rwtKvrF+vEPymfhxp3Lb/rflFpakYZB/3C9+bem8g093169NEr
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
2H9m/4/9F9a/rD94/+P5y/yH/g4/8Hi1Mfkay+V925vrY/cbQYti73d/d8Ho
0n/B7pD8t41EC55MvNYr1Eh98O3aKwOeGb3yD91daNprY9gSl0xfF7wzri4I
3xNVPtq4GBK+qdv0j8aZy61bdd/2yQjZldO1w+zPxt2CHaMSFP5ibHp/4sX8
IV+NLbfKNSv3+8/3nnFbOhaJ//nfwzPehhf7/uvzRr7X9bf1e9o7ofbP634X
dP8B6g/9c1V/v8939D9I4/HX+BhvwEPH+E8Jj1HCJ4vwAr+bwhN89wvvpMIf
Pl6KH/jqKP6qi0/4dRHf8N9YeqgnfaCXNtIPejorfaE35/xz8mHJRyQfjHwc
8iGIRycemHhM4uGIRyIehPN4zkM5j+I8gP1Y9sPYj2A9yPs470M8j5gP4GNI
nXlFzjQMsXJ+Xj840DXM2uX16nGrO5FW+uSd0vxTNMaalzOi2aXNXy2X/asu
fM+ewJ4eNCg+b+tE9rlus2bNHJfUrtCt2yvvkSnsKqdWF59dzs1e8qbu3Flb
09jlTkXPrv04rT28in/TFPvT2bM8ExYa2sDdXjrTTH53l7tt5Krd/9mV/3ye
qe+53l+/p73yar+s7ndc95+s/tC/sepvKvV/gcaTRuNjvP9o/CnyO/AIFT6u
5x14gd8w4Qm+dYT3deEPHwPFD3y1Fn+zxCf8vjjv4Bv+b0sPxaQP9DJF+kFP
K6Qv9Obsf0D+Ofm/5F+S/0b+EfkfxN8T/0z8KfF/xF8R/0L8Aee/nL9x/sH+
M/t/7L+w/mX9wfsfz1/mP/Q3u+6tm6eef7Lu7frng8sXV/vmqy73Xr1LYT9f
s3SM/6J0dp6H40s+P57Rrvp0/LUcT7Pak9oH9Vr+LKd964V3m923PewXeQ80
37Ywr322Usk9vfJ62ut6lyq4b2B+e2t079BJE7zsLasyvBkQ6G03Wbg887FT
3vbRcc87jo78z+dN+p7r1+r3tPdU7V/X/Ybr/pXUH/r3QP0NUf/PajwjNT7G
67/YMf7fhMdh4VNWeIHfcuEJvtuEty384SNe59fwFST+JolP+N0rvuH/nvQw
SvpALymlH/S0QvpCb87+G/gfkH9O/i/5l+S/kX9E/gfx98Q/E39K/B/xV8S/
EH/A+S/nb5x/sP/M/h/7L6x/WX/w/sfzl/kP/e2o0sLncf809unGR1tmapjJ
jhx1PGfl/Dnt366bExolzWuvP5B/e9Gf+ijxz6HAyOACdqb719KNfVXIfjmq
/9fFIUXtL40u5U+zs7id7Guf+q3PlLCPuR8svXRzSbuk5b+zd11fe03LeYPe
7fa1vzaotWvfdV97tT6X0Pdcn1S/p70naj+d7ldA91+t/tC/B+rvUfV/lsYT
ovEx3gIDHONfLjy6Cp+Mwgv8goQn+BYW3u+FP3x8UzwFfBUSfy7iE367i2/4
fys9lJI+0MtB6Qc9nZG+0Juz/wv+G/gfkH9O/i/5l+S/kX9E/gfx98Q/E39K
/B/xV8S/EH/A+S/nb5x/sP/M/h/7L6x/WX/w/sfzl/kP/YUvjz2ea2du+9KG
CYuX7/S0b14KztRnsY89ZV7CiR4Di9oNOl+MLriwhD0x5YQKYy/72gtSZe7i
/qC0Pdvn0jJrh599/FnYnLUVytpJPK6+azWinN2s2223Zl3K21dLhEa6xJS3
awVtPx/lWeHX5yb6nuuP6fe0N1vtj9f9AnX/seoP/Tuh/t5R/3dpPMc1PsY7
S+NfLzyuCJ/6wgv8bghP8L0kvLMJf/i4LH7gq7D4Gy8+4TfmvINv+M/u4vY/
ejClD/TSQfpBT6WkL/Tm7D+E/wv+G/gfkH9O/i/5l+S/kX9E/gfx98Q/E39K
/B/xV8S/EH/A+S/nb5x/sP/M/h/7L6x/WX/w/sfzl/kP/aXfVnvKVddC9qqR
317V31/cTtd1X92PT3ztSy1eDxoSU8ZuuuhE0xKPytq1imXo5j29gj2hyvws
kyIq2a7+fnHJhpl2gwOlv58OqGxP//NVumnhle02S/vN3mFWsbP3Or3+S7sq
dmt9nqrvuT6Bfk97VdR+I90vWPdPrf7QvwTq72n1/6rGc0fjY7wnNf5FwmOc
8NksvMAvo/AE37vCe7Xwhw8X8QNfe8RfOvEJvycmOPiG/xHSQzvpA700ln7Q
UwXpC705+1/h74O/Cv4W+AuQ301+LfmN5JeR30N+BfHtxBcT30l8HfFNxJdw
vs/5KudbnC+wv8v+GvsbrC95v+f9iucb8wv8tl72173N20rZ0SPqn3Jd6m9X
fDQmfc2uFexHJV4EBrmYdmTuGQkTbK5sN0k0e8x7j6p2er/BiRp2rGZ/PtVr
4ZzO1e3jg4rtn5mnhv3XvScXzi6oYd++MeDFmMP/+Wzpe65Pp9/T3iu1f1/3
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
D+f9P+f1r/P7n/P8h/7+H/Ytn4s=
          "], CompressedData["
1:eJztnGd4T+f/x6MaI2atWKnYM2IECUFC7EaCGIlNkCjRqBU7QkitqlJqxCpq
BbWS8r2PGbGb2EGtBjVilhr1v65f3i8Pvtf1f+6BXFcenOucc9+fz+t8z31/
5inbb1jHAZ85ODjU1f/4M4PHvEl3tm1vOfikV4q7bffrKQNSuvrZrh0rHTjz
82Dbqz2JKePmDrXFVqnqPDF5si0mtndiU/8fbB2OXu//zm21rXTShE1WwG+2
iyN2NJ635YAtaWWTwV49/7B5uE0d0DX7n7bQw7Mi3iz521b9kMOG6ZkvbKGj
3pfc2TubOdFuVu/GkU6mxbJtuVp1Lmz+jCu1J6pqKRP5+7zbJTuXM8evtC6w
8khl02SLi1vYCjdT3ilhivPe2qar57fNgwd6mFqZuScvnFnfPL94Z9W4xw2M
6/O44DZDPM1THdfU+SBd76r7GS9Z40dovlTN7y15kK+P5K0k+YOkj4v0Q99j
0r+QeMBnpHjB74p4wneaeM8Tf/vn0f1MyXwda7SwNeqT8vuLEt1tX3llc6uy
4Rtbk0V115zaGmNb+fv1yPkhC23RO1ZnT+273jYm94A3XrMTbUl3k055JKXY
hofFTh5z66LtRauwmHzl7tjcfbseiV7/3OZjS1g2JzGbWeycnFjNK5+5mXFz
QI+Kzqb4yxfPiy4ra+a0PZt/3v6q5qsDI4+dcq5jKojv+81/tkve1NSk1vkh
usje5uZW9POy36xoZSqcbVeyh1s7kzesR0ih3O3NN71j5sTdDjDXnuQP2+sX
aCJ0nFvny+j6a7qf8V5rfJ6nn+aPkTzId0XyzpP89aTPl9IPfXtL/y3iAZ8I
8YJfNfGE76veWbxbir/9+8HzSF/tW6J5t0jbjMUTqqwJmmYrs7XWLnePxbZG
DiWKXFy6yfZP99qXx9Qztkl33h4KCTljW1wwwKPC6Ou2wL/8ew1Jz7T1cXxR
vcbSd7Yr+r0tKxDzd86txYzv/XPj7/1WzgTq9+ql3/ORo2tdLo/zMUcGR+3f
WKWVuXhsQp9rzQKM+75+K35sEWSK7Rj707JmweZVvg1HnzTuZfIdaDl7c2hf
E99mVY9Xnv3NjAaexfzCQ02Qc+CR1NRQE6vjZTqfR9c/1f2MV0Pjp2m+vZrf
SB7kay15vSX/XOmTzPskfb2k/zzxgM+f4gW/HOIJ363iXUb87dcrnh/X+3hk
+Ec3+tnmuWzbr3f/22JL7ZcrNN+i/baXm0Nn/l4rzRaV8Wptv9K3bdsWei9K
afrctuW107YjC7ObgKi5qfnqFTLflXhQJbyZq5nnm7k7MaO6CX6QGVPToYGJ
Pbm9z/oGzUxI20H97ya2My7i8/OGIbuKjeth5ohnsaj4CZUfhZldF98MXFdw
mOkYvavo9EXDzWyvnjnu9R9p3H8MdP5j9WjT8Fyzdk4lo0xA0ODzl5dEGS8d
u+l8nK5vr/sZr5DGn6n5Zmv+IpIH+aZI3k6Sf6L0mSD90Dde+q8VD/jcEy/4
FRdP+HYS70bib79/sF7xfvA8JnzXYt/VgAO2p8WedshIOWtbOPazkymbMmwX
Fru5Njr40jbqcfieAg9zmjS9767vgu6GxVQ0S77YndOrfl2zX78/F60nbgsc
Jo2P7WxGTnlztHffPmba6PVOd58NMtni/rk3Oe0bk6Ps7rhpu0YZ8/0zt5wj
J5hS6XNmBodMMR4PPas+fTXNHL+VJ6RhyzgTMd7Rfeejmcav2XyHm+tnm6Ev
3R/4NZtjfDnW+aO63l33M16Sxv9M872ekTX/OMmDfFUkb1HJv1v6zJJ+6HtA
+oeLB3ymiRf8vhZP+F5PyOLN+ma/n7P+8b7xfBlvejenDQmL79galBm28ea+
f23vhu9Kefuv04f9Ojwx6dXBltU+rNfn48tFhZ9uYQJLVXNfuKujGZ7ccEHX
y73M2a3rRyYPCzPB+v3GX0pwalp7nJkV8jzNuWSMaTrnv/DMo3HmUNWnKVF7
vjeTkvxKnzz3o2md4FJjz5NF5vHBtf07bVtqcrRJL39hZ7y5fP/S3bvnVpj3
y2sc/7fGSnNJx9l1/r6ub6b7GW+/xm+o+aZq/h8lD/KdkryDJb+f9Dkk/dC3
s/T/QzzgU0G84HdNPOH77H3x//H+Tvzt7Sv2c/YP1iveD56H48QBE9MK5zXb
O+SrsXSIi2mh9fdxvdT2rr96m3JprVouWt3WXDh/fGzOY13NNK33vA9Rie4x
g9aNNYW94g6ObT3VtNbvO0a8Hqb6371eZqkZNfPdz9e8V5nz82flOZy41vg9
7h5Xrt5GUz4i6f7pdgnG5/6v/9Vrt83cKFho2L89tpvWveITH/++3VzXcROd
L6PrG+t+xvtW49/TfGM1v7fkQb5IyftO79MY6XNI+qHvZenfQDzgkzkhixf8
JosnfNeLd5j429u72A/sV6yPvI88f+br8X3szkfnappVRQodqp+3qXGS/XO2
dGS13X93N9W1fq/W+p7gGPdPmVXRZrLWl/K7TznP9l1gtrlGbipeNN64Fo88
t/bcL6aLb/6FjaM2G58WBcunlf7NeJYOTD53ZrfpHzQl3jtmr7njWHpMgYGW
uRHm5Di/zAEzda2fx5gmB01U/a/WvVt50MTo+E+dv63re+p+xmus8QM1X1HN
v0byIN8YybtR8i+QPs7SD32fDcrSf754wGepeMHPiCd8u4h3L/G39z+wd7Gv
2M/ZP1iveD94Hudkz2TI3sk+cPmV9FJDjL/236BW/rHfx00zDrtd+lfbP888
1++zXHB6qVcDfzFV9Hs+H3ZmTrG3O82p2LxpZTbvM1PEN2CyV8cDr5PN8Due
p4fuPGG6Ffh1ysMpZ0z/hj6txjZNNd2TRkzq1ifNNKm5ovzsQ2kmRMd9db6z
rv9a9zPeRI2fovmOa/6Skgf5eH/f7sqSv6X0wb5A3zPS/7B4wMddvODXSzzh
+414rxR/e38Q/wN7F/uK/Zz9g/WK94Pn0aFvjs+n+w79sD5HdLmaFtt6xof1
/LXWf2+tJ3VfLBveeccO4xade8uiljazM3ZY85/8DptQ8XNosznHpWWp5rt5
8zYurXPBHL3fyOP04XTj8tOKhg2f/mluOlYPr77uhhk44sq85bab5niE2/k5
ZW6ZUB3f0Pniuv6A7me8d62zxu+t+TZp/jKSB/nqS96Xkj9S+nSXfujbWPqf
Fw/4sL7Bb694wtdBvIPF394/xz/CHsf+w95gf2M95f3l94J82Ev1F7hvz/3D
QvM2+Gzc/J6rzdK5XiG/PkwwGzLTV1xok2jG6/f6b2bF6RnlT5jG+r3XyBwd
nzPhsjm48UWpBP8bxiPc6U7i3L/MnAdp1wPO3DOxuU769Nr20HgW7X5mUNhj
c/evfrcqDHli6mSruLvJkSfmjo4b6Hy0rp+u+xlvv8avovnqaf5Hkgf51kje
hZI/U/pUkH7oGy39XwzI4gGf/OIFvzziCd9i4n1N/O3jJfjn+IP4H9i72Ffs
5+wfrFe8HzyPe+Wyl8qovMa00P7L+l5jeu+3zRccMVU3/bggwv0PU6Bt5h7P
spfMA/2+n2Qfub7x2TvmSXLAuwV3HpnUecV3e/o+M4EjVkwOzvfSFBl15WW1
qa9Ni8zfMou2f2dGenUv887lvdniEzv/nu29GaHjZjpfUNe30/2M90DjP9R8
tzX/55IH+SpJ3s6Sv6H0uSz90LeH9PcVD/gcFi/4zRBP+P4s3iXF3z5+RbwE
/xx/EP8Dexf7iv2c/YP1iveD53FZ6/cPyXPcDo86anpr/c+1s8+iEROumsb6
/Y4P8M//sO0j47Lw+wI5hz83JcQzc9ueN22mOVj7ppZI65Oc3YpplX1ECyuH
1fyflzvOVMhtXazgMOnidifLe/fV2ve981gXdOyj85N0/R7dz3g83xKaL0Lz
15U8yMf+NUvyJ0sfT+mHvsOkfxvxgM8o8YLfVvGE7wDxrin+9vFE4lfES/DP
8QfxP7B3sa/Yz9k/WK94P3gem/fOeJ9c7aypqvU+zvtpYFTAXeOh9Wf9yaSC
6a9emfibTx8lXnawzt7Y+/qvdEfLQ7w7vA3Yk7d9QeuPq24nvtpfyAobMDXV
N6mI9bxS1d/6fFbMajR9jGvdEcWspzoeqPOndL2/7me8PzT+Us23TPPXkDzI
5yp510v+KdKnhfRD30fS/5XsA/i8kH0Nv+ziCd/C4j1O/O3ju8QTiV8RL8E/
xx/E/8Dexb5iP2f/YL3i/eB5FNj/7uuR/vc+rCfzjjZKfFD5rdmr3/NZ/d6L
BR2fXyXwCyu62BKf0z8UtSZmP53hcLaEVent322W7XSxrF4jJlqDXa38Fbvt
WhVR1npSfPWQlKNlrXw6tul8WV0/WvczXmGNf1rz7dD80yQP8uWUvGUlf5D0
KSn90LeK9M8QD/iEihf8iosnfHOK9zHxt4+3Ez8lXkd8iHgE/i/+FvY99iT2
C/sl6zPrAb8/9G2q9T+j5pWFzkMdre6XEoP9Sua36vZw2ODeoYg1vPeCqvOD
S1r7xLdcqznfLVlX3upcsv2zxCWVrIy871sOfVvFGviiya4X06tZpxumx1f7
oroVquNbOt9B17vofsYbpvFrab72mv+q5EG+E5I3RvK/2JGlTynph74VpL+z
eMDnc/GC3wDxhO9n4p1T/O3zH8Tbie8STyR+RbwE/xx/EP8Dexf7iv2c/YP1
iveD5/HLV28cDwUVsF5p/eH3PcRt0/J/m5e3ao/eNHd5tirWbJ/i4Wv21bBe
J3gdXzu9lnXxWz/bdr861uIl93++NaCudSq64N8ex+pai3R8Tudf6frpup/x
wjV+ac33UPMvljzIFyd5a0l+d+nzuk2WfuhbVPo7iwd86ooX/IaKJ3yXi/dI
8bfPR5H/IN5OfJf9hPgV8RL8c/xB/A/sXewr9nP2D9Yr3g+ex9S/2vXP9uBL
q+228Zts1ypYF/T7997g+0+5q7WsHJ09HGfX8rCq3x+8tqlXA2tvxV5fTN3g
ZT0ue6X7GZ9G1i8j5/vsP9nIeqTjRJ2vrOuz6X7GS9X4LTXfKM3/SPIg327J
u1ryh0ufa9IPfX+R/vin8BkhXvB7rP0GvrPFu6H42+cHyUeR/yDeTnyXeCL+
L/ES/HP8QfwP7F3sqw/7udZz1iveD56H09drJj6rXuPD++A++0hI7MH61n3x
nvzny1xNg5tae883GLiqo6/1V8lOIemhzawiK1eGvTnYzLqt4ySdH6/rM3Q/
4/E+OWo+H81fVPIg30nJu0TyF5Q+16Qf+gZIf5t4wOeSeMEv0zWLJ3xniXce
8bfP15If/JCPkv1NvJ34LvFE4lfES/DP8QfxP7B3sa/Yz9k/WK94P3geD4b2
PRC8rYHV0dVxyO1pja3g2S38PTf5WnkW5hjlHORnxX7rXyl8dEtr6+ir1/On
t7IiXc4fG9qltZWg42k6n0vXd9H9jHdX4/N8jmn+/pIH+b7APpD8uaTPRemH
vk8VPxgtHvAJFy/4rRRP+L7bm8X7uvjb58/Jr5LPI39EvgL/hHgs8T/iTcQ3
8KfZ3/EXsE+xh9h/We9ZX/g9w4/ff3jHPMNjHVtaswZNmbs9qI0VWXr7y+3/
tbMGLR7/6Eqiv/VNSMSGnzq1t0J1HKHzM3R9qO5nPH+NX13z1dP8lSUP8o2T
vDUl/23pc0D6oW+U9G8uHvA5LF7wyy2e8L34WxZvm/jb1zOQPydfS36QfBT5
D+LtxHeJJxK/Il6Cf44/iP+BvYt9xX7O/sF6xfvB82ixacOZrj3bWt+Kv3dY
7p55DwRaVTzdJwUd72AldS6yIKRyR6uSjhvqfISub6r7GY/3567mexuUNX+0
5EG+UZIX/2er9Gki/dB3h/RnPYdPTfGC35fiCd/N4n1c/O3rS6hnIH9Ovpb4
D/ko8h/E24nvEk8kfoU/jX+OP4j/gb2LfcV+zv7BesX7wfMYuyvmtmtkB2vN
jXz3k1p2sgqO9x19fXSQ1bbHjV1JN4KsAjpepfNjdP0Q3c94rG/sP66a/5nk
Qb4vJe8JyT9C+vw3Mks/9HWU/oHiAZ+84gW/7eIJ35v7s3jnFH/7eh/qS6hn
IH9Ovpb84Id8lPIbxNuJ7xJPJH5FvAT/HH8Q/4P9BPuK/Zz9g/WK94PnUXt8
8357/DtbR+NqrnixvItVomt46pPCXa1kHdfUeZ6Pp+5nvBiNn6j5EjT/GcmD
fHslb3/JX1f61JR+6HtO+oeIB3zqiBf8gsQTvsPE+4HyN/b1V9T7UF9CPQP5
c/K15AfJRxE/It5OfJd4IvEr4iX45/iD+B/Yu9hX7OfsH6xXvB88j1xxyYPz
OXazfr0eH90iupuVU8dHdD6frq+g+xlvk8a/qfluaf7vJQ/y5Za82M/J0qeH
9EPfbtK/g3jA56x4wa+SeMK3s3h3EH/7ejjqr6j3ob6Eegby5+RryQ+SjyL/
Qbyd+C7xROJXxEvwz/EH8T+wd7Gv2M/ZP1iveD94Hg7/+wu21unYWedb6fpd
up/xhmr8LzTfYs1/WPIg3wPJW1/yV5M+C6Qf+u6T/h7iAZ+G4gW/APGEb1nx
Pin+9vWJ1MNRf0U+jvoS6hnIn5OvJT9IPor8B/F24rvEE4lfES/BP8cfxF7C
3sW+Yj9n/2C94v3geTjq+LDO59X15XQ/423U+Dc0303NP1fyIF8uyUs84Ij0
6S790LeL9A8UD/ikihf8KognfIPEO0D87etFqU+kHo76K+p9qC+hnoH8Ofla
8oPko8h/EG8nvks8kfgV/gP+Of4g/gf2LvYV+wX7B+sV7wfPw03n43V9fewz
jRet8fdovi2a/5TkQb7fJW9fyV9L+lSTfuibJv27iQd8aosX/DqIJ3wjxPue
9hf7+l3qRalPpB6O+ivqfagvoZ6B/Dn5WvKD5KPIfxBvx78nnkj8ingJ9hH2
Ev4H9i72Fc+H/YP1iveD5zFS14fpfsZz1PijNZ+L5n8ieZCvhORNkfyR0ueN
7DH0zSb9/cUDPjnFC34J4gnf67LHPhd/+3pq6nepF6U+kXo46q+o9yG/Qj0D
+XPyteQHyUdh/xNvJ75LPJH4FfES/Av8QfwP7F3sK/Zz9g/WK94Pnoen7me8
Thqf9euV/Jdxkgf5IiVvG8m/Sfp4ST/03Sz9e4oHfKqKF/xKiCd814n3EfG3
r2//5O9/XP4+/QbUt1NPTf0u9aLUJ1IPR/0V9T7Ul1DPQP4c/5L8IPko8h/E
24nvst8Qv4If7w/rG/4H9i72Ffs5+wfrFe8H493W+Kma77Dm7yN5kC+/5D0h
+R2J90k/9M2U/iPEAz4DxQt+y8QTvq8VH0sXf/v+D+wz6tupp6Z+l3pR6hOp
h6P+inof6kuoZyB/Tr6W/CD5KPIfxNuJ7/J8+D0TL2H/wR/E/8Dexb5iP2f/
YL1iPJ5HNs3nrfkLSh7kS5G8iyR/XulzWfqhbzvpnyge8DkrXvC7r3gyfKeJ
dy7xt+/Hof+DfgPq26mnpn6XelHqE8k3UH9FvQ/1JdQzkD8nX0t+EPuT/Afx
duK7rC/Er4iX4J/jD+J/wB/7iv2c/YPxeD94HoM0/23Jg3xbJO9Pkr+79Lkg
/dB3qfS3xAM+g8ULfvfEE75TxLuO+Nv3R9GPQ/8H/QbUt1MfRv0u9aLUJ1IP
R/0V9T7Ul1DPQP6cfC35Qfxp8h/E21nviScSvyJegn+OP4j/gb2LfcV+znis
V7wfPI+Zkgf5JkjeKpK/ovTJVL4SfXNLfyfxgA/+Pfz6iyd8F4r3YPG371f7
lN//uPL79A/Sr0Z/FP049H/Qb0B9O/XU5C+pF6U+kXo44mfU+1Bfgr7kz8nX
kh8kH4U9RLyd+C7xROJXxEvwz/EH8T+wdxmP/Zz9g/WK9wP5HCQv/ll76VNE
+qFvWel/TTzg00u84FdYPOH7fnMW70Pib9/PSf8g/Wr0R9GPQ/8H/QbUt1NP
Tf0u9aLUJ1IPR/0V9T78/qhnIH9Ovpb8IPYp/g/xduK7rH/Er9iv8M/xB/E/
GA/7iv2c/YP1Cvl4Hqsl/3jp01T6oe/f0v+ZeMCHfD783qRl8YRvfvEeIf72
/bX0c9I/SL8a/VH049D/Qb8B9e3UU1O/S70o9YnUw1F/xXpAfQn1DOTPydfi
L5CPIv9BvJ34LvFE4lfES/DP8QcZD3sX+4r9nP0D+Xg/eB47pY+b9EPfftK/
kXjAJ1y84LdWPOHbRbzLi799vzP9tfRz0j9Ivxr9UfTj0P9B/I36duqpqd+l
XpT6ROrhWJ+p96G+hHoG8uf4b+QHyUeR/yDeTnyXeCLxK+Il+OeMh/+BvYt9
xX6OfKxXvB88jxTph75tpX8N8YDPdvGCX5R4wjdWvJ3E377//FM9/8dVz8/3
AOg/p9+Z/lr6OekfpJ+D/ij6cej/QD7q26mnpn6XelHsF+rhqL+i3of6EuIb
5M/J15IfJB9F/oN4O/Fd4onErxgP/xx/EP8Dexf52M/ZP1iveD/Qt7L0t8QD
PkfEC34bxRO+925n8W4p/vbfZ+B7APSf0+9Mfy39nPQP0q9GfxT9OPxe6Deg
vp16aup3sSepT8Q/pf6Keh/iTdQzkD8nX0t+kHwU+Q/i7cR3iScyHvES/HP8
QfwP5MO+Yj9n/2C9Ql+exw7xgI+reMGvo3jCN0y854u//fcyPvVXflz9lXy/
hO9l8H0GvgdA/zn9zvTXMh/9g6xvrKf049D/Qb8B9e34W9TvUi9KfSL1cMRj
qfehvoR6BvLn5GvJD5KPIv9BvJ3xiCcSvyJegn+OfPgf2LvYV+zn6Mt6xfsB
n3Txgt8w8YTvPPHuIv7235P51L//cfXv830fvrfA90v4XgbfZ2A8+s95H+mv
pZ8Te4N+Nfqj6Meh/4N4BPXt/B6p36VelHwF9XDUX1Hvw++begby5+RryQ+S
j2I84u3Ed4knEr9CPvxz/EH8D+xd9GU/Z/+AD+8H/ILFE77J+t6Fs/jbf2/p
0/dhPq7vw/D9K763xPd9uJ7vl/C+8X0G9iv6z+l3xh6nn5P+QfrV6I8iXkf/
B/0G1LdTT00+j3pR6hOph6P+inof6kuoZyB/Tr6W8chHkf8g3k58F/mIXxEv
wT/HH0Rf7F3sK/iwf8CP9wO+08T7ivjbf4+M71/xvSWeH+sb6x/fy8B+4HsA
9J/jH9FfSz8n/YP0qxE/pR+H/g/6DahvJ79K/S71otQnUg9H/RX1PtSXUM9A
/pzxyA+SjyL/Qbwd+YgnEr8iXoJ/jr74H9i78GE/hx/rFXx5HrXE///7Ptyn
7/V9HN/r+z/T9m7t
          "], CompressedData["
1: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
NHnPyvytF/O3Sv5+xpu/n2lm/tYvW/4byPOgDw==
          "]}, $CellContext`Evolution[
          Pattern[$CellContext`populationSize, 
           Blank[]]] := NestList[$CellContext`GetNextGen, 
          $CellContext`FirstPopulation[$CellContext`populationSize], 
          19], $CellContext`GetNextGen[
          Pattern[$CellContext`lastPop, 
           Blank[]]] := Table[
          $CellContext`GetBestFitness[{
            $CellContext`Reproduction[
             RandomChoice[$CellContext`lastPop, 2]], 
            $CellContext`Reproduction[
             RandomChoice[$CellContext`lastPop, 2]]}], {
           Length[$CellContext`lastPop]}], $CellContext`GetBestFitness[
          Pattern[$CellContext`twoCouples, 
           Blank[]]] := If[$CellContext`GetY[
            Part[$CellContext`twoCouples, 1]] < $CellContext`GetY[
            Part[$CellContext`twoCouples, 2]], 
          Part[$CellContext`twoCouples, 1], 
          Part[$CellContext`twoCouples, 2]], $CellContext`GetY[{
           Pattern[$CellContext`x, 
            Blank[]], 
           Pattern[$CellContext`z, 
            Blank[]]}] := Part[
          Part[$CellContext`surface, $CellContext`surfaceIndex], 
          $CellContext`VerifyLimits[$CellContext`x], 
          $CellContext`VerifyLimits[$CellContext`z]], \
$CellContext`VerifyLimits[
          Pattern[$CellContext`value, 
           Blank[]]] := Module[{$CellContext`maxSize = Length[
             Part[$CellContext`surface, $CellContext`surfaceIndex]]}, 
          
          Which[$CellContext`value <= 0, 
           1, $CellContext`value > $CellContext`maxSize, $CellContext`maxSize,
            True, $CellContext`value]], $CellContext`Reproduction[{{
            Pattern[$CellContext`x1, 
             Blank[]], 
            Pattern[$CellContext`z1, 
             Blank[]]}, {
            Pattern[$CellContext`x2, 
             Blank[]], 
            Pattern[$CellContext`z2, 
             Blank[]]}}] := {
          Floor[(1/2) ($CellContext`x1 + $CellContext`x2)], 
          
          Floor[(1/
            2) ($CellContext`z1 + $CellContext`z2)]}, \
$CellContext`FirstPopulation[
          Pattern[$CellContext`maxPopulation, 
           Blank[]]] := Partition[
          RandomInteger[
           Length[
            
            Part[$CellContext`surface, $CellContext`surfaceIndex]], \
$CellContext`maxPopulation 2], 2], 
        Attributes[PlotRange] = {ReadProtected}, $CellContext`GetBall[
          Pattern[$CellContext`x, 
           Blank[]], 
          Pattern[$CellContext`y, 
           Blank[]], 
          Pattern[$CellContext`z, 
           Blank[]]] := 
        Sphere[{$CellContext`x, $CellContext`y, $CellContext`z}, 
          1], $CellContext`GetPop3D[
          Pattern[$CellContext`pop2D, 
           Blank[]]] := Map[{
           Part[#, 1], 
           Part[#, 2], 
           $CellContext`GetY[{
             Part[#, 1], 
             Part[#, 2]}]}& , $CellContext`pop2D]}; 
      Typeset`initDone$$ = True); ReleaseHold[
       HoldComplete[{(RandomSeed[314159]; Null) ($CellContext`Rastrigin[
             Pattern[$CellContext`x, 
              Blank[]], 
             Pattern[$CellContext`y, 
              Blank[]]] := (20 + $CellContext`x^2 + $CellContext`y^2) - 
            30 (Cos[Pi $CellContext`x] + Cos[Pi $CellContext`y]); 
          Null) ($CellContext`surfaceIndex = 1; Null) ($CellContext`surface = {
             Table[
              $CellContext`Rastrigin[$CellContext`x, $CellContext`y], \
{$CellContext`x, -20, 20, 0.5}, {$CellContext`y, -20, 20, 0.5}], 
             
             Table[-(100 (Sinc[$CellContext`x] 
                Sinc[$CellContext`y])), {$CellContext`x, -8, 8, 
               0.2}, {$CellContext`y, -8, 8, 0.2}], 
             Table[
             100 (Exp[(-$CellContext`y^2)/2] (-
                Exp[(-$CellContext`x^2)/2])), {$CellContext`x, -5, 5, 
               0.2}, {$CellContext`y, -5, 5, 0.2}], 
             
             Table[(1 - $CellContext`x)^2 + 
              100 ($CellContext`y - $CellContext`x^2)^2, {$CellContext`x, -2, 
               2, 0.1}, {$CellContext`y, -2, 2, 0.1}]}; 
          Null) ($CellContext`VerifyLimits[
             Pattern[$CellContext`value, 
              Blank[]]] := Module[{$CellContext`maxSize = Length[
                Part[$CellContext`surface, $CellContext`surfaceIndex]]}, 
             
             Which[$CellContext`value <= 0, 
              1, $CellContext`value > $CellContext`maxSize, \
$CellContext`maxSize, True, $CellContext`value]]; Null) ($CellContext`GetY[{
              Pattern[$CellContext`x, 
               Blank[]], 
              Pattern[$CellContext`z, 
               Blank[]]}] := Part[
             Part[$CellContext`surface, $CellContext`surfaceIndex], 
             $CellContext`VerifyLimits[$CellContext`x], 
             $CellContext`VerifyLimits[$CellContext`z]]; 
          Null) ($CellContext`GetY2[{
              Pattern[$CellContext`x, 
               Blank[]], 
              Pattern[$CellContext`z, 
               Blank[]]}] := Part[
             
             Part[$CellContext`surface, $CellContext`surfaceIndex], \
$CellContext`x, $CellContext`z]; Null) ($CellContext`GetPop3D[
             Pattern[$CellContext`pop2D, 
              Blank[]]] := Map[{
              Part[#, 1], 
              Part[#, 2], 
              $CellContext`GetY[{
                Part[#, 1], 
                Part[#, 2]}]}& , $CellContext`pop2D]; 
          Null) ($CellContext`GetBall[
             Pattern[$CellContext`x, 
              Blank[]], 
             Pattern[$CellContext`y, 
              Blank[]], 
             Pattern[$CellContext`z, 
              Blank[]]] := 
           Sphere[{$CellContext`x, $CellContext`y, $CellContext`z}, 1]; 
          Null) ($CellContext`FirstPopulation[
             Pattern[$CellContext`maxPopulation, 
              Blank[]]] := Partition[
             RandomInteger[
              Length[
               
               Part[$CellContext`surface, $CellContext`surfaceIndex]], \
$CellContext`maxPopulation 2], 2]; Null) ($CellContext`Reproduction[{{
               Pattern[$CellContext`x1, 
                Blank[]], 
               Pattern[$CellContext`z1, 
                Blank[]]}, {
               Pattern[$CellContext`x2, 
                Blank[]], 
               Pattern[$CellContext`z2, 
                Blank[]]}}] := {
             Floor[(1/2) ($CellContext`x1 + $CellContext`x2)], 
             Floor[(1/2) ($CellContext`z1 + $CellContext`z2)]}; 
          Null) ($CellContext`GetBestFitness[
             Pattern[$CellContext`twoCouples, 
              Blank[]]] := If[$CellContext`GetY[
               Part[$CellContext`twoCouples, 1]] < $CellContext`GetY[
               Part[$CellContext`twoCouples, 2]], 
             Part[$CellContext`twoCouples, 1], 
             Part[$CellContext`twoCouples, 2]]; Null) ($CellContext`GetNextGen[
             Pattern[$CellContext`lastPop, 
              Blank[]]] := Table[
             $CellContext`GetBestFitness[{
               $CellContext`Reproduction[
                RandomChoice[$CellContext`lastPop, 2]], 
               $CellContext`Reproduction[
                RandomChoice[$CellContext`lastPop, 2]]}], {
              Length[$CellContext`lastPop]}]; Null) ($CellContext`Evolution[
             Pattern[$CellContext`populationSize, 
              Blank[]]] := NestList[$CellContext`GetNextGen, 
             $CellContext`FirstPopulation[$CellContext`populationSize], 19]; 
          Null)}]]; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->1665621307],

Cell[CellGroupData[{

Cell["CAPTION", "Section",
 CellFrame->{{0, 0}, {1, 0}},
 CellFrameColor->RGBColor[0.87, 0.87, 0.87],
 FontFamily->"Helvetica",
 FontSize->12,
 FontWeight->"Bold",
 FontColor->RGBColor[0.597406, 0, 0.0527047]],

Cell["\<\
This Demonstration applies a simple evolutionary algorithm to find the global \
minimum for a closed and bounded surface in 3D space.\
\>", "Text"]
}, Close]]
}, Open  ]],

Cell[CellGroupData[{

Cell["DETAILS", "Section",
 CellFrame->{{0, 0}, {1, 0}},
 CellFrameColor->RGBColor[0.87, 0.87, 0.87],
 FontFamily->"Helvetica",
 FontSize->12,
 FontWeight->"Bold",
 FontColor->RGBColor[0.597406, 0, 0.0527047]],

Cell[TextData[StyleBox["Description",
 FontWeight->"Bold"]], "Text"],

Cell["\<\
1. For the initial generation, 10 or more points are randomly selected in the \
plane below the surface.
2. Two pairs of points are selected randomly from the initial population. \
Each pair produces a new point halfway between them.
3. From those two new points, the one below the surface at a lower height is \
selected. 
4. Steps 2 and 3 are repeated until there are enough points for the next \
generation. \
\>", "Text"],

Cell[TextData[{
 "Rastrigin surface: ",
 Cell[BoxData[
  FormBox[
   RowBox[{"z", "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"20", "+", 
       SuperscriptBox["x", "2"], "+", 
       SuperscriptBox["y", "2"]}], ")"}], "-", 
     RowBox[{"30", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"cos", "(", 
         RowBox[{"\[Pi]", " ", "x"}], ")"}], "+", 
        RowBox[{"cos", "(", 
         RowBox[{"\[Pi]", " ", "y"}], ")"}]}], ")"}]}]}]}], TraditionalForm]],
   "InlineMath"]
}], "Text"],

Cell[TextData[{
 "sinc surface: ",
 Cell[BoxData[
  FormBox[
   RowBox[{"z", "=", 
    RowBox[{
     RowBox[{"-", "100"}], " ", 
     RowBox[{"sinc", "(", "x", ")"}], " ", 
     RowBox[{"sinc", "(", "y", ")"}]}]}], TraditionalForm]], "InlineMath"],
 " "
}], "Text"],

Cell[TextData[{
 "exp surface: ",
 Cell[BoxData[
  FormBox[
   RowBox[{"z", "=", 
    RowBox[{
     RowBox[{"-", "100"}], " ", 
     SuperscriptBox["e", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         SuperscriptBox["x", "2"], "2"]}], "-", 
       FractionBox[
        SuperscriptBox["y", "2"], "2"]}]]}]}], TraditionalForm]], "InlineMath"]
}], "Text"],

Cell[TextData[{
 "Rosenbrock surface: ",
 Cell[BoxData[
  FormBox[
   RowBox[{"z", "=", 
    RowBox[{
     RowBox[{"100", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"y", "-", 
         SuperscriptBox["x", "2"]}], ")"}], "2"]}], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "x"}], ")"}], "2"]}]}], TraditionalForm]], 
  "InlineMath"],
 " "
}], "Text"],

Cell["References", "Text"],

Cell[TextData[{
 "[1] K. A. De Jong, ",
 StyleBox["Evolutionary Computation: A Unified Approach",
  FontSlant->"Italic"],
 ", Cambridge, MA: MIT Press, 2006."
}], "Text"],

Cell[TextData[{
 "[2] C. Jacob, ",
 StyleBox["Illustrating Evolutionary Computation with Mathematica",
  FontSlant->"Italic"],
 ", San Francisco: Morgan Kaufmann, 2001."
}], "Text"]
}, Close]],

Cell["THIS NOTEBOOK IS THE SOURCE CODE FROM", "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellMargins->{{48, 10}, {4, 28}},
 CellGroupingRules->{"SectionGrouping", 25},
 CellFrameMargins->{{48, 48}, {6, 5}},
 CellFrameColor->RGBColor[0.87, 0.87, 0.87],
 FontFamily->"Helvetica",
 FontSize->10,
 FontWeight->"Bold",
 FontColor->RGBColor[0.597406, 0, 0.0527047]],

Cell[TextData[{
 "\[NonBreakingSpace]",
 ButtonBox["Daniel de Souza Carvalho",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/author.html?author=Daniel+de+Souza+\
Carvalho"], None},
  ButtonNote->
   "http://demonstrations.wolfram.com/author.html?author=Daniel+de+Souza+\
Carvalho"]
}], "Text",
 CellMargins->{{48, Inherited}, {0, Inherited}},
 FontFamily->"Verdana",
 FontSize->10,
 FontColor->GrayLevel[0.6]],

Cell[TextData[{
 "\"",
 ButtonBox["Global Minimum of a Surface",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/GlobalMinimumOfASurface/"], None},
  ButtonNote->"http://demonstrations.wolfram.com/GlobalMinimumOfASurface/"],
 "\"",
 "\[ParagraphSeparator]\[NonBreakingSpace]",
 ButtonBox["http://demonstrations.wolfram.com/GlobalMinimumOfASurface/",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/GlobalMinimumOfASurface/"], None},
  ButtonNote->"http://demonstrations.wolfram.com/GlobalMinimumOfASurface/"],
 "\[ParagraphSeparator]\[NonBreakingSpace]",
 ButtonBox["Wolfram Demonstrations Project",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/"], None},
  ButtonNote->"http://demonstrations.wolfram.com/"],
 "\[ParagraphSeparator]\[NonBreakingSpace]",
 "Published: ",
 "September 21, 2015"
}], "Text",
 CellMargins->{{48, Inherited}, {0, Inherited}},
 FontFamily->"Verdana",
 FontSize->10,
 FontColor->GrayLevel[0.5]],

Cell[CellGroupData[{

Cell[TextData[{
 "A full-function Wolfram ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " system is required to edit this notebook.\n",
 StyleBox[ButtonBox["GET WOLFRAM MATHEMATICA \[RightGuillemet]",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.wolfram.com/products/mathematica/"], None},
  ButtonNote->"http://www.wolfram.com/products/mathematica/"],
  FontFamily->"Helvetica",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[1, 0.42, 0]]
}], "Text",
 CellFrame->True,
 CellMargins->{{48, 68}, {8, 28}},
 CellFrameMargins->12,
 CellFrameColor->RGBColor[0.87, 0.87, 0.87],
 CellChangeTimes->{3.3750111182355957`*^9},
 ParagraphSpacing->{1., 1.},
 FontFamily->"Verdana",
 FontSize->10,
 FontColor->GrayLevel[0.411765],
 Background->RGBColor[1, 1, 1]],

Cell[TextData[{
 "\[Copyright] ",
 StyleBox[ButtonBox["Wolfram Demonstrations Project & Contributors",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/"], None},
  ButtonNote->"http://demonstrations.wolfram.com/"],
  FontColor->GrayLevel[0.6]],
 "\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
 StyleBox[ButtonBox["Terms of Use",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/termsofuse.html"], None},
  ButtonNote->"http://demonstrations.wolfram.com/termsofuse.html"],
  FontColor->GrayLevel[0.6]],
 "\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
 StyleBox[ButtonBox["Make a new version of this Demonstration \
\[RightGuillemet]",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/participate/upload.jsp?id=\
GlobalMinimumOfASurface"], None},
  ButtonNote->None],
  FontColor->GrayLevel[0.6]]
}], "Text",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellMargins->{{48, 10}, {20, 50}},
 CellFrameMargins->{{6, 0}, {6, 6}},
 CellFrameColor->GrayLevel[0.6],
 FontFamily->"Verdana",
 FontSize->9,
 FontColor->GrayLevel[0.6]]
}, Open  ]]
},
Editable->True,
Saveable->False,
ScreenStyleEnvironment->"Working",
CellInsertionPointCell->None,
WindowSize->{710, 650},
WindowMargins->{{Inherited, Inherited}, {Inherited, 0}},
WindowElements->{
 "StatusArea", "MemoryMonitor", "MagnificationPopUp", "VerticalScrollBar", 
  "MenuBar"},
WindowTitle->"Global Minimum of a Surface - Source",
DockedCells->{},
CellContext->Notebook,
FrontEndVersion->"10.2 for Microsoft Windows (64-bit) (July 7, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[630, 23, 147, 3, 70, "Section"],
Cell[780, 28, 3749, 65, 70, "Section"],
Cell[4532, 95, 15300, 358, 70, "Input",
 InitializationCell->True,
 CellID->348205836],
Cell[19835, 455, 4611, 109, 70, "Input",
 CellID->318102084]
}, Open  ]],
Cell[CellGroupData[{
Cell[24483, 569, 71267, 1232, 70, "Output",
 CellID->1665621307],
Cell[CellGroupData[{
Cell[95775, 1805, 209, 6, 70, "Section"],
Cell[95987, 1813, 157, 3, 70, "Text"]
}, Close]]
}, Open  ]],
Cell[CellGroupData[{
Cell[96192, 1822, 209, 6, 70, "Section"],
Cell[96404, 1830, 68, 1, 70, "Text"],
Cell[96475, 1833, 435, 9, 70, "Text"],
Cell[96913, 1844, 505, 18, 70, "Text"],
Cell[97421, 1864, 265, 10, 70, "Text"],
Cell[97689, 1876, 371, 14, 70, "Text"],
Cell[98063, 1892, 399, 16, 70, "Text"],
Cell[98465, 1910, 26, 0, 70, "Text"],
Cell[98494, 1912, 170, 5, 70, "Text"],
Cell[98667, 1919, 181, 5, 70, "Text"]
}, Close]],
Cell[98862, 1927, 355, 9, 70, "Text",
 CellGroupingRules->{"SectionGrouping", 25}],
Cell[99220, 1938, 448, 14, 70, "Text"],
Cell[99671, 1954, 1033, 27, 70, "Text"],
Cell[CellGroupData[{
Cell[100729, 1985, 793, 24, 70, "Text"],
Cell[101525, 2011, 1195, 33, 70, "Text"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
(* NotebookSignature zS4p855gOmZCUADKiHhKLqoN *)
