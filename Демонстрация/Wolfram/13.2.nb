(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     99516,       2070]
NotebookOptionsPosition[     96744,       2011]
NotebookOutlinePosition[     97197,       2028]
CellTagsIndexPosition[     97154,       2025]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\:041d\:0435\:0447\:0435\:0442\:043a\:0438\:0435 \:043d\:0435\:0439\
\:0440\:043e\:043d\:044b", "Subsection",
 CellChangeTimes->{{3.880191334310543*^9, 
  3.880191343710081*^9}},ExpressionUUID->"e57e0f6b-5d0c-4c05-950e-\
6eb40f72ba9b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x_", ",", "c_"}], "]"}], ":=", 
   RowBox[{"Exp", "[", 
    RowBox[{"-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x", "-", "c"}], ")"}], "^", "2"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f3", "[", 
    RowBox[{"x_", ",", "a_", ",", "b_", ",", " ", "c_"}], "]"}], ":=", 
   RowBox[{"Min", "[", 
    RowBox[{"1", ",", 
     RowBox[{"Max", "[", 
      RowBox[{"0", ",", 
       RowBox[{"c", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"b", "-", 
           RowBox[{"Abs", "[", 
            RowBox[{"x", "-", "a"}], "]"}]}], ")"}], "/", "b"}]}]}], "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8801920792201495`*^9, 3.880192103668548*^9}, {
  3.8801921598687625`*^9, 3.880192160195781*^9}, {3.880192700456682*^9, 
  3.880192700641693*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"5c64d221-67bf-44c3-9b73-d80d53de7923"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"AndNeuron", "[", 
    RowBox[{"x1_", ",", "x2_", ",", "w1_", ",", "w2_"}], "]"}], ":=", 
   RowBox[{"Min", "[", 
    RowBox[{
     RowBox[{"Max", "[", 
      RowBox[{"w1", ",", "x1"}], "]"}], ",", 
     RowBox[{"Max", "[", 
      RowBox[{"w2", ",", "x2"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"OrNeuron", "[", 
    RowBox[{"x1_", ",", "x2_", ",", "w1_", ",", "w2_"}], "]"}], ":=", 
   RowBox[{"Max", "[", 
    RowBox[{
     RowBox[{"Min", "[", 
      RowBox[{"w1", ",", "x1"}], "]"}], ",", 
     RowBox[{"Min", "[", 
      RowBox[{"w2", ",", "x2"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NotNeuron", "[", "x_", "]"}], ":=", 
    RowBox[{"1", "-", "x"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{
  "(*", "\:041c\:0430\:043c\:0434\:0430\:043d\:0438", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ImplNeuron", "[", 
     RowBox[{"x1_", ",", "x2_"}], "]"}], ":=", 
    RowBox[{"Min", "[", 
     RowBox[{"x1", ",", "x2"}], "]"}]}], ";"}], "  ", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "\:041a\:043b\:0438\:043d\:0438", "-", 
    "\:0414\:0430\:0435\:043d\:0441\:0430"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ImplNeuron1", "[", 
     RowBox[{"x1_", ",", "x2_"}], "]"}], ":=", 
    RowBox[{"Max", "[", 
     RowBox[{
      RowBox[{"1", "-", "x1"}], ",", "x2"}], "]"}]}], ";"}], " ", 
  "\[IndentingNewLine]", 
  RowBox[{
  "(*", "\:041b\:0443\:043a\:0430\:0441\:0435\:0432\:0438\:0447\:0430", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ImplNeuron2", "[", 
     RowBox[{"x1_", ",", "x2_"}], "]"}], ":=", 
    RowBox[{"Min", "[", 
     RowBox[{"1", ",", 
      RowBox[{"1", "-", "x1", "+", "x2"}]}], "]"}]}], ";"}], " ", 
  "\[IndentingNewLine]", 
  RowBox[{
  "(*", "\:041b\:0430\:0440\:0441\:0435\:043d\:0430", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ImplNeuron3", "[", 
     RowBox[{"x1_", ",", "x2_"}], "]"}], ":=", 
    RowBox[{"x1", "*", "x2"}]}], ";"}], " "}]}], "Input",
 CellChangeTimes->{
  3.880191841908576*^9, {3.880192477489929*^9, 3.880192481587164*^9}, {
   3.8801929852069693`*^9, 3.88019298907019*^9}, {3.880193063134426*^9, 
   3.8801932743005047`*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"e13c5f5d-34de-46a6-a678-eb53eceff1fb"],

Cell[CellGroupData[{

Cell["\<\

\:041d\:0435\:0447\:0435\:0442\:043a\:0438\:0439 \"\:0418\" \
\:043d\:0435\:0439\:0440\:043e\:043d\
\>", "Subsubsection",
 CellChangeTimes->{{3.8801924961289954`*^9, 
  3.880192512010904*^9}},ExpressionUUID->"fefe1b37-39d2-4013-8bc2-\
77392e5d016c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"xmax", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"x", ",", 
         RowBox[{"-", "1"}]}], "]"}], ",", 
       RowBox[{"f", "[", 
        RowBox[{"x", ",", "1"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"AndNeuron", "[", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"x", ",", 
           RowBox[{"-", "1"}]}], "]"}], ",", 
         RowBox[{"f", "[", 
          RowBox[{"x", ",", "1"}], "]"}], ",", "w1", ",", "w2"}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "xmax"}], ",", "xmax"}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Filling", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"3", "\[Rule]", "Axis"}], "}"}]}]}], "\[IndentingNewLine]", 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"w1", ",", "0", ",", "1", ",", "0.05"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"w2", ",", "0", ",", "1", ",", "0.05"}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.880191439182542*^9, 3.8801916683596497`*^9}, {
  3.880191714063264*^9, 3.880191980149483*^9}, {3.880192045181203*^9, 
  3.8801920517565784`*^9}, {3.880192112359045*^9, 3.8801921346533203`*^9}, {
  3.880192174804617*^9, 3.8801922373731956`*^9}, {3.8801922748853407`*^9, 
  3.8801923818994617`*^9}, {3.880192426555016*^9, 3.8801924356425357`*^9}, {
  3.880192476434869*^9, 3.8801924948739233`*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"a838124d-d38e-4c2b-95ff-b0b08222c66d"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`w1$$ = 0, $CellContext`w2$$ = 0, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`w1$$], 0, 1, 0.05}, {
      Hold[$CellContext`w2$$], 0, 1, 0.05}}, Typeset`size$$ = {
    792., {121., 128.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`w1$$ = 0, $CellContext`w2$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[{
         $CellContext`f[$CellContext`x, -1], 
         $CellContext`f[$CellContext`x, 1], 
         $CellContext`AndNeuron[
          $CellContext`f[$CellContext`x, -1], 
          $CellContext`f[$CellContext`x, 
           1], $CellContext`w1$$, $CellContext`w2$$]}, {$CellContext`x, \
-$CellContext`xmax, $CellContext`xmax}, PlotLegends -> "Expressions", 
        Filling -> {3 -> Axis}], 
      "Specifications" :> {{$CellContext`w1$$, 0, 1, 
         0.05}, {$CellContext`w2$$, 0, 1, 0.05}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{844., {201.2, 207.8}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.880192345259366*^9, 3.8801923469004602`*^9}, {
   3.880192382612503*^9, 3.8801923848706317`*^9}, 3.8801924365985904`*^9, 
   3.8801925691131697`*^9, 3.8802418492978354`*^9, 3.880250503738841*^9, {
   3.8802506099489155`*^9, 3.880250637307481*^9}, {3.9117078663786907`*^9, 
   3.9117078765132704`*^9}},
 CellLabel->"Out[40]=",ExpressionUUID->"9c2f40e2-699c-4755-8011-125529ee5f15"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\

\:041d\:0435\:0447\:0435\:0442\:043a\:0438\:0439 \"\:0418\:041b\:0418\" \
\:043d\:0435\:0439\:0440\:043e\:043d\
\>", "Subsubsection",
 CellChangeTimes->{{3.8801925237705765`*^9, 3.880192529480903*^9}, {
  3.880192575989563*^9, 
  3.880192587136201*^9}},ExpressionUUID->"2616a8e2-b965-46af-b6a2-\
2f4cce639465"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"x", ",", 
         RowBox[{"-", "1"}]}], "]"}], ",", 
       RowBox[{"f", "[", 
        RowBox[{"x", ",", "1"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"OrNeuron", "[", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"x", ",", 
           RowBox[{"-", "1"}]}], "]"}], ",", 
         RowBox[{"f", "[", 
          RowBox[{"x", ",", "1"}], "]"}], ",", "w1", ",", "w2"}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "xmax"}], ",", "xmax"}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Filling", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"3", "\[Rule]", "Axis"}], "}"}]}]}], "\[IndentingNewLine]", 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"w1", ",", "0", ",", "1", ",", "0.05"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"w2", ",", "0", ",", "1", ",", "0.05"}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.8801925179212418`*^9, 3.8801925326570845`*^9}, {
  3.880192577841669*^9, 3.8801925787527213`*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"cda38e02-9231-4502-9818-8bb0522c1976"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`w1$$ = 0, $CellContext`w2$$ = 0, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`w1$$], 0, 1, 0.05}, {
      Hold[$CellContext`w2$$], 0, 1, 0.05}}, Typeset`size$$ = {
    782., {121., 128.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`w1$$ = 0, $CellContext`w2$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[{
         $CellContext`f[$CellContext`x, -1], 
         $CellContext`f[$CellContext`x, 1], 
         $CellContext`OrNeuron[
          $CellContext`f[$CellContext`x, -1], 
          $CellContext`f[$CellContext`x, 
           1], $CellContext`w1$$, $CellContext`w2$$]}, {$CellContext`x, \
-$CellContext`xmax, $CellContext`xmax}, PlotLegends -> "Expressions", 
        Filling -> {3 -> Axis}], 
      "Specifications" :> {{$CellContext`w1$$, 0, 1, 
         0.05}, {$CellContext`w2$$, 0, 1, 0.05}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{834., {179.2, 185.8}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.8801925357502613`*^9, 3.8801925797387776`*^9, 3.880241849463845*^9, {
   3.8802508318466077`*^9, 3.8802508323876386`*^9}, 3.9117078666057034`*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"90c96753-27b5-4c89-a8cd-fc125c73f47f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:041d\:0435\:0447\:0435\:0442\:043a\:0438\:0439 \"\:041d\:0415\" \
\:043d\:0435\:0439\:0440\:043e\:043d", "Subsubsection",
 CellChangeTimes->{{3.880192609139459*^9, 
  3.8801926214451632`*^9}},ExpressionUUID->"c8b85d00-17ba-49c0-a6c1-\
c5e71d03b490"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Plot", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"x", ",", 
        RowBox[{"-", "1"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"f3", "[", 
       RowBox[{"x", ",", "1", ",", "2", ",", "0.5"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"NotNeuron", "[", 
       RowBox[{"f", "[", 
        RowBox[{"x", ",", 
         RowBox[{"-", "1"}]}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"NotNeuron", "[", 
       RowBox[{"NotNeuron", "[", 
        RowBox[{"f3", "[", 
         RowBox[{"x", ",", "1", ",", "2", ",", "0.5"}], "]"}], "]"}], "]"}]}],
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "xmax"}], ",", "xmax"}], "}"}], ",", " ", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Filling", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"3", "\[Rule]", "Axis"}], ",", 
       RowBox[{"4", "\[Rule]", "Axis"}]}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.880192630384674*^9, 3.8801926545930595`*^9}, {
  3.880192710784273*^9, 3.880192752479658*^9}, {3.880192812864112*^9, 
  3.880192836242449*^9}, {3.88025095112243*^9, 3.8802509676213737`*^9}, {
  3.880251030741984*^9, 3.8802510354292517`*^9}, {3.8802510992539024`*^9, 
  3.8802511048682237`*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"b44bf072-9d02-4811-9dea-0881038456b2"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
/q9//ycjcgBh
      "], {{{}, {}, {}, {}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwV1WXUFWUUQOELUgLS3R/dXQIqjZLS3aF0CyoYqCCNqHSKggEGKN2tKBgY
lBIKKihhB+Jzfuz1nr3nLrjcmTkk9RneZljyRCKRDIcN6VIkEhNSJxITUcc8
ELXxIGrhAdyJAaiJTeiPuaiBcikTiY3O25z9nPmdc/Gc+TXnN872zlOobi7r
XIniqRKJ9/jb5qrm5M7x+A999XzxZyCnaysxR3uVlzNvxNe8HT+JAbwaL2Ne
gWL8LbyrvcWrmLcjmXkcbuJZ3sf1vOY5yMFXYLa2hpeN74czvC0/gf68Ki9t
Xo6i/E1s0N7klc3bkDA/hH8xhfd2PY95NrLz5ZilreZl4nviNG/Dv4rfkVfh
pczLUISvw3ptHa9k3opbfCz/B5N5L57bPAvZ+DLM1F7hpeN74hRvzb+M35lX
5iXNS1GYr8U72lpe0bwF//Ex/G88w3vyXOaZyMqXYob2Mi8V3xMn+f38C/Th
lXgJ8xIk8TfwtnYTo7W/8LTWg+c0z0AWvgTTtRNopX2O3lpFXty8GIX463HP
tX8xSvsTT2ndeQ7zdGTmizFN+wottePopVXgxcyLUJC/FvdW+wcjtT8wSevG
s5unIRNfhKnal2ihfYaeWnle1LwQBfircQ+1vzFC+x1Pal15NvNUZOQL8az2
BZprn6KHVo4XMS9Afr4m7pX2F4Zrv+EJrQvPGs83MvAFmKJ9jmbaJ+iuleVv
4E8M037F43pnniWeW9zB52OydhxNtY/RTSvDX8cfGKr9gsf0TjxzPI9Iz+fh
Ge0z3KcdQ1etdOwH/I4h2g1M1DvyTPGcIR1/EU9rn+Je7Si6aKViH+A3DNau
Y4LegWeMZwlp+Qt4SvsETbSP0FkrGe85fsUg7Roe1dvzSfgYjbUP0UkvEe8r
fokdqV3FI3o7/iSOoZF2BB314vHe4UbsUu1nPKy35U/gKBpqH6CDXizeH1yP
nav9FPtQb8Mfx0dooL2P9nrR+N3t7NbOx/Ah6rt2GO1cL8ILIyneQ0zEEdRz
/RDa+kwhvgrXYr9rV2I/6q34BHyAutpBtNEL8pdwFf21y7Hn9JY8Q7xvuJ0/
j0fjz+YlY5/gfX4PP4DWvADfYK5h3oXC5jrO/fHMmfM5V8fu97m7nQdjZ+gV
nJvxs36ncw/6xb/b+aNzrLNF/L7Oe3Ao/v64L/F/BHbgjrivzlrYi0nxuzrT
YC4eid/beRcO4KW4T/EMxM7CYddrOnfjbtf2435zfn29ubp5J5LMtZ374j0w
53W+ghXx7vDy5k34ifflP2AMb87Tx35Aav4cHtYO4S5tH1pp+fhyXEEf7XuM
1pvx8TiIOtpetNTz8mW4jN7aJYzSm/JxOIDa2h600PPw3LHr492Nvep5e8i5
H7V8Zjea+1zOeDcxFvvivui70My1HHwpfkQv7SJG6k34GOyN31LbiaZ6dr4E
P6Cn9h1G6I35aOxBDW0H7tOz8cX4Hj20bzFcbxTfF7tRXduOe/WsfBEuobt2
AcP0hjxd7FCk4nMwUtuFato2NNGy8IW4iG7aeQzVG/C0sUORks/GCG0nqmpb
0VjLzBfgO3TVzmGIXp/fHjsUKfgsDNd2oIq2BY20THw+vkUX7SwG6/V4mtih
uI3PxDBtOyprm9FQy8jn4QI6a99gkF6Xp44diuR8BoZq21BJ24QGWgZeyPwi
8vCXY0dr59FJ+xoD493jqWKnIhmfjiHaVlTUNqJ+vIu8oPkF5OarYmdr59BR
O4MH4z3jKWPnIsGnYbC2BRW091BPS88LmJ9Hrnh3Yx9pZ9FBO40H4t3mKWIn
4xamaoO0zSjP30Vd7X/zk2RD
            "]]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{1896, 1912, 1913, 1886, 1813, 1825, 1799, 1807, 1779, 
            1778, 1777, 1776, 1775, 1774, 1773, 1772, 1771, 1770, 1769, 1798, 
            1768, 1829, 1812, 1846, 1824, 1869, 1841}}], 
           
           PolygonBox[{{1844, 1914, 1915, 1792, 1900, 1873, 1895, 1850, 1868, 
            1891, 1831, 1845, 1864, 1887, 1814, 1826, 1842, 1860, 1883, 1801, 
            1809, 1821, 1838, 1857, 1880, 1791, 1790, 1789, 1788, 1787, 1786, 
            1785, 1784, 1783, 1782, 1781, 1800, 1808, 1820, 1837, 1856, 1879, 
            1780, 1849, 1867, 1890, 1830, 1871, 1893}}], 
           
           PolygonBox[{{1892, 1910, 1911, 1797, 1899, 1872, 1894, 1848, 1866, 
            1889, 1828, 1843, 1862, 1885, 1806, 1819, 1836, 1855, 1878, 1767, 
            1811, 1823, 1840, 1859, 1882, 1796, 1805, 1818, 1835, 1854, 1877, 
            1766, 1765, 1764, 1763, 1762, 1761, 1760, 1759, 1758, 1757, 1795, 
            1804, 1817, 1834, 1853, 1876, 1756, 1810, 1822, 1839, 1858, 1881, 
            1794, 1847, 1865, 1888, 1827, 
            1870}}]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}, Annotation[#, "Charting`Private`Tag$109428#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{868, 999, 976, 957, 940, 927, 918, 869, 870, 871, 872, 873,
            874, 875, 876, 877, 878, 879, 880, 1000, 977, 958, 941, 928, 1009,
            986, 1022}], 
          
          LineBox[{1017, 995, 952, 1013, 990, 972, 919, 1006, 983, 964, 947, 
           935, 881, 1001, 978, 959, 942, 929, 920, 882, 883, 884, 885, 886, 
           887, 888, 889, 890, 891, 1002, 979, 960, 943, 930, 921, 1007, 984, 
           965, 948, 936, 892, 1003, 980, 961, 944, 931, 1010, 987, 968, 953, 
           1014, 991, 973, 1019, 997, 1024, 922}], 
          
          LineBox[{1021, 966, 994, 949, 971, 937, 954, 893, 923, 894, 895, 
           896, 897, 898, 899, 900, 901, 902, 903, 904, 932, 924, 950, 938, 
           1011}], 
          
          LineBox[{969, 1018, 996, 955, 1015, 992, 974, 905, 1004, 981, 962, 
           945, 933, 925, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 
           916, 1005, 982, 963, 946, 934, 926, 1008, 985, 967, 951, 939, 1012,
            989, 970, 956, 1016, 993, 975, 1020, 998, 1025, 917}]}, 
         Annotation[#, "Charting`Private`Tag$109428#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1WfcTmUcB/DbLpS9yc7eeyurpaSyN4WIkCKSVfbMHmVkNMjetEXTqKwK
2aGhZEbf/4vv5/r/fvfz4pxzXec8+Tv1btorSSKR2Jk0kUiTPJGomzKRWJci
kSjNJvlZxuhuywNJTi1dV91P5mYck99gkS47b+juIa3uPnm9uQyb5R6M1SV4
WZeC2rpu8s/m5hyXp7FYl4Npurzcpbtf3mAuyxa5J+N0SRikS0kdXXf5F3ML
fpWn87YuJ9N1+bhbV0/eaC7HVvk5xuuSMliXirrxHOSj5packGeQjvr6Tbry
bJN7MUGXjFd0d3Bf3Ld8zNyKk/JM0tNAv1lXge1ybybqkjNEdyf3x33Kx82t
OSXPIgMN9Vt0FdkhP88kXQpe1aWmXtyX/Ku5Dafl2WSkkX6rrhIfyn2YrEvJ
UF0a6sd9ySfMbTkjzyETD+i36Srzkdw37inuQ39S146z8lwy86B+u64KH8v9
4h7iuvWndO05J88jCw/pd+iq8on8QlxzXKf+tK4Dv8nzycrD+g911fhU7h/X
SDYe8dtH+up8Jr8Y15vKNVmzk4OcNPZ3H/ubGnwuvxTXEX+rP6PryHn5TXLx
qP4TXU12ygPiOuLe9Gd1nbggv0VuHtN/Gu8RX8gDmaJLxbB4b3gk7lU+Z+7M
RXmjXJp35QXyEnMuZsS9WmuQP86BtTJrzHn8XRPzZ/GexR6Zq7JLv8pahC9Z
FPdqrcU38W76far1DnYzPJ6/tTpfc1ecV2slvmJ13Iu1Dt/SOJ699Tf9LmuX
2G9rNX732yZrGd6LZ2atzUL9UmtuZsYeWWtSIM6mtQpr49vi7x43fx7vOrvl
1XJRFsuD4ntkvpMR8Z7zaOy3fN78NH/E94q8NNXvjPecL+XBsUex7/oLumf4
M75H5OMJ/RfxXvOV/Eo8Y/JTgII8Gc843l2+lofENcd76LwVsj4VzzXeTb6R
X43riLOjv6jryl/xzaIwzWKf4l3kW3loXEecnXieum5cijPBvTSPfdE14Dt5
WFwTL+v/0HXn73jeFKFF7KuuIXvk4XGNDNL/qXuWf+RlFKVlnBNdI/bKI5im
S81IXTqaxbOU/zL34LK8nGK0inOie4B98kim69Lwmi59/C+IZytfMvfkX/kd
itNa/53uQfbLrzFDl5bXdRni2x/PXf7b/BxX5HcpQRv9Ht1DfC+/zsw414zS
ZYxvfeyL/I+5F1fl9yhJW/1e3cP8II9ilu5uRusyxbc+9km+bO7NNfn9eIa6
PMzSFaSUrp28L957fpRHM1uXjjG6zPHtj32U/zU/z3V5RTxT3T3M1hWitK69
vN/cmAPyGObo0jNWlyX+F8Q+y1fMfbghr4xnrMvLHF1hyug6yN/He8RBeSxz
dRkYp8tK2zgH8lVzX27KH8Qz1+Vjru5eyuo6yj+YH+OQPI55uoyM12WjXZwL
+Zq5H//FNyv2IL5zzNMVoZyuk/yjuQmH5TVyMd6Wx8vzzZmYIGenfZwZ+br5
BW7Jm+WyvC+vjr2Kbw/z5aKU13WWD5gf54i8Vi7OEnlC/E8wZ2ainIMOcbbk
G+b+3Ja3yOVYIa+JPTQX5E25GBV0XeSD5qb8JK+TS7BUnhj/S8xZmCTnpGOc
Qfmm+UUSbJXLs9K8NvbWXIi35OJU1D0tHzI/wc/yerkky+RJ8gJzVibLuegU
Z1P+z/wSSdgmV+AD87rYc3NhFsglqKR7Rj5sfpJf5A1yKZbLk+WF5mxMkXPT
WXfLOoCkca1+W2VdH9+3+F9hLkll+Yj1KY7G2bVOsU615qGLOZl1g7WUtUr8
FvfNRqrGtVGNrlSnGzXoTk3+B/kCYzg=
           "]]}, Annotation[#, "Charting`Private`Tag$109428#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{1743, 1874, 1851, 1832, 1815, 1802, 1793, 1744, 1745, 1746,
            1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1875, 1852, 
           1833, 1816, 1803, 1884, 1861, 1897}], 
          
          LineBox[{1892, 1870, 1827, 1888, 1865, 1847, 1794, 1881, 1858, 1839,
            1822, 1810, 1756, 1876, 1853, 1834, 1817, 1804, 1795, 1757, 1758, 
           1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1877, 1854, 1835, 
           1818, 1805, 1796, 1882, 1859, 1840, 1823, 1811, 1767, 1878, 1855, 
           1836, 1819, 1806, 1885, 1862, 1843, 1828, 1889, 1866, 1848, 1894, 
           1872, 1899, 1797}], 
          
          LineBox[{1896, 1841, 1869, 1824, 1846, 1812, 1829, 1768, 1798, 1769,
            1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1807, 
           1799, 1825, 1813, 1886}], 
          
          LineBox[{1844, 1893, 1871, 1830, 1890, 1867, 1849, 1780, 1879, 1856,
            1837, 1820, 1808, 1800, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 
           1788, 1789, 1790, 1791, 1880, 1857, 1838, 1821, 1809, 1801, 1883, 
           1860, 1842, 1826, 1814, 1887, 1864, 1845, 1831, 1891, 1868, 1850, 
           1895, 1873, 1900, 1792}]}, 
         Annotation[#, "Charting`Private`Tag$109428#4"]& ], {
         Directive[{
           Opacity[0.2], 
           Hue[0.67, 0.6, 0.6]}], 
         LineBox[{1028, 1029, 1027}], 
         LineBox[{1023, 1030, 988}], 
         LineBox[{1033, 1034, 1032}], 
         LineBox[{1903, 1904, 1902}], 
         LineBox[{1898, 1905, 1863}], 
         LineBox[{1908, 1909, 1907}]}}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, 
     PlotRange -> {{-4, 4}, {0., 1.}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"f", "(", 
         RowBox[{
           TagBox["x", HoldForm], ",", 
           RowBox[{"-", "1"}]}], ")"}], 
       RowBox[{"f3", "(", 
         RowBox[{
           TagBox["x", HoldForm], ",", "1", ",", "2", ",", "0.5`"}], ")"}], 
       RowBox[{"NotNeuron", "(", 
         RowBox[{"f", "(", 
           RowBox[{
             TagBox["x", HoldForm], ",", 
             RowBox[{"-", "1"}]}], ")"}], ")"}], 
       RowBox[{"NotNeuron", "(", 
         RowBox[{"NotNeuron", "(", 
           RowBox[{"f3", "(", 
             RowBox[{
               TagBox["x", HoldForm], ",", "1", ",", "2", ",", "0.5`"}], 
             ")"}], ")"}], ")"}]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.880192655886133*^9, 3.880192753003688*^9, {3.8801928158002796`*^9, 
   3.8801928374025154`*^9}, 3.8802418497488613`*^9, {3.8802509542446084`*^9, 
   3.880250969121459*^9}, 3.8802510363733063`*^9, 3.880251106221301*^9, 
   3.9117078669627237`*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"2055ab0e-a68b-420f-a6b2-fbf1d2468112"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:041d\:0435\:0439\:0440\:043e\:043d \"\:0418\:043c\:043f\:043b\:0438\
\:043a\:0430\:0446\:0438\:044f\"", "Subsubsection",
 CellChangeTimes->{{3.880192878313855*^9, 3.880192896254881*^9}, {
  3.880193302803135*^9, 
  3.880193307539406*^9}},ExpressionUUID->"e9af800b-8ea6-4750-9129-\
b701a7b11fe5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Plot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"x", ",", "c1"}], "]"}], ",", 
         RowBox[{"f", "[", 
          RowBox[{"x", ",", "c2"}], "]"}], ",", 
         RowBox[{"ImplNeuron", "[", 
          RowBox[{
           RowBox[{"f", "[", 
            RowBox[{"x", ",", "c1"}], "]"}], ",", 
           RowBox[{"f", "[", 
            RowBox[{"x", ",", "c2"}], "]"}]}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "xmax"}], ",", "xmax"}], "}"}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Filling", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"3", "\[Rule]", "Axis"}], "}"}]}]}], "\[IndentingNewLine]", 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"x", ",", "c1"}], "]"}], ",", 
         RowBox[{"f", "[", 
          RowBox[{"x", ",", "c2"}], "]"}], ",", 
         RowBox[{"ImplNeuron3", "[", 
          RowBox[{
           RowBox[{"f", "[", 
            RowBox[{"x", ",", "c1"}], "]"}], ",", 
           RowBox[{"f", "[", 
            RowBox[{"x", ",", "c2"}], "]"}]}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "xmax"}], ",", "xmax"}], "}"}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Filling", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"3", "\[Rule]", "Axis"}], "}"}]}]}], "\[IndentingNewLine]", 
      "]"}]}], "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"c1", ",", 
     RowBox[{"-", "2"}], ",", "2", ",", "0.05"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"c2", ",", 
     RowBox[{"-", "2"}], ",", "2", ",", "0.05"}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.880192907622532*^9, 3.8801929081995645`*^9}, {
  3.880192945985726*^9, 3.8801929482388544`*^9}, {3.880193017582821*^9, 
  3.8801930330377045`*^9}, {3.8801933325488358`*^9, 3.8801933346039534`*^9}, {
  3.88024204834122*^9, 3.8802421627077613`*^9}, {3.8802421928594856`*^9, 
  3.8802422249243197`*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"b3d44317-a702-41e4-a269-3df04fc34889"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`c1$$ = -2, $CellContext`c2$$ = -2, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`c1$$], -2, 2, 0.05}, {
      Hold[$CellContext`c2$$], -2, 2, 0.05}}, Typeset`size$$ = {
    1142.6000000000001`, {63., 68.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`c1$$ = -2, $CellContext`c2$$ = -2}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> {
        Plot[{
          $CellContext`f[$CellContext`x, $CellContext`c1$$], 
          $CellContext`f[$CellContext`x, $CellContext`c2$$], 
          $CellContext`ImplNeuron[
           $CellContext`f[$CellContext`x, $CellContext`c1$$], 
           $CellContext`f[$CellContext`x, $CellContext`c2$$]]}, \
{$CellContext`x, -$CellContext`xmax, $CellContext`xmax}, PlotLegends -> 
         "Expressions", Filling -> {3 -> Axis}], 
        Plot[{
          $CellContext`f[$CellContext`x, $CellContext`c1$$], 
          $CellContext`f[$CellContext`x, $CellContext`c2$$], 
          $CellContext`ImplNeuron3[
           $CellContext`f[$CellContext`x, $CellContext`c1$$], 
           $CellContext`f[$CellContext`x, $CellContext`c2$$]]}, \
{$CellContext`x, -$CellContext`xmax, $CellContext`xmax}, PlotLegends -> 
         "Expressions", Filling -> {3 -> Axis}]}, 
      "Specifications" :> {{$CellContext`c1$$, -2, 2, 
         0.05}, {$CellContext`c2$$, -2, 2, 0.05}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{1195., {120.2, 126.8}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.8801929152949705`*^9, 3.8801929488018866`*^9, 3.880192996315604*^9, 
   3.8801930362568893`*^9, {3.880193316608924*^9, 3.880193335383998*^9}, 
   3.8802418498458667`*^9, {3.8802420532695017`*^9, 3.8802420822481594`*^9}, {
   3.880242147541894*^9, 3.8802421635018067`*^9}, {3.880242199066841*^9, 
   3.8802422257443666`*^9}, 3.880251133668871*^9, 3.9117078670187273`*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"a494d632-3293-4abb-a424-2c1d794f5478"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"x", ",", "c1"}], "]"}], ",", 
       RowBox[{"f", "[", 
        RowBox[{"x", ",", "c2"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"NotNeuron", "[", 
        RowBox[{"ImplNeuron1", "[", 
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{"x", ",", "c1"}], "]"}], ",", 
          RowBox[{"f", "[", 
           RowBox[{"x", ",", "c2"}], "]"}]}], "]"}], "]"}], ","}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"ImplNeuron1", "[", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"x", ",", "c1"}], "]"}], ",", 
         RowBox[{"f", "[", 
          RowBox[{"x", ",", "c2"}], "]"}]}], "]"}], "*)"}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "xmax"}], ",", "xmax"}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Filling", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"3", "\[Rule]", "Axis"}], "}"}]}]}], "\[IndentingNewLine]", 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"c1", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "0.05"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"c2", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "0.05"}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{
  3.8801933593243675`*^9, {3.880193395596442*^9, 3.8801934578600035`*^9}, {
   3.880251465465849*^9, 3.8802514738103256`*^9}, {3.8802515169627943`*^9, 
   3.8802515640334864`*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"38864289-a53a-4556-8ba7-d344971f2d09"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`c1$$ = -1, $CellContext`c2$$ = -1, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`c1$$], -1, 1, 0.05}, {
      Hold[$CellContext`c2$$], -1, 1, 0.05}}, Typeset`size$$ = {
    833., {121., 128.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`c1$$ = -1, $CellContext`c2$$ = -1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[{
         $CellContext`f[$CellContext`x, $CellContext`c1$$], 
         $CellContext`f[$CellContext`x, $CellContext`c2$$], 
         $CellContext`NotNeuron[
          $CellContext`ImplNeuron1[
           $CellContext`f[$CellContext`x, $CellContext`c1$$], 
           $CellContext`f[$CellContext`x, $CellContext`c2$$]]], 
         Null}, {$CellContext`x, -$CellContext`xmax, $CellContext`xmax}, 
        PlotLegends -> "Expressions", Filling -> {3 -> Axis}], 
      "Specifications" :> {{$CellContext`c1$$, -1, 1, 
         0.05}, {$CellContext`c2$$, -1, 1, 0.05}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{885., {179.2, 185.8}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.8801934470033827`*^9, 3.8801934584560375`*^9}, 
   3.880241850008876*^9, {3.8802514682440076`*^9, 3.88025147440436*^9}, 
   3.8802515223161*^9, {3.8802515584261656`*^9, 3.880251564901536*^9}, 
   3.9117078672567406`*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"d0f51b05-30d0-46a8-9847-4752a7e52968"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:041d\:0435\:0447\:0435\:0442\:043a\:0438\:0439 \:0432\:044b\:0432\
\:043e\:0434", "Subsection",
 CellChangeTimes->{{3.880193671210206*^9, 
  3.8801936831898913`*^9}},ExpressionUUID->"ed6f867b-b61f-497b-bdd0-\
ce54288d0e36"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Tn", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{"Min", "[", 
    RowBox[{"x", ",", "y"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Sn", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{"Max", "[", 
    RowBox[{"x", ",", "y"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"A1", "[", 
    RowBox[{"x_", ",", "w_"}], "]"}], ":=", 
   RowBox[{"f", "[", 
    RowBox[{"x", ",", "w"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"A2", "[", 
    RowBox[{"x_", ",", "w_"}], "]"}], ":=", 
   RowBox[{"f", "[", 
    RowBox[{"x", ",", "w"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"B1", "[", 
    RowBox[{"x_", ",", "w_"}], "]"}], ":=", 
   RowBox[{"f", "[", 
    RowBox[{"x", ",", "w"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"B2", "[", 
     RowBox[{"x_", ",", "w_"}], "]"}], ":=", 
    RowBox[{"f", "[", 
     RowBox[{"x", ",", "w"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Net1", "[", 
     RowBox[{
     "x_", ",", "y_", ",", "w11_", ",", "w12_", ",", "w13_", ",", "w14_", ",",
       " ", "w21_", ",", " ", "w22_", ",", "w23_", ",", "w24_"}], "]"}], ":=",
     "\[IndentingNewLine]", 
    RowBox[{"NotNeuron", "[", "\[IndentingNewLine]", 
     RowBox[{"Sn", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Tn", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"w21", "*", 
          RowBox[{"A1", "[", 
           RowBox[{"x", ",", "w11"}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"w22", "*", 
          RowBox[{"B1", "[", 
           RowBox[{"y", ",", "w13"}], "]"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Tn", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"w23", "*", 
          RowBox[{"A2", "[", 
           RowBox[{"x", ",", "w12"}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"w24", "*", 
          RowBox[{"B2", "[", 
           RowBox[{"y", ",", "w14"}], "]"}]}]}], "]"}]}], 
      "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8801935120821047`*^9, 3.8801935125231295`*^9}, {
   3.8801936669699636`*^9, 3.880193755505028*^9}, {3.880193789201955*^9, 
   3.880193846880254*^9}, {3.8801938785200634`*^9, 3.8801940133757772`*^9}, {
   3.880194083046762*^9, 3.8801945798351765`*^9}, {3.8801946446598845`*^9, 
   3.8801947066434298`*^9}, {3.8801947710761147`*^9, 3.880194833961712*^9}, 
   3.8801949684484043`*^9},
 CellLabel->"In[45]:=",ExpressionUUID->"dade0e2d-c76b-4444-ab00-c2274e9cfa80"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"net1", "=", 
   RowBox[{"Net1", "[", 
    RowBox[{
    "x", ",", "y", ",", "w11", ",", "w12", ",", "w13", ",", "w14", ",", " ", 
     "w21", ",", " ", "w22", ",", "w23", ",", "w24"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Plot3D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Net1", "[", 
          RowBox[{
          "x", ",", "y", ",", "w11", ",", "w12", ",", "w13", ",", "w14", ",", 
           " ", "w21", ",", " ", "w22", ",", "w23", ",", "w24"}], "]"}], ",", 
         "alpha"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "xmax"}], ",", "xmax"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"y", ",", 
         RowBox[{"-", "xmax"}], ",", "xmax"}], "}"}]}], " ", "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"RegionPlot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Net1", "[", 
         RowBox[{
         "x", ",", "y", ",", "w11", ",", "w12", ",", "w13", ",", "w14", ",", 
          " ", "w21", ",", " ", "w22", ",", "w23", ",", "w24"}], "]"}], ">", 
        "alpha"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "xmax"}], ",", "xmax"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"y", ",", 
         RowBox[{"-", "xmax"}], ",", "xmax"}], "}"}]}], "]"}]}], 
    "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"w11", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "0.05"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"w12", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "0.05"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"w13", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "0.05"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"w14", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "0.05"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"w21", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "0.05"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"w22", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "0.05"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"w23", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "0.05"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"w24", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "0.05"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"alpha", ",", "0", ",", "2", ",", "0.05"}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.880194843707269*^9, 3.880194886577721*^9}, {
   3.8801949239448586`*^9, 3.88019493113627*^9}, {3.880194970089498*^9, 
   3.880194970529523*^9}, {3.880195007752652*^9, 3.8801950181122446`*^9}, {
   3.880195117376922*^9, 3.8801951202480865`*^9}, {3.8801951529779587`*^9, 
   3.880195198551565*^9}, {3.8801952314634476`*^9, 3.8801952319674764`*^9}, {
   3.8801952692076063`*^9, 3.880195335719411*^9}, {3.880195377702812*^9, 
   3.880195381006001*^9}, 3.8801954264385996`*^9, {3.880241907933189*^9, 
   3.880241951220665*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"015ff523-3310-4a82-a31b-cefca83dae79"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`alpha$$ = 
    0, $CellContext`w11$$ = -1, $CellContext`w12$$ = -1, $CellContext`w13$$ = \
-1, $CellContext`w14$$ = -1, $CellContext`w21$$ = -1, $CellContext`w22$$ = \
-1, $CellContext`w23$$ = -1, $CellContext`w24$$ = -1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`w11$$], -1, 1, 0.05}, {
      Hold[$CellContext`w12$$], -1, 1, 0.05}, {
      Hold[$CellContext`w13$$], -1, 1, 0.05}, {
      Hold[$CellContext`w14$$], -1, 1, 0.05}, {
      Hold[$CellContext`w21$$], -1, 1, 0.05}, {
      Hold[$CellContext`w22$$], -1, 1, 0.05}, {
      Hold[$CellContext`w23$$], -1, 1, 0.05}, {
      Hold[$CellContext`w24$$], -1, 1, 0.05}, {
      Hold[$CellContext`alpha$$], 0, 2, 0.05}}, Typeset`size$$ = {
    425.6, {97., 102.13899999999998`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`alpha$$ = 
        0, $CellContext`w11$$ = -1, $CellContext`w12$$ = -1, \
$CellContext`w13$$ = -1, $CellContext`w14$$ = -1, $CellContext`w21$$ = -1, \
$CellContext`w22$$ = -1, $CellContext`w23$$ = -1, $CellContext`w24$$ = -1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> {
        Plot3D[{
          $CellContext`Net1[$CellContext`x, $CellContext`y, \
$CellContext`w11$$, $CellContext`w12$$, $CellContext`w13$$, \
$CellContext`w14$$, $CellContext`w21$$, $CellContext`w22$$, \
$CellContext`w23$$, $CellContext`w24$$], $CellContext`alpha$$}, \
{$CellContext`x, -$CellContext`xmax, $CellContext`xmax}, {$CellContext`y, \
-$CellContext`xmax, $CellContext`xmax}], 
        RegionPlot[$CellContext`Net1[$CellContext`x, $CellContext`y, \
$CellContext`w11$$, $CellContext`w12$$, $CellContext`w13$$, \
$CellContext`w14$$, $CellContext`w21$$, $CellContext`w22$$, \
$CellContext`w23$$, $CellContext`w24$$] > $CellContext`alpha$$, \
{$CellContext`x, -$CellContext`xmax, $CellContext`xmax}, {$CellContext`y, \
-$CellContext`xmax, $CellContext`xmax}]}, 
      "Specifications" :> {{$CellContext`w11$$, -1, 1, 
         0.05}, {$CellContext`w12$$, -1, 1, 0.05}, {$CellContext`w13$$, -1, 1,
          0.05}, {$CellContext`w14$$, -1, 1, 0.05}, {$CellContext`w21$$, -1, 
         1, 0.05}, {$CellContext`w22$$, -1, 1, 0.05}, {$CellContext`w23$$, -1,
          1, 0.05}, {$CellContext`w24$$, -1, 1, 0.05}, {$CellContext`alpha$$, 
         0, 2, 0.05}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{748., {129.2, 135.8}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.880194935927544*^9, 3.8801949721856174`*^9, 3.8801950196863346`*^9, {
   3.880195109750486*^9, 3.88019512135815*^9}, 3.8801951994336157`*^9, 
   3.8801952325315084`*^9, {3.88019529811526*^9, 3.880195344867934*^9}, 
   3.8801953818150473`*^9, 3.880195427218644*^9, 3.8802418501908865`*^9, {
   3.8802419305994854`*^9, 3.880241952111716*^9}, 3.880251760220708*^9, 
   3.911707867464753*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"ecf353a2-1032-40a2-8a17-575155146d1a"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1536., 616.8},
WindowMargins->{{1530.6, Automatic}, {Automatic, -5.3999999999999995`}},
Magnification:>1.1 Inherited,
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (June 9, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"28c66e06-5910-4a44-8711-aac900c79b1b"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 241, 4, 58, "Subsection",ExpressionUUID->"e57e0f6b-5d0c-4c05-950e-6eb40f72ba9b"],
Cell[824, 28, 995, 29, 77, "Input",ExpressionUUID->"5c64d221-67bf-44c3-9b73-d80d53de7923"],
Cell[1822, 59, 2484, 76, 245, "Input",ExpressionUUID->"e13c5f5d-34de-46a6-a678-eb53eceff1fb"],
Cell[CellGroupData[{
Cell[4331, 139, 260, 7, 77, "Subsubsection",ExpressionUUID->"fefe1b37-39d2-4013-8bc2-77392e5d016c"],
Cell[CellGroupData[{
Cell[4616, 150, 1919, 44, 305, "Input",ExpressionUUID->"a838124d-d38e-4c2b-95ff-b0b08222c66d"],
Cell[6538, 196, 2358, 47, 429, "Output",ExpressionUUID->"9c2f40e2-699c-4755-8011-125529ee5f15"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[8945, 249, 321, 8, 77, "Subsubsection",ExpressionUUID->"2616a8e2-b965-46af-b6a2-2f4cce639465"],
Cell[CellGroupData[{
Cell[9291, 261, 1547, 38, 284, "Input",ExpressionUUID->"cda38e02-9231-4502-9818-8bb0522c1976"],
Cell[10841, 301, 2204, 45, 385, "Output",ExpressionUUID->"90c96753-27b5-4c89-a8cd-fc125c73f47f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[13094, 352, 257, 4, 49, "Subsubsection",ExpressionUUID->"c8b85d00-17ba-49c0-a6c1-c5e71d03b490"],
Cell[CellGroupData[{
Cell[13376, 360, 1640, 38, 263, "Input",ExpressionUUID->"b44bf072-9d02-4811-9dea-0881038456b2"],
Cell[15019, 400, 61046, 1114, 269, "Output",ExpressionUUID->"2055ab0e-a68b-420f-a6b2-fbf1d2468112"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[76114, 1520, 303, 5, 49, "Subsubsection",ExpressionUUID->"e9af800b-8ea6-4750-9129-b701a7b11fe5"],
Cell[CellGroupData[{
Cell[76442, 1529, 2717, 68, 368, "Input",ExpressionUUID->"b3d44317-a702-41e4-a269-3df04fc34889"],
Cell[79162, 1599, 2908, 56, 267, "Output",ExpressionUUID->"a494d632-3293-4abb-a424-2c1d794f5478"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82107, 1660, 1924, 49, 305, "Input",ExpressionUUID->"38864289-a53a-4556-8ba7-d344971f2d09"],
Cell[84034, 1711, 2350, 46, 385, "Output",ExpressionUUID->"d0f51b05-30d0-46a8-9847-4752a7e52968"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[86445, 1764, 231, 4, 58, "Subsection",ExpressionUUID->"ed6f867b-b61f-497b-bdd0-ce54288d0e36"],
Cell[86679, 1770, 2817, 75, 434, "Input",ExpressionUUID->"dade0e2d-c76b-4444-ab00-c2274e9cfa80"],
Cell[CellGroupData[{
Cell[89521, 1849, 3354, 86, 347, "Input",ExpressionUUID->"015ff523-3310-4a82-a31b-cefca83dae79"],
Cell[92878, 1937, 3838, 70, 285, "Output",ExpressionUUID->"ecf353a2-1032-40a2-8a17-575155146d1a"]
}, Open  ]]
}, Open  ]]
}
]
*)

