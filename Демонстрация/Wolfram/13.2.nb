(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     98204,       2051]
NotebookOptionsPosition[     95482,       1993]
NotebookOutlinePosition[     95885,       2009]
CellTagsIndexPosition[     95842,       2006]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\:041d\:0435\:0447\:0435\:0442\:043a\:0438\:0435 \:043d\:0435\:0439\
\:0440\:043e\:043d\:044b", "Subsection",
 CellChangeTimes->{{3.880191334310543*^9, 
  3.880191343710081*^9}},ExpressionUUID->"e57e0f6b-5d0c-4c05-950e-\
6eb40f72ba9b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x_", ",", "c_"}], "]"}], ":=", 
   RowBox[{"Exp", "[", 
    RowBox[{"-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x", "-", "c"}], ")"}], "^", "2"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f3", "[", 
    RowBox[{"x_", ",", "a_", ",", "b_", ",", " ", "c_"}], "]"}], ":=", 
   RowBox[{"Min", "[", 
    RowBox[{"1", ",", 
     RowBox[{"Max", "[", 
      RowBox[{"0", ",", 
       RowBox[{"c", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"b", "-", 
           RowBox[{"Abs", "[", 
            RowBox[{"x", "-", "a"}], "]"}]}], ")"}], "/", "b"}]}]}], "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8801920792201495`*^9, 3.880192103668548*^9}, {
  3.8801921598687625`*^9, 3.880192160195781*^9}, {3.880192700456682*^9, 
  3.880192700641693*^9}},
 CellLabel->
  "In[416]:=",ExpressionUUID->"5c64d221-67bf-44c3-9b73-d80d53de7923"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"AndNeuron", "[", 
    RowBox[{"x1_", ",", "x2_", ",", "w1_", ",", "w2_"}], "]"}], ":=", 
   RowBox[{"Min", "[", 
    RowBox[{
     RowBox[{"Max", "[", 
      RowBox[{"w1", ",", "x1"}], "]"}], ",", 
     RowBox[{"Max", "[", 
      RowBox[{"w2", ",", "x2"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"OrNeuron", "[", 
    RowBox[{"x1_", ",", "x2_", ",", "w1_", ",", "w2_"}], "]"}], ":=", 
   RowBox[{"Max", "[", 
    RowBox[{
     RowBox[{"Min", "[", 
      RowBox[{"w1", ",", "x1"}], "]"}], ",", 
     RowBox[{"Min", "[", 
      RowBox[{"w2", ",", "x2"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NotNeuron", "[", "x_", "]"}], ":=", 
    RowBox[{"1", "-", "x"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{
  "(*", "\:041c\:0430\:043c\:0434\:0430\:043d\:0438", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ImplNeuron", "[", 
     RowBox[{"x1_", ",", "x2_"}], "]"}], ":=", 
    RowBox[{"Min", "[", 
     RowBox[{"x1", ",", "x2"}], "]"}]}], ";"}], "  ", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "\:041a\:043b\:0438\:043d\:0438", "-", 
    "\:0414\:0430\:0435\:043d\:0441\:0430"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ImplNeuron1", "[", 
     RowBox[{"x1_", ",", "x2_"}], "]"}], ":=", 
    RowBox[{"Max", "[", 
     RowBox[{
      RowBox[{"1", "-", "x1"}], ",", "x2"}], "]"}]}], ";"}], " ", 
  "\[IndentingNewLine]", 
  RowBox[{
  "(*", "\:041b\:0443\:043a\:0430\:0441\:0435\:0432\:0438\:0447\:0430", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ImplNeuron2", "[", 
     RowBox[{"x1_", ",", "x2_"}], "]"}], ":=", 
    RowBox[{"Min", "[", 
     RowBox[{"1", ",", 
      RowBox[{"1", "-", "x1", "+", "x2"}]}], "]"}]}], ";"}], " ", 
  "\[IndentingNewLine]", 
  RowBox[{
  "(*", "\:041b\:0430\:0440\:0441\:0435\:043d\:0430", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ImplNeuron3", "[", 
     RowBox[{"x1_", ",", "x2_"}], "]"}], ":=", 
    RowBox[{"x1", "*", "x2"}]}], ";"}], " "}]}], "Input",
 CellChangeTimes->{
  3.880191841908576*^9, {3.880192477489929*^9, 3.880192481587164*^9}, {
   3.8801929852069693`*^9, 3.88019298907019*^9}, {3.880193063134426*^9, 
   3.8801932743005047`*^9}},
 CellLabel->
  "In[435]:=",ExpressionUUID->"e13c5f5d-34de-46a6-a678-eb53eceff1fb"],

Cell[CellGroupData[{

Cell["\<\

\:041d\:0435\:0447\:0435\:0442\:043a\:0438\:0439 \"\:0418\" \
\:043d\:0435\:0439\:0440\:043e\:043d\
\>", "Subsubsection",
 CellChangeTimes->{{3.8801924961289954`*^9, 
  3.880192512010904*^9}},ExpressionUUID->"fefe1b37-39d2-4013-8bc2-\
77392e5d016c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"xmax", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"x", ",", 
         RowBox[{"-", "1"}]}], "]"}], ",", 
       RowBox[{"f", "[", 
        RowBox[{"x", ",", "1"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"AndNeuron", "[", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"x", ",", 
           RowBox[{"-", "1"}]}], "]"}], ",", 
         RowBox[{"f", "[", 
          RowBox[{"x", ",", "1"}], "]"}], ",", "w1", ",", "w2"}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "xmax"}], ",", "xmax"}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Filling", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"3", "\[Rule]", "Axis"}], "}"}]}]}], "\[IndentingNewLine]", 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"w1", ",", "0", ",", "1", ",", "0.05"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"w2", ",", "0", ",", "1", ",", "0.05"}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.880191439182542*^9, 3.8801916683596497`*^9}, {
  3.880191714063264*^9, 3.880191980149483*^9}, {3.880192045181203*^9, 
  3.8801920517565784`*^9}, {3.880192112359045*^9, 3.8801921346533203`*^9}, {
  3.880192174804617*^9, 3.8801922373731956`*^9}, {3.8801922748853407`*^9, 
  3.8801923818994617`*^9}, {3.880192426555016*^9, 3.8801924356425357`*^9}, {
  3.880192476434869*^9, 3.8801924948739233`*^9}},
 CellLabel->
  "In[409]:=",ExpressionUUID->"a838124d-d38e-4c2b-95ff-b0b08222c66d"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`w1$$ = 0, $CellContext`w2$$ = 0, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`w1$$], 0, 1, 0.05}, {
      Hold[$CellContext`w2$$], 0, 1, 0.05}}, Typeset`size$$ = {
    732., {111., 115.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`w1$$ = 0, $CellContext`w2$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[{
         $CellContext`f[$CellContext`x, -1], 
         $CellContext`f[$CellContext`x, 1], 
         $CellContext`AndNeuron[
          $CellContext`f[$CellContext`x, -1], 
          $CellContext`f[$CellContext`x, 
           1], $CellContext`w1$$, $CellContext`w2$$]}, {$CellContext`x, \
-$CellContext`xmax, $CellContext`xmax}, PlotLegends -> "Expressions", 
        Filling -> {3 -> Axis}], 
      "Specifications" :> {{$CellContext`w1$$, 0, 1, 
         0.05}, {$CellContext`w2$$, 0, 1, 0.05}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{780., {164.8, 170.2}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.880192345259366*^9, 3.8801923469004602`*^9}, {
   3.880192382612503*^9, 3.8801923848706317`*^9}, 3.8801924365985904`*^9, 
   3.8801925691131697`*^9},
 CellLabel->
  "Out[410]=",ExpressionUUID->"6dc0cd43-1ad9-4264-92fa-7b09d06888f5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\

\:041d\:0435\:0447\:0435\:0442\:043a\:0438\:0439 \"\:0418\:041b\:0418\" \
\:043d\:0435\:0439\:0440\:043e\:043d\
\>", "Subsubsection",
 CellChangeTimes->{{3.8801925237705765`*^9, 3.880192529480903*^9}, {
  3.880192575989563*^9, 
  3.880192587136201*^9}},ExpressionUUID->"2616a8e2-b965-46af-b6a2-\
2f4cce639465"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"x", ",", 
         RowBox[{"-", "1"}]}], "]"}], ",", 
       RowBox[{"f", "[", 
        RowBox[{"x", ",", "1"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"OrNeuron", "[", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"x", ",", 
           RowBox[{"-", "1"}]}], "]"}], ",", 
         RowBox[{"f", "[", 
          RowBox[{"x", ",", "1"}], "]"}], ",", "w1", ",", "w2"}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "xmax"}], ",", "xmax"}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Filling", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"3", "\[Rule]", "Axis"}], "}"}]}]}], "\[IndentingNewLine]", 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"w1", ",", "0", ",", "1", ",", "0.05"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"w2", ",", "0", ",", "1", ",", "0.05"}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.8801925179212418`*^9, 3.8801925326570845`*^9}, {
  3.880192577841669*^9, 3.8801925787527213`*^9}},
 CellLabel->
  "In[411]:=",ExpressionUUID->"cda38e02-9231-4502-9818-8bb0522c1976"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`w1$$ = 0, $CellContext`w2$$ = 0, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`w1$$], 0, 1, 0.05}, {
      Hold[$CellContext`w2$$], 0, 1, 0.05}}, Typeset`size$$ = {
    723., {111., 115.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`w1$$ = 0, $CellContext`w2$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[{
         $CellContext`f[$CellContext`x, -1], 
         $CellContext`f[$CellContext`x, 1], 
         $CellContext`OrNeuron[
          $CellContext`f[$CellContext`x, -1], 
          $CellContext`f[$CellContext`x, 
           1], $CellContext`w1$$, $CellContext`w2$$]}, {$CellContext`x, \
-$CellContext`xmax, $CellContext`xmax}, PlotLegends -> "Expressions", 
        Filling -> {3 -> Axis}], 
      "Specifications" :> {{$CellContext`w1$$, 0, 1, 
         0.05}, {$CellContext`w2$$, 0, 1, 0.05}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{771., {164.8, 170.2}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.8801925357502613`*^9, 3.8801925797387776`*^9},
 CellLabel->
  "Out[411]=",ExpressionUUID->"74034066-5a6a-4f81-9624-88e13f1ab23b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:041d\:0435\:0447\:0435\:0442\:043a\:0438\:0439 \"\:041d\:0415\" \
\:043d\:0435\:0439\:0440\:043e\:043d", "Subsubsection",
 CellChangeTimes->{{3.880192609139459*^9, 
  3.8801926214451632`*^9}},ExpressionUUID->"c8b85d00-17ba-49c0-a6c1-\
c5e71d03b490"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Plot", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"x", ",", 
        RowBox[{"-", "1"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"f3", "[", 
       RowBox[{"x", ",", "1", ",", "2", ",", "0.5"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"NotNeuron", "[", 
       RowBox[{"f", "[", 
        RowBox[{"x", ",", 
         RowBox[{"-", "1"}]}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"NotNeuron", "[", 
       RowBox[{"f3", "[", 
        RowBox[{"x", ",", "1", ",", "2", ",", "0.5"}], "]"}], "]"}]}], 
     "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "xmax"}], ",", "xmax"}], "}"}], ",", " ", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Filling", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"3", "\[Rule]", "Axis"}], ",", 
       RowBox[{"4", "\[Rule]", "Axis"}]}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.880192630384674*^9, 3.8801926545930595`*^9}, {
  3.880192710784273*^9, 3.880192752479658*^9}, {3.880192812864112*^9, 
  3.880192836242449*^9}},
 CellLabel->
  "In[419]:=",ExpressionUUID->"b44bf072-9d02-4811-9dea-0881038456b2"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
Rt2r2hwIIsy47+r5BbvCP5R1L9aClHnvntKWSmhOrSKmC7bB68e+aY4JpRB1
+f66yv1eqIr2UFOSy4Xftwhdax1D0GMb83n8ZAp43Y5ffdk7DoVMCXGc116C
JVeSSOSuKbj7MHFtcOUR+Dbus81Mn4GExs2DD4w8oCDm49adMnPQ8S5iG2e8
PRQrFV64374Apg3TMvu2GsOM3pmyJqtlOKw59e0bkwYsyDsVC29bA89OR/V0
kIMS/7ixGAMCmhJ7g1JqIgicroGZv8Pp0IoE1oN3hRkA/5mJBI/To2ltrsry
6iMI0SrerECOEVWNOvDdfLkOmfzMyTAQwoRmjooxK5dnI2cX9cT3DDKjfV8N
1J2OP0OMbpr86tvNiv55+zqbueU2UmTwVmfbfTY0Y+sof172ecQ6Xa+l6Ds7
qnqu/m5AmDLCz+kiyMzCiW7q4l46+Hkbsre+TeKnBRd68dzRouGGOVJpYttJ
swQi+gN93Thp3EhqXB4e2nWWG3eXzHZ/cE8aTge9vyfLRMTjHxVdV6hEoWEk
VKouhxOfeR/y6fv+M6BZlPjz3U0O3Hy3/rcnSnbAY6vXICbJjp/WpM/d1ucG
PV1bRw62sOKPQi6ui10IhLT+/KeFD1jwc/3hhljhc/DWrIydl2bGjxBDTSpJ
yfCm/Y7k7S5GXKFRhX/3kWzIW1kHx1AGXG2o+FPcBwyaJpLs11F6vHX7KYAv
FSCmodf3xm0ec/zV2xNbPALRkfLTXr2z2NOu+PN/d00A4wImo605jS3tHCzc
ZkaBhaUdfI8MKBhJl3nFcIUCVfuIEsbso9hcyYPM4mEyVDRWpa+96scK6W11
Cg6MQ2bzouqbQ+VQfqHZ4q1THUQdz3k+wdIEZsoFF08PlwPR6LtFV2gXSDbd
SRV6WATPPgtv45YfAJuUoNo4yUxYWet9/erCKHz5cnRLs2U8eG09U2n4ggJ9
JxGSdX4EzMyJnG+6Og1PsTDNLlY/+LZa0BwyPgvEsOudohPOMGIoGcb2YB6+
r93d1mVqDQRW/T1ndi7BdP/f8A4WfZBMqX+aXbICXcNJE6K6ynA0eVN3r8U6
qOdf0fC3lwBly0VB/WkCKplQUsJnwQ2r/Gc23CM9qn+vTKhZaA4pXgh+cSiE
AeVKa30u/qAD8TaYUR7uYkSXGkZn7jp/QZRPDXj2KTOj+zcLZfVuT0LebVHS
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
WM+JYyJuo2GTWKIyWfXVXwq86ZfaububgrnJC+l1b1zPK3TLiYdbJ7FiRgcs
Z0N3/tzx2eXKJNbf3mUU/s/75RSxVJUnFMwp5mnyzQ2/79qkaWG5xI1K9puh
tRczqPkY/N+6nEDNi1E1NS9G1dS8GFVT82JUTc2LUTU1L0bV1LwYVVPzYlRN
zYtRNTUvRtXUvBhVU/NiVE3Ni1ky3iRB0wdaXswRW59L9y+l5cWOnO066+r4
k5YXQ11elURE/KLlxY4kN0X7hP+m5cW6GT6EJ6x20PJiozaBV/b599DyYiXm
D7ckHOun5cXmmlIOG84O0vJiZ3yJK9WuI7S82CP1YzXWsuO0vNiocon6l09k
Wl7sv08zScuLUTU1L0bV1LwYVVPzYlRNzYtRNTUvRtXUvBhVU/NiVE3Ni1E1
NS9G1dS8GFVT82I5EwH78xwotLzYtwCpW38p47S8GIFz6cM2lVGg5sV4zR6o
3coZAmpeTPuZ6o/c+X6g5sVETnd1FGn1AjUv9irj+ivyoy6g5sWOh3lZHRBq
A2peLJGdobOTtQmoebGjD7Rdt3DXATUvhqYMDRw2KAdqXqx7VO2VjFceUPNi
Gw/TgI/cQqh5MWr/ouav8NOFIu99QoHsprDbu3sFC0XNvq0tF4A0/VK2vWkZ
VoR5Pwx3mYBOJtm33QM2mOfl99zBG+OXmpeithc1j0TV1DxSsfLv+rOyZKDm
fQgLnUv7vJKBmveh3g81P0PVjWnpgs98VjHLuCD5UzPZMEymxEo7/sDE6XvT
lurHaXkX06j+EqnzFFp+hPr/qfmRI/xyBOZaMlDzGY4HW3/GdWbCM/+ws6dq
17DYZ0PJ7BwJ8FuaNeR8cAlm4Cl8SXoLGS5dkrbLW4unXY+aB6Bq6vl6lHdL
gZzXM6Cer6feP/W8OlV/Lx/jFW1YxfD6uMvzDlmgOXB1S9BSFXYugfdzuvc4
7Xx5/JV6n1tsFNr57DmC2ZbOnRvz57/nn0W4QxQupWcDY5vGUqzkOuaNqed3
n3wJVRz3SJz1pVjATn33zvIJ+CryMOA1Tzjtfqnnbamaen7VG721N6EzFrq9
04+pN6xjhFBMqrPDFQxViPR0P55ifN/nl/+kUOAaEsq68+972t9Tzx/6sTvO
78IpQD3PR9AKkD/k5Q/U83y0+ezf83FUjRsEPbFbWsUIVz/cr5LJBFfLlIZP
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
      "], {{{}, {}, {}, {}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwV1XccTXUYgPFLRiJ77529s2WPzOw9C9m7kkrZm2jYq0GTkL13g5LVoolC
E5WU+r5/PJ/f+zznfrjuOedVoM+wNkOTJhKJJDhqSJ0skZiSMpGYiprmAaiB
h1Ed/VEN/VAVW9AX81EFpZMnEpuddzgfcuZxzsez5tecXznbO79AZXMp5yoU
TZFIvMvXmyuZkzofw208qOeOPwPZXFuFedpaXtq8Ged5O/45+vF7eUnzShTh
67BJW8crmnciiflR/ItpvI/ruczzkJWvxFxtDS8V3w/neFv+GfrySryEeQUK
87exUXubVzDvQML8CP7BVN7b9ZzmucjCV2CO9iovGd8TX/I2/NP4HXlFXty8
HIX4W9igvcXLm7fjPz6G38IU3ovnMM9BZr4cs7VXeIn4nviCt+Zn43fmFXgx
8zIU5G/iHe1NXs68Dbf5aP43JvOePLt5NjLxZZilvcyLx/fE5/wBfgZ9eHl+
j3kpCvA3sF77F6O0m5ik9eDZzLOQkS/FTO0ztNJOo7dWjhc1L0F+/nrcc+0f
jNT+wkStO89qnokMfAlmaJ+ipXYKvbSyvIh5MfLx1+LearcwQvsTE7RuPIt5
BtLzxZiunUUL7SR6amV4YfMi5OVr4x5qf2O49gee0bryzObpSMcXYZp2Bs21
T9BDK80LmRciD18T90q7iWHaDTytdeGZ4vlGWr4QU7XTaKadQHetFH8Df2Go
dh3j9c48Yzy3uJu/iCnaKTTVPkY3rSR/HX9iiHYNT+mdeIZ4HpGGv4DJ2knc
r32ErlqJ2A/4A4O13/Gk3pGnj+cMqfnzmKR9gibacXTRisc+wA0M0n7DE3oH
ni6eJdzFn8NE7QQaa8fQWSsW7zmuY6D2K8bp7fkEfIxG2ofopN8T7yuuxY7U
fsHjejv+DD5CQ+0DdNSLxnuH32OXaj9jrN6WP43jaKC9jw56kXh/8FvsXO2n
2Id6Gz4ex1Bfew/t9cL8UTu7tfMpfIh6rh1FO9cL8YIoEO8hnsQHqOv6EbT1
mfz8Jfwa+127GvtRb8WfwPuoox1GGz0fX41f0Fe7EntOb8nTxvuGVHwBxsWf
zYvFPsF7vDY/hNY8L99ormLeg4Lmms6D8cyZcztfjd3vc/c5D8fO0Ms6t+Jn
vZpzHx6Kf7fzsnOMs0X8vs7aOBJ/f9yX+D8Cu3B33FdndezHhPhdnXdiPh6P
39tZC4ewOu5TPAOxs3DU9arOvbjPtYN4wJxH32CubN6NAuYazgPxHphzOV/B
ynh3eBnzFvzEH+Q/YjRvztPEfkBK/izGakdQSzuAVlpuvgJX0Uf7AaP0Zvwx
HEZNbT9a6rn4clxBb+0SRupN41nCIdTQ9qGFnpPniF0f7248E563R5wHUd1n
9qK5z2WLdxNjcCDui74HzVzLypfhMnppFzFCb8xHY3/8ltpuNNWz8KX4ET21
CxiuN+KjsA9VtF24X8/Ml+AH9NC+xzC9IR+Jvais7UQTPRNfjEvorn2HoXoD
njp2KFLweRih7cG92g401jLyRbiIbtq3GKLX53fFDkVyPhfDtd2opG1HIy0D
X4gL6Kp9g8F6PZ4qdiiS8TkYpu1CRW0bGmrp+Yv4Hl20rzFIr8vvjB2KO/hs
DNV2ooK2FQ20dPwFfIfO2lcYqNfhKWOHIimfhSHaDpTXtqC+lpbnNz+PnPzl
2NHat+iknceAePd4itipSMJnYrC2HeW0zagX7yLPZ34OOfhLsbO1b9BRO4eH
4z3jyWPnIsFnYJC2DWW1d1FXS8Pzmhcge7y7sY+0r9FB+xL9493myWIn4z9M
1wZqW1GGb0Id7X8lKWRr
            "]]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           
           PolygonBox[{{1743, 1920, 1921, 1907, 1865, 1891, 1802, 1815, 1755, 
            1754, 1753, 1752, 1751, 1750, 1749, 1748, 1747, 1746, 1745, 1744, 
            1793}}], 
           
           PolygonBox[{{1847, 1924, 1925, 1792, 1910, 1879, 1905, 1853, 1874, 
            1900, 1832, 1848, 1869, 1895, 1814, 1827, 1844, 1864, 1890, 1801, 
            1809, 1822, 1839, 1860, 1886, 1791, 1790, 1789, 1788, 1787, 1786, 
            1785, 1784, 1783, 1782, 1781, 1800, 1808, 1821, 1838, 1859, 1885, 
            1780, 1852, 1873, 1899, 1831, 1877, 1903}}], 
           
           PolygonBox[{{1902, 1922, 1923, 1797, 1909, 1878, 1904, 1851, 1872, 
            1898, 1829, 1845, 1866, 1892, 1805, 1818, 1835, 1856, 1882, 1767, 
            1811, 1824, 1841, 1862, 1888, 1796, 1804, 1817, 1834, 1855, 1881, 
            1766, 1765, 1764, 1763, 1762, 1761, 1760, 1759, 1758, 1757, 1795, 
            1803, 1816, 1833, 1854, 1880, 1756, 1810, 1823, 1840, 1861, 1887, 
            1794, 1850, 1871, 1897, 1828, 
            1876}}]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1mWgVEUcQPFHdzfS3d2NSGOR0t0lIChIg9KhlCIg3SmhdKcSSjdIIwrS
IeBvPhzu/5yZfTx2750lY6vutbtFioiIaBslIiJcF0SOiPjHUAEbeAu80t7D
VC0uCmt/8HfQlV/j45Daz2itrddywxix0B/3zRXxM2+J/7TKmKbFQxHtOE+D
8Mtc5+Pxjp/XRtug5QGNWMQfmN/FL7wVXmtV8J0WH0W1EzwtuvMbfALS+AFt
tZ+1vIiqLeb/mithI2+NN1pVfK8lQDHtJE+HT/lNPhHRsER7qL2HTbwN3mrV
MF1LiOLaKZ4ePfgt/g2iY6n2SKuMzeFzQPiHVtd/0BKhhHSaZ0BPfpt/ixhY
pj3WqmALb4dIXl9Dn6ElRkntDM+IXvwOn4SYWK490apiK2+PyF5fU5+pJUEp
7SzPhM/4XT4ZsbBCe6pVwzbeAaVxTs+M3vpffApiY6X2TKuO7bwjyuC8ngV9
9Ht8KuJglfZcq4EdvBPK4oKeFZ/rf/NpiIvV2gutJnbyziiHeFhj7aVeC7t4
l/AeugnKu8ZHAiTET/a9sud97OZdUQEX9Wz4Qv+Hf4dEWKv9p32APbwbKuKS
nh199fv8eyTGOu219iH28u7hI/ee19JnaUnD/a1d5jnQjz8I75M9X/HTfDpP
y9vxX3h984/mfOH3Nk813w6fn33rzW/MH6GOtRl8n57f/IW5mesha5+4zuEt
XT+1HtX1fd40/Gzr9Vxn8RauycJn6Potb+56nTdyncdbuVby+ivmnGjCv7Re
13VmeN7CZ2j+2nxGb2ieG+53PZ25vXmj3sA825w/vLfmaeY74f2xb4P5rflj
7OcFrPfVfuU9wrPJP+CzefLwfGpXeS705w/5DCTDz+GgQm39gLEnKuNPLTcG
6I/4TCTHL1ok1NEP8l6oghRIiVTYaD0y6tpziH+GquGvcb+ldt1kLQrqWf+V
90Y1XNPyYKD+mM8K5yA2a1FRX/+N90F1XNfyYpD+hP8Yzjls0aKhgX6Yf44a
uBHuEQzWn/LZ4T7CVi06PtGP8C9QEzfD+48h+jM+J3xG2KbFQEP9KO8bzjPv
+YfaHC1FeM60W7wAhvLnfC7SY7sWE430Y7xfeBa9/iNtrpYy3MfabV4Qw/gL
Pg8ZsEOLhcb67/zLcJ55/cfaPC1VuGe0O7wQhvOXfD4yYqcWO9yb+h+8fzjP
vL62Nl9LHZ5P7S4vjK/4K74AmbBLixOeDf04HxDON6+voy3Q3gnPm/YXL4Kv
+X98Yfj329dB26QVQGZtN48bnkV+gg8M5599dbWFWppwr2v3eFGM4K/5ovB+
2NdR26wVRBZtD48Xnk1+kg8K56N99bRFWlrU1v7mxTCSv+GLw/tjXydti1YI
WbW9PH549vkpPjicqfbV1xZr6cLZov3Di2MUf8uXhPfLvs7aVq0wsmn7eIJw
1vDTfEg4g+1roC3R0ofzQrvPS2A0D/9BWeqS2b4u2jZeBNm1/TxhOHv4GV7Q
nn78Nz6UJ+Cf8KU8QzjLtAe8JMbwSChnzwh+1rzMehbelW/nRZFDO8AToTU/
ywuFs40f5sN4Qt6QL+MZw7ms/ctLYSyPjPL2jOTnzMutZ+Xd+A5eDDm1gzwx
2vBzvLA9/fkRPpwn4o34cp4pnJXaQ14a43gUVLBnFD9vXmE9G+/Od/LiyKUd
4knQlp/nRewZwI/yr3hi3pivCPdp+I7QHvEyGM+joqI9o/kF80rr2cP3B9/F
SyC39itPinb8Ai9qz0B+jH/Nk/AmfGW4f8N3gvaYl8UEHi18J9ozhl80r7Ke
g/fgu3lJ5NF+48nQnl/kxewZxH/nI3hS3pSvCvd1+M7SnvBymMijo5I9Y/kl
82rrOXlPvoeXQl7tME+ODvwSL27PYP4HH8mT8WZ8dbjf0Vh7ysvjGx4jfCfZ
M45fNq+xnov34nt5aeTTjvAU6Mgv8xL2DOHH+SienDfna8JzgCbaM14B3/KY
qGzPeH7F/JP13Pwzvo+XCecc/47fNee3ftScEp34FV7S+lB+go/mKXgL/lN4
JlCDT+I3zE2tPzdXxCQeC1WsT+BXzWut5+G9+X5eNpyT/Hv+VzgPrR8zp0Jn
fpWXsj6Mn+RjeErekq8Nzwpq8sn8prmZ9RfmdzGZx0ZV6xP5n+Z11vPyPvxA
eObDucqn83vh/LT+uzk1uvA/eWnrw/kpPpan4q34uvAMoRafwm+Zm1t/aa6E
KTwOqln/hl8zr7eej3/OD4azIJzD/Af+d7hPzPPD+eJayN7/AaTImD4=
           "]]}, Annotation[#, "Charting`Private`Tag$55858#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{868, 999, 976, 957, 940, 927, 918, 869, 870, 871, 872, 873,
            874, 875, 876, 877, 878, 879, 880, 1000, 977, 958, 941, 928, 1009,
            986, 1022}], 
          
          LineBox[{1017, 995, 952, 1013, 990, 972, 919, 1006, 983, 964, 947, 
           935, 881, 1001, 978, 959, 942, 929, 920, 882, 883, 884, 885, 886, 
           887, 888, 889, 890, 891, 1002, 979, 960, 943, 930, 921, 1007, 984, 
           965, 948, 936, 892, 1003, 980, 961, 944, 931, 1010, 987, 968, 953, 
           1014, 991, 973, 1019, 997, 1024, 922}], 
          
          LineBox[{1021, 966, 994, 949, 971, 937, 954, 893, 923, 894, 895, 
           896, 897, 898, 899, 900, 901, 902, 903, 904, 932, 924, 950, 938, 
           1011}], 
          
          LineBox[{969, 1018, 996, 955, 1015, 992, 974, 905, 1004, 981, 962, 
           945, 933, 925, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 
           916, 1005, 982, 963, 946, 934, 926, 1008, 985, 967, 951, 939, 1012,
            989, 970, 956, 1016, 993, 975, 1020, 998, 1025, 917}]}, 
         Annotation[#, "Charting`Private`Tag$55858#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwV1XfYT2UYB/CfXSh7k52991ZWS0llbwoRIUUkq+yZPcrIaJC9aYumUVkV
skNDyYw+9x+f67m/3/e93uuc8zznvPk79W7aK0kikdiZNJFIkzyRqJsykViX
IpEozSb5WcbobssDSU4tXVfdT+ZmHJPfYJEuO2/o7iGt7j55vbkMm+UejNUl
eFmXgtq6bvLP5uYcl6exWJeDabq83KW7X95gLssWuSfjdEkYpEtJHV13+Rdz
C36Vp/O2LifTdfm4W1dP3mgux1b5OcbrkjJYl4q68Rzko+aWnJBnkI76+k26
8myTezFBl4xXdHdwX9y3fMzcipPyTNLTQL9ZV4Htcm8m6pIzRHcn98d9ysfN
rTklzyIDDfVbdBXZIT/PJF0KXtWlpl7cl/yruQ2n5dlkpJF+q64SH8p9mKxL
yVBdGurHfcknzG05I88hEw/ot+kq85HcN+4p7kN/UteOs/JcMvOgfruuCh/L
/eIe4rr1p3TtOSfPIwsP6XfoqvKJ/EJcc1yn/rSuA7/J88nKw/oPddX4VO4f
10g2HvGzj/TV+Ux+kcGpXJM1OznISWO/97HfqcHn8ktxHXFv+jO6jpyX3yQX
j+o/0dVkpzwgriPuTX9W14kL8lvk5jH9p/Ee8YU8kCm6VAyL94ZH4l7lc+bO
XJQ3yqV5V14gLzHnYkbcq7UG+eMcWCuzxpzH7zUxfxbvWeyRuSq79KusRfiS
RXGv1lp8E++mn0+13sFuhsfzt1bna+6K82qtxFesjnux1uFbGsezt/6m32Xt
EvttrcbvfrbJWob34plZa7NQv9Sam5mxR9aaFIizaa3C2vi2+L3HzZ/Hu85u
ebVclMXyoPgeme9kRLznPBr7LZ83P80f8b0iL031O+M958s4E7FHse/6C7pn
+DO+R+TjCf0X8V7zlfxKPGPyU4CCPBnPON5dvpaHxDXH33TeClmfiuca7ybf
yK/GdcTZ0V/UdeWv+GZRmGaxT/Eu8q08NK4jzk48T103LsWZ4F6ax77oGvCd
PCyuiZf1f+i683c8b4rQIvZV15A98vC4Rgbp/9Q9yz/yMorSMs6JrhF75RFM
06VmpC4dzeJZyn+Ze3BZXk4xWsU50T3APnkk03VpeE2XPv4XxLOVL5l78q/8
DsVprf9O9yD75deYoUvL67oM8e2P5y7/bX6OK/K7lKCNfo/uIb6XX2dmnGtG
6TLGtz72Rf7H3Iur8nuUpK1+r+5hfpBHMUt3N6N1meJbH/skXzb35pr8fjxD
XR5m6QpSStdO3hfvPT/Ko5mtS8cYXeb49sc+yv+an+e6vCKeqe4eZusKUVrX
Xt5vbswBeQxzdOkZq8sS/wtin+Ur5j7ckFfGM9blZY6uMGV0HeTv4z3ioDyW
uboMjNNlpW2cA/mquS835Q/imevyMVd3L2V1HeUfzI9xSB7HPF1Gxuuy0S7O
hXzN3I//4psVexDfOebpilBO10n+0dyEw/IauRhvy+Pl+eZMTJCz0z7OjHzd
/AK35M1yWd6XV8dexbeH+XJRyus6ywfMj3NEXisXZ4k8If4nmDMzUc5Bhzhb
8g1zf27LW+RyrJDXxB6aC/KmXIwKui7yQXNTfpLXySVYKk+M/yXmLEySc9Ix
zqB80/wiCbbK5VlpXht7ay7EW3JxKuqelg+Zn+Bneb1ckmXyJHmBOSuT5Vx0
irMp/2d+iSRskyvwgXld7Lm5MAvkElTSPSMfNj/JL/IGuRTL5cnyQnM2psi5
6ay7ZR1A0rhWP1tlXR/ft/hfYS5JZfmI9SmOxtm1TrFOteahizmZdYO1lLVK
/Czum41UjWujGl2pTjdq0J2a/A+DgWNM
           "]]}, Annotation[#, "Charting`Private`Tag$55858#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{1743, 1793, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751,
            1752, 1753, 1754, 1755, 1815, 1802, 1891, 1865, 1907}], 
          
          LineBox[{1902, 1876, 1828, 1897, 1871, 1850, 1794, 1887, 1861, 1840,
            1823, 1810, 1756, 1880, 1854, 1833, 1816, 1803, 1795, 1757, 1758, 
           1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1881, 1855, 1834, 
           1817, 1804, 1796, 1888, 1862, 1841, 1824, 1811, 1767, 1882, 1856, 
           1835, 1818, 1805, 1892, 1866, 1845, 1829, 1898, 1872, 1851, 1904, 
           1878, 1909, 1797}], 
          
          LineBox[{1906, 1842, 1901, 1875, 1825, 1896, 1870, 1849, 1812, 1893,
            1867, 1846, 1830, 1768, 1883, 1857, 1836, 1819, 1806, 1798, 1769, 
           1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1884, 
           1858, 1837, 1820, 1807, 1799, 1889, 1863, 1843, 1826, 1813, 1894}], 
          
          LineBox[{1847, 1903, 1877, 1831, 1899, 1873, 1852, 1780, 1885, 1859,
            1838, 1821, 1808, 1800, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 
           1788, 1789, 1790, 1791, 1886, 1860, 1839, 1822, 1809, 1801, 1890, 
           1864, 1844, 1827, 1814, 1895, 1869, 1848, 1832, 1900, 1874, 1853, 
           1905, 1879, 1910, 1792}]}, 
         Annotation[#, "Charting`Private`Tag$55858#4"]& ], {
         Directive[{
           Opacity[0.2], 
           Hue[0.67, 0.6, 0.6]}], 
         LineBox[{1028, 1029, 1027}], 
         LineBox[{1023, 1030, 988}], 
         LineBox[{1033, 1034, 1032}], 
         LineBox[{1913, 1914, 1912}], 
         LineBox[{1908, 1915, 1868}], 
         LineBox[{1918, 1919, 1917}]}}}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, 
     PlotRange -> {{-4, 4}, {0., 1.}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"f", "(", 
         RowBox[{
           TagBox["x", HoldForm], ",", 
           RowBox[{"-", "1"}]}], ")"}], 
       RowBox[{"f3", "(", 
         RowBox[{
           TagBox["x", HoldForm], ",", "1", ",", "2", ",", "0.5`"}], ")"}], 
       RowBox[{"NotNeuron", "(", 
         RowBox[{"f", "(", 
           RowBox[{
             TagBox["x", HoldForm], ",", 
             RowBox[{"-", "1"}]}], ")"}], ")"}], 
       RowBox[{"NotNeuron", "(", 
         RowBox[{"f3", "(", 
           RowBox[{
             TagBox["x", HoldForm], ",", "1", ",", "2", ",", "0.5`"}], ")"}], 
         ")"}]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.880192655886133*^9, 3.880192753003688*^9, {3.8801928158002796`*^9, 
   3.8801928374025154`*^9}},
 CellLabel->
  "Out[419]=",ExpressionUUID->"f8ad2408-19bf-4cec-a799-a657d0a093e1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:041d\:0435\:0439\:0440\:043e\:043d \"\:0418\:043c\:043f\:043b\:0438\
\:043a\:0430\:0446\:0438\:044f\"", "Subsubsection",
 CellChangeTimes->{{3.880192878313855*^9, 3.880192896254881*^9}, {
  3.880193302803135*^9, 
  3.880193307539406*^9}},ExpressionUUID->"e9af800b-8ea6-4750-9129-\
b701a7b11fe5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"x", ",", 
         RowBox[{"-", "1"}]}], "]"}], ",", 
       RowBox[{"f", "[", 
        RowBox[{"x", ",", "1"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"ImplNeuron", "[", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"x", ",", "c1"}], "]"}], ",", 
         RowBox[{"f", "[", 
          RowBox[{"x", ",", "c2"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "xmax"}], ",", "xmax"}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Filling", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"3", "\[Rule]", "Axis"}], "}"}]}]}], "\[IndentingNewLine]", 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"c1", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "0.05"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"c2", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "0.05"}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.880192907622532*^9, 3.8801929081995645`*^9}, {
  3.880192945985726*^9, 3.8801929482388544`*^9}, {3.880193017582821*^9, 
  3.8801930330377045`*^9}, {3.8801933325488358`*^9, 3.8801933346039534`*^9}},
 CellLabel->
  "In[443]:=",ExpressionUUID->"b3d44317-a702-41e4-a269-3df04fc34889"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`c1$$ = 1., $CellContext`c2$$ = 0.25, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`c1$$], -1, 1, 0.05}, {
      Hold[$CellContext`c2$$], -1, 1, 0.05}}, Typeset`size$$ = {
    689., {111., 115.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`c1$$ = -1, $CellContext`c2$$ = -1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[{
         $CellContext`f[$CellContext`x, -1], 
         $CellContext`f[$CellContext`x, 1], 
         $CellContext`ImplNeuron[
          $CellContext`f[$CellContext`x, $CellContext`c1$$], 
          $CellContext`f[$CellContext`x, $CellContext`c2$$]]}, \
{$CellContext`x, -$CellContext`xmax, $CellContext`xmax}, PlotLegends -> 
        "Expressions", Filling -> {3 -> Axis}], 
      "Specifications" :> {{$CellContext`c1$$, -1, 1, 
         0.05}, {$CellContext`c2$$, -1, 1, 0.05}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{737., {164.8, 170.2}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.8801929152949705`*^9, 3.8801929488018866`*^9, 3.880192996315604*^9, 
   3.8801930362568893`*^9, {3.880193316608924*^9, 3.880193335383998*^9}},
 CellLabel->
  "Out[443]=",ExpressionUUID->"c8c3d957-8a97-4166-b755-38203733586a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"x", ",", 
         RowBox[{"-", "1"}]}], "]"}], ",", 
       RowBox[{"f", "[", 
        RowBox[{"x", ",", "1"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"ImplNeuron1", "[", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"x", ",", "c1"}], "]"}], ",", 
         RowBox[{"f", "[", 
          RowBox[{"x", ",", "c2"}], "]"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"NotNeuron", "[", 
        RowBox[{"ImplNeuron1", "[", 
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{"x", ",", "c1"}], "]"}], ",", 
          RowBox[{"f", "[", 
           RowBox[{"x", ",", "c2"}], "]"}]}], "]"}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "xmax"}], ",", "xmax"}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Filling", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"4", "\[Rule]", "Axis"}], "}"}]}]}], "\[IndentingNewLine]", 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"c1", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "0.05"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"c2", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "0.05"}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{
  3.8801933593243675`*^9, {3.880193395596442*^9, 3.8801934578600035`*^9}},
 CellLabel->
  "In[447]:=",ExpressionUUID->"38864289-a53a-4556-8ba7-d344971f2d09"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`c1$$ = 
    0.050000000000000044`, $CellContext`c2$$ = 0.6500000000000001, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`c1$$], -1, 1, 0.05}, {
      Hold[$CellContext`c2$$], -1, 1, 0.05}}, Typeset`size$$ = {
    768., {111., 115.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`c1$$ = -1, $CellContext`c2$$ = -1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[{
         $CellContext`f[$CellContext`x, -1], 
         $CellContext`f[$CellContext`x, 1], 
         $CellContext`ImplNeuron1[
          $CellContext`f[$CellContext`x, $CellContext`c1$$], 
          $CellContext`f[$CellContext`x, $CellContext`c2$$]], 
         $CellContext`NotNeuron[
          $CellContext`ImplNeuron1[
           $CellContext`f[$CellContext`x, $CellContext`c1$$], 
           $CellContext`f[$CellContext`x, $CellContext`c2$$]]]}, \
{$CellContext`x, -$CellContext`xmax, $CellContext`xmax}, PlotLegends -> 
        "Expressions", Filling -> {4 -> Axis}], 
      "Specifications" :> {{$CellContext`c1$$, -1, 1, 
         0.05}, {$CellContext`c2$$, -1, 1, 0.05}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{816., {164.8, 170.2}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.8801934470033827`*^9, 3.8801934584560375`*^9}},
 CellLabel->
  "Out[447]=",ExpressionUUID->"b4d76345-54db-415d-9b15-3721e0d0a6e8"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:041d\:0435\:0447\:0435\:0442\:043a\:0438\:0439 \:0432\:044b\:0432\
\:043e\:0434", "Subsection",
 CellChangeTimes->{{3.880193671210206*^9, 
  3.8801936831898913`*^9}},ExpressionUUID->"ed6f867b-b61f-497b-bdd0-\
ce54288d0e36"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Tn", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{"Min", "[", 
    RowBox[{"x", ",", "y"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Sn", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{"Max", "[", 
    RowBox[{"x", ",", "y"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"A1", "[", 
    RowBox[{"x_", ",", "w_"}], "]"}], ":=", 
   RowBox[{"f", "[", 
    RowBox[{"x", ",", "w"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"A2", "[", 
    RowBox[{"x_", ",", "w_"}], "]"}], ":=", 
   RowBox[{"f", "[", 
    RowBox[{"x", ",", "w"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"B1", "[", 
    RowBox[{"x_", ",", "w_"}], "]"}], ":=", 
   RowBox[{"f", "[", 
    RowBox[{"x", ",", "w"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"B2", "[", 
     RowBox[{"x_", ",", "w_"}], "]"}], ":=", 
    RowBox[{"f", "[", 
     RowBox[{"x", ",", "w"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Net1", "[", 
     RowBox[{
     "x_", ",", "y_", ",", "w11_", ",", "w12_", ",", "w13_", ",", "w14_", ",",
       " ", "w21_", ",", " ", "w22_", ",", "w23_", ",", "w24_"}], "]"}], ":=",
     "\[IndentingNewLine]", 
    RowBox[{"NotNeuron", "[", "\[IndentingNewLine]", 
     RowBox[{"Sn", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Tn", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"w21", "*", 
          RowBox[{"A1", "[", 
           RowBox[{"x", ",", "w11"}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"w22", "*", 
          RowBox[{"B1", "[", 
           RowBox[{"y", ",", "w13"}], "]"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Tn", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"w23", "*", 
          RowBox[{"A2", "[", 
           RowBox[{"x", ",", "w12"}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"w24", "*", 
          RowBox[{"B2", "[", 
           RowBox[{"y", ",", "w14"}], "]"}]}]}], "]"}]}], 
      "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8801935120821047`*^9, 3.8801935125231295`*^9}, {
   3.8801936669699636`*^9, 3.880193755505028*^9}, {3.880193789201955*^9, 
   3.880193846880254*^9}, {3.8801938785200634`*^9, 3.8801940133757772`*^9}, {
   3.880194083046762*^9, 3.8801945798351765`*^9}, {3.8801946446598845`*^9, 
   3.8801947066434298`*^9}, {3.8801947710761147`*^9, 3.880194833961712*^9}, 
   3.8801949684484043`*^9},
 CellLabel->
  "In[511]:=",ExpressionUUID->"dade0e2d-c76b-4444-ab00-c2274e9cfa80"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"net1", "=", 
   RowBox[{"Net1", "[", 
    RowBox[{
    "x", ",", "y", ",", "w11", ",", "w12", ",", "w13", ",", "w14", ",", " ", 
     "w21", ",", " ", "w22", ",", "w23", ",", "w24"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Plot3D", "[", 
      RowBox[{
       RowBox[{"Net1", "[", 
        RowBox[{
        "x", ",", "y", ",", "w11", ",", "w12", ",", "w13", ",", "w14", ",", 
         " ", "w21", ",", " ", "w22", ",", "w23", ",", "w24"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "xmax"}], ",", "xmax"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"y", ",", 
         RowBox[{"-", "xmax"}], ",", "xmax"}], "}"}]}], " ", "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"RegionPlot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Net1", "[", 
         RowBox[{
         "x", ",", "y", ",", "w11", ",", "w12", ",", "w13", ",", "w14", ",", 
          " ", "w21", ",", " ", "w22", ",", "w23", ",", "w24"}], "]"}], ">", 
        "alpha"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "xmax"}], ",", "xmax"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"y", ",", 
         RowBox[{"-", "xmax"}], ",", "xmax"}], "}"}]}], "]"}]}], 
    "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"w11", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "0.05"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"w12", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "0.05"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"w13", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "0.05"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"w14", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "0.05"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"w21", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "0.05"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"w22", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "0.05"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"w23", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "0.05"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"w24", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "0.05"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"alpha", ",", "0", ",", "2", ",", "0.05"}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.880194843707269*^9, 3.880194886577721*^9}, {
   3.8801949239448586`*^9, 3.88019493113627*^9}, {3.880194970089498*^9, 
   3.880194970529523*^9}, {3.880195007752652*^9, 3.8801950181122446`*^9}, {
   3.880195117376922*^9, 3.8801951202480865`*^9}, {3.8801951529779587`*^9, 
   3.880195198551565*^9}, {3.8801952314634476`*^9, 3.8801952319674764`*^9}, {
   3.8801952692076063`*^9, 3.880195335719411*^9}, {3.880195377702812*^9, 
   3.880195381006001*^9}, 3.8801954264385996`*^9},
 CellLabel->
  "In[536]:=",ExpressionUUID->"015ff523-3310-4a82-a31b-cefca83dae79"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`alpha$$ = 
    1.4000000000000001`, $CellContext`w11$$ = 
    0.20000000000000018`, $CellContext`w12$$ = 
    0.4500000000000002, $CellContext`w13$$ = -0.1499999999999999, \
$CellContext`w14$$ = -1., $CellContext`w21$$ = -0.7, $CellContext`w22$$ = -1, \
$CellContext`w23$$ = -1, $CellContext`w24$$ = -1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`w11$$], -1, 1, 0.05}, {
      Hold[$CellContext`w12$$], -1, 1, 0.05}, {
      Hold[$CellContext`w13$$], -1, 1, 0.05}, {
      Hold[$CellContext`w14$$], -1, 1, 0.05}, {
      Hold[$CellContext`w21$$], -1, 1, 0.05}, {
      Hold[$CellContext`w22$$], -1, 1, 0.05}, {
      Hold[$CellContext`w23$$], -1, 1, 0.05}, {
      Hold[$CellContext`w24$$], -1, 1, 0.05}, {
      Hold[$CellContext`alpha$$], 0, 2, 0.05}}, Typeset`size$$ = {
    386.8, {89., 92.898}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`alpha$$ = 
        0, $CellContext`w11$$ = -1, $CellContext`w12$$ = -1, \
$CellContext`w13$$ = -1, $CellContext`w14$$ = -1, $CellContext`w21$$ = -1, \
$CellContext`w22$$ = -1, $CellContext`w23$$ = -1, $CellContext`w24$$ = -1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> {
        Plot3D[
         $CellContext`Net1[$CellContext`x, $CellContext`y, \
$CellContext`w11$$, $CellContext`w12$$, $CellContext`w13$$, \
$CellContext`w14$$, $CellContext`w21$$, $CellContext`w22$$, \
$CellContext`w23$$, $CellContext`w24$$], {$CellContext`x, -$CellContext`xmax, \
$CellContext`xmax}, {$CellContext`y, -$CellContext`xmax, $CellContext`xmax}], 
        RegionPlot[$CellContext`Net1[$CellContext`x, $CellContext`y, \
$CellContext`w11$$, $CellContext`w12$$, $CellContext`w13$$, \
$CellContext`w14$$, $CellContext`w21$$, $CellContext`w22$$, \
$CellContext`w23$$, $CellContext`w24$$] > $CellContext`alpha$$, \
{$CellContext`x, -$CellContext`xmax, $CellContext`xmax}, {$CellContext`y, \
-$CellContext`xmax, $CellContext`xmax}]}, 
      "Specifications" :> {{$CellContext`w11$$, -1, 1, 
         0.05}, {$CellContext`w12$$, -1, 1, 0.05}, {$CellContext`w13$$, -1, 1,
          0.05}, {$CellContext`w14$$, -1, 1, 0.05}, {$CellContext`w21$$, -1, 
         1, 0.05}, {$CellContext`w22$$, -1, 1, 0.05}, {$CellContext`w23$$, -1,
          1, 0.05}, {$CellContext`w24$$, -1, 1, 0.05}, {$CellContext`alpha$$, 
         0, 2, 0.05}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{674., {118.3, 123.7}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.880194935927544*^9, 3.8801949721856174`*^9, 3.8801950196863346`*^9, {
   3.880195109750486*^9, 3.88019512135815*^9}, 3.8801951994336157`*^9, 
   3.8801952325315084`*^9, {3.88019529811526*^9, 3.880195344867934*^9}, 
   3.8801953818150473`*^9, 3.880195427218644*^9},
 CellLabel->
  "Out[537]=",ExpressionUUID->"c2329f00-deb3-4818-ab30-67180bdf9bc4"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1108.2, 606.},
WindowMargins->{{Automatic, -1137}, {Automatic, 0}},
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (June 9, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"28c66e06-5910-4a44-8711-aac900c79b1b"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 241, 4, 54, "Subsection",ExpressionUUID->"e57e0f6b-5d0c-4c05-950e-6eb40f72ba9b"],
Cell[824, 28, 999, 30, 68, "Input",ExpressionUUID->"5c64d221-67bf-44c3-9b73-d80d53de7923"],
Cell[1826, 60, 2488, 77, 224, "Input",ExpressionUUID->"e13c5f5d-34de-46a6-a678-eb53eceff1fb"],
Cell[CellGroupData[{
Cell[4339, 141, 260, 7, 71, "Subsubsection",ExpressionUUID->"fefe1b37-39d2-4013-8bc2-77392e5d016c"],
Cell[CellGroupData[{
Cell[4624, 152, 1923, 45, 283, "Input",ExpressionUUID->"a838124d-d38e-4c2b-95ff-b0b08222c66d"],
Cell[6550, 199, 2210, 46, 354, "Output",ExpressionUUID->"6dc0cd43-1ad9-4264-92fa-7b09d06888f5"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[8809, 251, 321, 8, 71, "Subsubsection",ExpressionUUID->"2616a8e2-b965-46af-b6a2-2f4cce639465"],
Cell[CellGroupData[{
Cell[9155, 263, 1551, 39, 263, "Input",ExpressionUUID->"cda38e02-9231-4502-9818-8bb0522c1976"],
Cell[10709, 304, 2105, 44, 354, "Output",ExpressionUUID->"74034066-5a6a-4f81-9624-88e13f1ab23b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[12863, 354, 257, 4, 45, "Subsubsection",ExpressionUUID->"c8b85d00-17ba-49c0-a6c1-c5e71d03b490"],
Cell[CellGroupData[{
Cell[13145, 362, 1450, 36, 244, "Input",ExpressionUUID->"b44bf072-9d02-4811-9dea-0881038456b2"],
Cell[14598, 400, 62306, 1135, 245, "Output",ExpressionUUID->"f8ad2408-19bf-4cec-a799-a657d0a093e1"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[76953, 1541, 303, 5, 45, "Subsubsection",ExpressionUUID->"e9af800b-8ea6-4750-9129-b701a7b11fe5"],
Cell[CellGroupData[{
Cell[77281, 1550, 1647, 41, 263, "Input",ExpressionUUID->"b3d44317-a702-41e4-a269-3df04fc34889"],
Cell[78931, 1593, 2197, 45, 354, "Output",ExpressionUUID->"c8c3d957-8a97-4166-b755-38203733586a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81165, 1643, 1817, 48, 283, "Input",ExpressionUUID->"38864289-a53a-4556-8ba7-d344971f2d09"],
Cell[82985, 1693, 2336, 48, 354, "Output",ExpressionUUID->"b4d76345-54db-415d-9b15-3721e0d0a6e8"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[85382, 1748, 231, 4, 54, "Subsection",ExpressionUUID->"ed6f867b-b61f-497b-bdd0-ce54288d0e36"],
Cell[85616, 1754, 2821, 76, 400, "Input",ExpressionUUID->"dade0e2d-c76b-4444-ab00-c2274e9cfa80"],
Cell[CellGroupData[{
Cell[88462, 1834, 3229, 83, 322, "Input",ExpressionUUID->"015ff523-3310-4a82-a31b-cefca83dae79"],
Cell[91694, 1919, 3760, 70, 261, "Output",ExpressionUUID->"c2329f00-deb3-4818-ab30-67180bdf9bc4"]
}, Open  ]]
}, Open  ]]
}
]
*)

